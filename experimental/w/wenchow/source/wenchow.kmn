c wenchow keyboard for romanized wenchownese üe-tsiu-‘ó.溫州話羅馬字輸入法
store(&VERSION) '10.0'
store(&NAME) 'wenchow'
store(&COPYRIGHT) '© cathaylab'
store(&KEYBOARDVERSION) '1.1.4'
store(&TARGETS) 'any'
store(&BITMAP) 'uchau.ico'
store(&VISUALKEYBOARD) 'wenchow.kvks'
store(&LAYOUTFILE) 'wenchow.keyman-touch-layout'

c Note three entry points, rather than the traditional single entry point

begin Unicode > use(main)
begin NewContext > use(NewContext)
begin PostKeystroke > use(PostKeystroke)

c This tells Keyman which keys should have casing behavior applied
store(&CasedKeys) [K_A] .. [K_Z]

c We'll define some useful stores here
store(key) [K_A] .. [K_Z] [SHIFT K_A] .. [SHIFT K_Z]
store(out) 'a' .. 'z'     'A' .. 'Z'

store(caps) 'A'..'Z'
store(digit) '0'..'9'

group(NewContext) readonly
    c Any time we get a new context, by mouse click, tap,
    c cursor movement, new document, etc, we'll try and
    c determine the best layer to use
    nomatch > use(detectStartOfSentence)

group(PostKeystroke) readonly
    c We get here after every keystroke and model action is processed

    c Okay, let's stay on the numeric layer if we are there already
    if(&newLayer = "") if(&layer = 'numeric') any(digit) > context

    c Don't swap off the caps lock layer automatically
    if(&layer = 'caps') > context

    c no other changes, so detect sentence or layer change, as long
    c as the user hasn't attempted to change layer themselves.
    if(&newLayer = "") > use(detectStartOfSentence)

group(detectStartOfSentence) readonly
    c We have a shared group for the start of sentence detection now
    c which will set the current layer according to the current context.

    c Some common end-of-sentence punctuation
    store(sentencePunctuation) '.?!'

    c If we are at the start of a text field, we're at the 'start of a
    c sentence', so we'll move to the Shift layer
    nul > layer('shift')

    c Otherwise, we'll move to the Shift layer only if we see end of a
    c sentence followed by one or two spaces.
    any(sentencePunctuation) ' ' > layer('shift')
    any(sentencePunctuation) '  ' > layer('shift')

    c And because we haven't see any of these situations above, we'll
    c move to the default layer. Note that this effectively drops us
    c back to the default layer after every keystroke that isn't blocked
    c by the `PostKeystroke` or early `detectStartOfSentence` rules.
    nomatch > layer('default')

group(main) using keys





c *******************************************************************
c CONSTANTS
c *******************************************************************

store(vowels)                   'aeiouAEIOU'
store(vowels_sac)               'áéíóúÁÉÍÓÚ'
store(vowels_huyen)             'àèìòùÀÈÌÒÙ'



    c Single-vowel nuclei accent rules - Upper and Lowercase
    any(vowels) + 'q' > index(vowels_sac, 1)
    any(vowels) + 'Q' > index(vowels_sac, 1)
    any(vowels) + 'x' > index(vowels_huyen, 1)
    any(vowels) + 'X' > index(vowels_huyen, 1)

    any(vowels_sac) + 'q' > index(vowels, 1) 'q'
    any(vowels_sac) + 'Q' > index(vowels, 1) 'Q'
    any(vowels_sac) + 'x' > index(vowels_huyen, 1)
    any(vowels_sac) + 'X' > index(vowels_huyen, 1)

    any(vowels_huyen) + 'q' > index(vowels_sac, 1)
    any(vowels_huyen) + 'Q' > index(vowels_sac, 1)
    any(vowels_huyen) + 'x' > index(vowels, 1) 'x'
    any(vowels_huyen) + 'X' > index(vowels, 1) 'X'


'i' + 'i' > 'ï'
'u' + 'u' > 'û'
'o' + 'o' > 'ö'
'z' + 'q' > 'ź'
'z' + 'x' > 'z̀'
'u' + 'w' > 'ü'
'ng' + 'q' > 'nǵ'
'ng' + 'x' > 'ng̀'
'n' + 'q' > 'ń'
'n' + 'x' > 'ǹ'
'm' + 'q' > 'ḿ'
'm' + 'x' > 'm̀'
'm' + 'm' > 'm̆'
'n' + 'n' > 'n̆'
'ng' + 'g' > 'n̆g'
'l' + 'l' > 'l̆'
'ü' + 'q' > 'ǘ'
'ü' + 'x' > 'ǜ'
'ö' + 'q' > 'ö́'
'ö' + 'x' > 'ö̀'
'ï' + 'q' > 'ḯ'
'ï' + 'x' > 'ï̀'
'a' + 'e' > 'æ'
'æ' + 'q' > 'ǽ'
'æ' + 'x' > 'æ̀'
'û' + 'q' > 'û́'
'û' + 'x' > 'û̀'

'I' + 'I' > 'Ï'
'U' + 'U' > 'Û'
'O' + 'O' > 'Ö'
'Z' + 'Q' > 'Ź'
'Z' + 'X' > 'Z̀'
'U' + 'W' > 'Ü'
'NG' + 'Q' > 'NǴ'
'NG' + 'X' > 'NG̀'
'N' + 'Q' > 'Ń'
'N' + 'X' > 'Ǹ'  
'M' + 'Q' > 'Ḿ'
'M' + 'X' > 'M̀'
'M' + 'M' > 'M̌' 
'N' + 'N' > 'N̆'
'NG' + 'G' > 'N̆G'
'L' + 'L' > 'L̆'
'Ü' + 'Q' > 'Ǘ'
'Ü' + 'X' > 'Ǜ'     
'Ö' + 'Q' > 'Ö́'
'Ö' + 'X' > 'Ö̀'
'Ï' + 'Q' > 'Ḯ'
'Ï' + 'X' > 'Ï̀'
'A' + 'E' > 'Æ'
'Æ' + 'Q' > 'Ǽ'
'Æ' + 'X' > 'Æ̀' 
'Û' + 'Q' > 'Û́'
'Û' + 'X' > 'Û̀'

'I' + 'i' > 'Ï'
'U' + 'u' > 'Û'
'O' + 'o' > 'Ö'
'Z' + 'q' > 'Ź'
'Z' + 'x' > 'Z̀'
'U' + 'w' > 'Ü'
'NG' + 'q' > 'NǴ'
'NG' + 'x' > 'NG̀'
'Ng' + 'q' > 'Nǵ'
'Ng' + 'x' > 'Ng̀'
'N' + 'q' > 'Ń'
'N' + 'x' > 'Ǹ'
'M' + 'q' > 'Ḿ'
'M' + 'x' > 'M̀'
'M' + 'm' > 'M̌'
'N' + 'n' > 'N̆'
'NG' + 'g' > 'N̆G'
'Ng' + 'g' > 'N̆g'
'L' + 'l' > 'L̆'
'Ü' + 'q' > 'Ǘ'
'Ü' + 'x' > 'Ǜ'
'Ö' + 'q' > 'Ö́'
'Ö' + 'x' > 'Ö̀'
'Ï' + 'q' > 'Ḯ'
'Ï' + 'x' > 'Ï̀'
'A' + 'e' > 'Æ'
'Æ' + 'q' > 'Ǽ'
'Æ' + 'x' > 'Æ̀'
'Û' + 'q' > 'Û́'
'Û' + 'x' > 'Û̀'

'ï' + 'i' > 'ii'
'û' + 'u' > 'uu'
'ö' + 'o' > 'oo'
'ź' + 'q' > 'zq'
'z̀' + 'x' > 'zx'
'ü' + 'w' > 'uw'
'nǵ' + 'q' > 'ngq'
'ng̀' + 'x' > 'ngx'
'ń' + 'q' > 'nq'
'ǹ' + 'x' > 'nx'
'ḿ' + 'q' > 'mq'
'm̀' + 'x' > 'mx'
'm̆' + 'm' > 'mm'
'n̆' + 'n' > 'nn'
'n̆g' + 'g' > 'ngg'
'l̆' + 'l' > 'll'
'ǘ' + 'q' > 'üq'
'ǜ' + 'x' > 'üx'
'ö́' + 'q' > 'öq'
'ö̀' + 'x' > 'öx'
'ḯ' + 'q' > 'ïq'
'ï̀' + 'x' > 'ïx'
'æ' + 'e' > 'ae'
'ǽ' + 'q' > 'æq'
'æ̀' + 'x' > 'æx'
'û́' + 'q' > 'ûq'
'û̀' + 'x' > 'ûx'

'Ï' + 'I' > 'II'
'Û' + 'U' > 'UU'
'Ö' + 'O' > 'OO'
'Ź' + 'Q' > 'ZQ'
'Z̀' + 'X' > 'ZX'
'Ü' + 'W' > 'UW'
'NǴ' + 'Q' > 'NGQ'
'NG̀' + 'X' > 'NGX'
'Ń' + 'Q' > 'NQ'
'Ǹ' + 'X' > 'NX'
'Ḿ' + 'Q' > 'MQ'
'M̀' + 'X' > 'MX'
'M̌' + 'M' > 'MM'
'N̆' + 'N' > 'NN'
'N̆G' + 'G' > 'NGG'
'L̆' + 'L' > 'LL'
'Ǘ' + 'Q' > 'ÜQ'
'Ǜ' + 'X' > 'ÜX'
'Ö́' + 'Q' > 'ÖQ'
'Ö̀' + 'X' > 'ÖX'
'Ḯ' + 'Q' > 'ÏQ'
'Ï̀' + 'X' > 'ÏX'
'Æ' + 'E' > 'AE'
'Ǽ' + 'Q' > 'ÆQ'
'Æ̀' + 'X' > 'ÆX'
'Û́' + 'Q' > 'ÛQ'
'Û̀' + 'X' > 'ÛX'

'Ï' + 'i' > 'Ii'
'Û' + 'u' > 'Uu'
'Ö' + 'o' > 'Oo'
'Ź' + 'q' > 'Zq'
'Z̀' + 'x' > 'Zx'
'Ü' + 'w' > 'Uw'
'NǴ' + 'q' > 'NGq'
'NG̀' + 'x' > 'NGx'
'Nǵ' + 'q' > 'Ngq'
'Ng̀' + 'x' > 'Ngx'
'Ń' + 'q' > 'Nq'
'Ǹ' + 'x' > 'Nx'
'Ḿ' + 'q' > 'Mq'
'M̀' + 'x' > 'Mx'
'M̌' + 'm' > 'Mm'
'N̆' + 'n' > 'Nn'
'N̆G' + 'g' > 'NGg'
'N̆g' + 'g' > 'Ngg'
'L̆' + 'l' > 'Ll'
'Ǘ' + 'q' > 'Üq'
'Ǜ' + 'x' > 'Üx'
'Ö́' + 'q' > 'Öq'
'Ö̀' + 'x' > 'Öx'
'Ḯ' + 'q' > 'Ïq'
'Ï̀' + 'x' > 'Ïx'
'Æ' + 'e' > 'Ae'
'Ǽ' + 'q' > 'Æq'
'Æ̀' + 'x' > 'Æx'
'Û́' + 'q' > 'Ûq'
'Û̀' + 'x' > 'Ûx'

"p" + "h" > "p‘"
"t" + "h" > "t‘"
"k" + "h" > "k‘"
"ts" + "h" > "ts‘"
"ch" + "h" > "ch‘"
"kw" + "h" > "kw‘"
"k‘" + "w" > "kw‘"
"h" + "h" > "‘"

"P" + "H" > "P‘"
"T" + "H" > "T‘"
"K" + "H" > "K‘"
"TS" + "H" > "TS‘"
"CH" + "H" > "CH‘"
"KW" + "H" > "KW‘"
"K‘" + "W" > "KW‘"
"H" + "H" > "‘"

"P" + "h" > "P‘"
"T" + "h" > "T‘"
"K" + "h" > "K‘"
"Ts" + "h" > "Ts‘"
"Ch" + "h" > "Ch‘"
"Kw" + "h" > "Kw‘"
"K‘" + "w" > "Kw‘"
"H" + "h" > "‘"

"p‘" + "h" > "ph"
"t‘" + "h" > "th"
"k‘" + "h" > "kh"
"ts‘" + "h" > "tsh"
"ch‘" + "h" > "chh"
"kw‘" + "h" > "kwh"
"‘" + "h" > "hh"

"P‘" + "H" > "PH"
"T‘" + "H" > "TH"
"K‘" + "H" > "KH"
"TS‘" + "H" > "TSH"
"CH‘" + "H" > "CHH"
"KW‘" + "H" > "KWH"
"‘" + "H" > "HH"

"P‘" + "h" > "Ph"
"T‘" + "h" > "Th"
"K‘" + "h" > "Kh"
"Ts‘" + "h" > "Tsh"
"Ch‘" + "h" > "Chh"
"Kw‘" + "h" > "Kwh"




"p" + "p" > "p‘"
"t" + "t" > "t‘"
"k" + "k" > "k‘"
"ts" + "s" > "ts‘"
"kw" + "w" > "kw‘"

"P" + "P" > "P‘"
"T" + "T" > "T‘"
"K" + "K" > "K‘"
"TS" + "S" > "TS‘"
"KW" + "W" > "KW‘"

"P" + "p" > "P‘"
"T" + "t" > "T‘"
"K" + "k" > "K‘"
"Ts" + "s" > "Ts‘"
"Kw" + "w" > "kw‘"

"p‘" + "p" > "pp"
"t‘" + "t" > "tt"
"k‘" + "k" > "kk"
"ts‘" + "s" > "tss"
"kw‘" + "w" > "kww"

"P‘" + "P" > "PP"
"T‘" + "T" > "TT"
"K‘" + "K" > "KK"
"TS‘" + "S" > "TSS"
"KW‘" + "W" > "KWW"

"P‘" + "p" > "Pp"
"T‘" + "t" > "Tt"
"K‘" + "k" > "Kk"
"Ts‘" + "s" > "Tss"
"Kw‘" + "w" > "Kww"



"o" + "e" > "öe"
"u" + "e" > "üe"

'öe' + 'e' > 'oe'
'üe' + 'e' > 'ue'



'ǽ' + 'x' > 'æ̀'
'æ̀' + 'q' > 'ǽ'
'û́' + 'x' > 'û̀'
'û̀' + 'q' > 'û́'
'ǘ' + 'x' > 'ǜ'
'ǜ' + 'q' > 'ǘ'
'ḯ' + 'x' > 'ï̀'
'ï̀' + 'q' > 'ḯ'
'ö́' + 'x' > 'ö̀'
'ö̀' + 'q' > 'ö́'
'ź' + 'x' > 'z̀'
'z̀' + 'q' > 'ź'
'ń' + 'x' > 'ǹ'
'ǹ' + 'q' > 'ń'
'ḿ' + 'x' > 'm̀'
'm̀' + 'q' > 'ḿ'

'Ǽ' + 'X' > 'Æ̀'
'Æ̀' + 'Q' > 'Ǽ'
'Û́' + 'X' > 'Û̀'
'Û̀' + 'Q' > 'Û́'
'Ǘ' + 'X' > 'Ǜ'
'Ǜ' + 'Q' > 'Ǘ'
'Ḯ' + 'X' > 'Ï̀'
'Ï̀' + 'Q' > 'Ḯ'
'Ö́' + 'X' > 'Ö̀'
'Ö̀' + 'Q' > 'Ö́'
'Ź' + 'X' > 'Z̀'
'Z̀' + 'Q' > 'Ź'
'Ń' + 'X' > 'Ǹ'
'Ǹ' + 'Q' > 'Ń'
'Ḿ' + 'X' > 'M̀'
'M̀' + 'Q' > 'Ḿ'

'Ǽ' + 'x' > 'Æ̀'
'Æ̀' + 'q' > 'Ǽ'
'Û́' + 'x' > 'Û̀'
'Û̀' + 'q' > 'Û́'
'Ǘ' + 'x' > 'Ǜ'
'Ǜ' + 'q' > 'Ǘ'
'Ḯ' + 'x' > 'Ï̀'
'Ï̀' + 'q' > 'Ḯ'
'Ö́' + 'x' > 'Ö̀'
'Ö̀' + 'q' > 'Ö́'
'Ź' + 'x' > 'Z̀'
'Z̀' + 'q' > 'Ź'
'Ń' + 'x' > 'Ǹ'
'Ǹ' + 'q' > 'Ń'
'Ḿ' + 'x' > 'M̀'
'M̀' + 'q' > 'Ḿ'

'O' + 'e' > 'Öe'
'U' + 'e' > 'Üe'

'Öe' + 'e' > 'Oe'
'Üe' + 'e' > 'Ue'

'ung' + 'q' > 'úng'
'ing' + 'q' > 'íng'
'ang' + 'q' > 'áng'
'ong' + 'q' > 'óng'

'ung' + 'x' > 'ùng'
'ing' + 'x' > 'ìng'
'ang' + 'x' > 'àng'
'ong' + 'x' > 'òng'

'UNG' + 'Q' > 'ÚNG'
'ING' + 'Q' > 'ÍNG'
'ANG' + 'Q' > 'ÁNG'
'ONG' + 'Q' > 'ÓNG'

'UNG' + 'X' > 'ÙNG'
'ING' + 'X' > 'ÌNG'
'ANG' + 'X' > 'ÀNG'
'ONG' + 'X' > 'ÒNG'

'Ung' + 'q' > 'Úng'
'Ing' + 'q' > 'Íng'
'Ang' + 'q' > 'Áng'
'Ong' + 'q' > 'Óng'

'Ung' + 'x' > 'Ùng'
'Ing' + 'x' > 'Ìng'
'Ang' + 'x' > 'Àng'
'Ong' + 'x' > 'Òng'


'úng' + 'q' > 'ungq'
'íng' + 'q' > 'ingq'
'áng' + 'q' > 'angq'
'óng' + 'q' > 'ongq'

'ùng' + 'x' > 'ungx'
'ìng' + 'x' > 'ingx'
'àng' + 'x' > 'angx'
'òng' + 'x' > 'ongx'

'ÚNG' + 'Q' > 'UNGQ'
'ÍNG' + 'Q' > 'INGQ'
'ÁNG' + 'Q' > 'ANGQ'
'ÓNG' + 'Q' > 'ONGQ'

'ÙNG' + 'X' > 'UNGX'
'ÌNG' + 'X' > 'INGX'
'ÀNG' + 'X' > 'ANGX'
'ÒNG' + 'X' > 'ONGX'

'Úng' + 'q' > 'Ungq'
'Íng' + 'q' > 'Ingq'
'Áng' + 'q' > 'Angq'
'Óng' + 'q' > 'Ongq'

'Ùng' + 'x' > 'Ungx'
'Ìng' + 'x' > 'Ingx'
'Àng' + 'x' > 'Angx'
'Òng' + 'x' > 'Ongx'

'ǵ' + 'x' > 'g̀'
'g̀' + 'q' > 'ǵ'
'áng' + 'x' > 'àng'
'àng' + 'q' > 'áng'
'íng' + 'x' > 'ìng'
'ìng' + 'q' > 'íng'
'óng' + 'x' > 'òng'
'òng' + 'q' > 'óng'
'úng' + 'x' > 'ùng'
'ùng' + 'q' > 'úng'
'Ǵ' + 'X' > 'G̀'
'G̀' + 'Q' > 'Ǵ'
'ÁNG' + 'X' > 'ÀNG'
'ÀNG' + 'Q' > 'ÁNG'
'ÍNG' + 'X' > 'ÌNG'
'ÌNG' + 'Q' > 'ÍNG'
'ÓNG' + 'X' > 'ÒNG'
'ÒNG' + 'Q' > 'ÓNG'
'ÚNG' + 'X' > 'ÙNG'
'ÙNG' + 'Q' > 'ÚNG'
'Ǵ' + 'x' > 'G̀'
'G̀' + 'q' > 'Ǵ'
'ÁNG' + 'x' > 'ÀNG'
'ÀNG' + 'q' > 'ÁNG'
'ÍNG' + 'x' > 'ÌNG'
'ÌNG' + 'q' > 'ÍNG'
'ÓNG' + 'x' > 'ÒNG'
'ÒNG' + 'q' > 'ÓNG'
'ÚNG' + 'x' > 'ÙNG'
'ÙNG' + 'q' > 'ÚNG'
'Áng' + 'x' > 'Àng'
'Àng' + 'q' > 'Áng'
'Íng' + 'x' > 'Ìng'
'Ìng' + 'q' > 'Íng'
'Óng' + 'x' > 'Òng'
'Òng' + 'q' > 'Óng'
'Úng' + 'x' > 'Ùng'
'Ùng' + 'q' > 'Úng'

+ [K_QUOTE] > '‘'
+ [SHIFT K_QUOTE] > '“'
"‘" + [K_QUOTE]  > "‘’"
"“" + [SHIFT K_QUOTE] > "“”"

"a" + [K_QUOTE] > "a’"
"b" + [K_QUOTE] > "b’"
"c" + [K_QUOTE] > "c’"
"d" + [K_QUOTE] > "d’"
"e" + [K_QUOTE] > "e’"
"f" + [K_QUOTE] > "f’"
"g" + [K_QUOTE] > "g’"
"h" + [K_QUOTE] > "h’"
"i" + [K_QUOTE] > "i’"
"j" + [K_QUOTE] > "j’"
"k" + [K_QUOTE] > "k’"
"l" + [K_QUOTE] > "l’"
"m" + [K_QUOTE] > "m’"
"n" + [K_QUOTE] > "n’"
"o" + [K_QUOTE] > "o’"
"p" + [K_QUOTE] > "p’"
"q" + [K_QUOTE] > "q’"
"r" + [K_QUOTE] > "r’"
"s" + [K_QUOTE] > "s’"
"t" + [K_QUOTE] > "t’"
"u" + [K_QUOTE] > "u’"
"v" + [K_QUOTE] > "v’"
"w" + [K_QUOTE] > "w’"
"x" + [K_QUOTE] > "x’"
"y" + [K_QUOTE] > "y’"
"z" + [K_QUOTE] > "z’"

"A" + [K_QUOTE] > "A’"
"B" + [K_QUOTE] > "B’"
"C" + [K_QUOTE] > "C’"
"D" + [K_QUOTE] > "D’"
"E" + [K_QUOTE] > "E’"
"F" + [K_QUOTE] > "F’"
"G" + [K_QUOTE] > "G’"
"H" + [K_QUOTE] > "H’"
"I" + [K_QUOTE] > "I’"
"J" + [K_QUOTE] > "J’"
"K" + [K_QUOTE] > "K’"
"L" + [K_QUOTE] > "L’"
"M" + [K_QUOTE] > "M’"
"N" + [K_QUOTE] > "N’"
"O" + [K_QUOTE] > "O’"
"P" + [K_QUOTE] > "P’"
"Q" + [K_QUOTE] > "Q’"
"R" + [K_QUOTE] > "R’"
"S" + [K_QUOTE] > "S’"
"T" + [K_QUOTE] > "T’"
"U" + [K_QUOTE] > "U’"
"V" + [K_QUOTE] > "V’"
"W" + [K_QUOTE] > "W’"
"X" + [K_QUOTE] > "X’"
"Y" + [K_QUOTE] > "Y’"
"Z" + [K_QUOTE] > "Z’"

"a" + [SHIFT K_QUOTE] > "a”"
"b" + [SHIFT K_QUOTE] > "b”"
"c" + [SHIFT K_QUOTE] > "c”"
"d" + [SHIFT K_QUOTE] > "d”"
"e" + [SHIFT K_QUOTE] > "e”"
"f" + [SHIFT K_QUOTE] > "f”"
"g" + [SHIFT K_QUOTE] > "g”"
"h" + [SHIFT K_QUOTE] > "h”"
"i" + [SHIFT K_QUOTE] > "i”"
"j" + [SHIFT K_QUOTE] > "j”"
"k" + [SHIFT K_QUOTE] > "k”"
"l" + [SHIFT K_QUOTE] > "l”"
"m" + [SHIFT K_QUOTE] > "m”"
"n" + [SHIFT K_QUOTE] > "n”"
"o" + [SHIFT K_QUOTE] > "o”"
"p" + [SHIFT K_QUOTE] > "p”"
"q" + [SHIFT K_QUOTE] > "q”"
"r" + [SHIFT K_QUOTE] > "r”"
"s" + [SHIFT K_QUOTE] > "s”"
"t" + [SHIFT K_QUOTE] > "t”"
"u" + [SHIFT K_QUOTE] > "u”"
"v" + [SHIFT K_QUOTE] > "v”"
"w" + [SHIFT K_QUOTE] > "w”"
"x" + [SHIFT K_QUOTE] > "x”"
"y" + [SHIFT K_QUOTE] > "y”"
"z" + [SHIFT K_QUOTE] > "z”"

"A" + [SHIFT K_QUOTE] > "A”"
"B" + [SHIFT K_QUOTE] > "B”"
"C" + [SHIFT K_QUOTE] > "C”"
"D" + [SHIFT K_QUOTE] > "D”"
"E" + [SHIFT K_QUOTE] > "E”"
"F" + [SHIFT K_QUOTE] > "F”"
"G" + [SHIFT K_QUOTE] > "G”"
"H" + [SHIFT K_QUOTE] > "H”"
"I" + [SHIFT K_QUOTE] > "I”"
"J" + [SHIFT K_QUOTE] > "J”"
"K" + [SHIFT K_QUOTE] > "K”"
"L" + [SHIFT K_QUOTE] > "L”"
"M" + [SHIFT K_QUOTE] > "M”"
"N" + [SHIFT K_QUOTE] > "N”"
"O" + [SHIFT K_QUOTE] > "O”"
"P" + [SHIFT K_QUOTE] > "P”"
"Q" + [SHIFT K_QUOTE] > "Q”"
"R" + [SHIFT K_QUOTE] > "R”"
"S" + [SHIFT K_QUOTE] > "S”"
"T" + [SHIFT K_QUOTE] > "T”"
"U" + [SHIFT K_QUOTE] > "U”"
"V" + [SHIFT K_QUOTE] > "V”"
"W" + [SHIFT K_QUOTE] > "W”"
"X" + [SHIFT K_QUOTE] > "X”"
"Y" + [SHIFT K_QUOTE] > "Y”"
"Z" + [SHIFT K_QUOTE] > "Z”"

"æ" + [K_QUOTE] > "æ’"
"ǽ" + [K_QUOTE] > "ǽ’"
"ǽ" + [K_QUOTE] > "ǽ’"
"æ̀" + [K_QUOTE] > "æ̀’"
"ï" + [K_QUOTE] > "ï’"
"ḯ" + [K_QUOTE] > "ḯ’"
"ï̀" + [K_QUOTE] > "ï̀’"
"û" + [K_QUOTE] > "û’"
"û́" + [K_QUOTE] > "û́’"
"û̀" + [K_QUOTE] > "û̀’"
"ǘ" + [K_QUOTE] > "ǘ’"
"ǜ" + [K_QUOTE] > "ǜ’"
"ö" + [K_QUOTE] > "ö’"
"ö́" + [K_QUOTE] > "ö́’"
"ö̀" + [K_QUOTE] > "ö̀’"
"ḿ" + [K_QUOTE] > "ḿ’"
"m̀" + [K_QUOTE] > "m̀’"
"m̌" + [K_QUOTE] > "m̌’"
"ń" + [K_QUOTE] > "ń’"
"ǹ" + [K_QUOTE] > "ǹ’"
"ň" + [K_QUOTE] > "ň’"
"l̆" + [K_QUOTE] > "l̆’"
"ź" + [K_QUOTE] > "ź’"
"z̀" + [K_QUOTE] > "z̀’"
"ǵ" + [K_QUOTE] > "ǵ’"
"g̀" + [K_QUOTE] > "g̀’"

"Æ" + [K_QUOTE] > "Æ’"
"Ǽ" + [K_QUOTE] > "Ǽ’"
"Ǽ" + [K_QUOTE] > "Ǽ’"
"Æ̀" + [K_QUOTE] > "Æ̀’"
"Ï" + [K_QUOTE] > "Ï’"
"Ḯ" + [K_QUOTE] > "Ḯ’"
"Ï̀" + [K_QUOTE] > "Ï̀’"
"Û" + [K_QUOTE] > "Û’"
"Û́" + [K_QUOTE] > "Û́’"
"Û̀" + [K_QUOTE] > "Û̀’"
"Ǘ" + [K_QUOTE] > "Ǘ’"
"Ǜ" + [K_QUOTE] > "Ǜ’"
"Ö" + [K_QUOTE] > "Ö’"
"Ö́" + [K_QUOTE] > "Ö́’"
"Ö̀" + [K_QUOTE] > "Ö̀’"
"Ḿ" + [K_QUOTE] > "Ḿ’"
"M̀" + [K_QUOTE] > "M̀’"
"M̌" + [K_QUOTE] > "M̌’"
"Ń" + [K_QUOTE] > "Ń’"
"Ǹ" + [K_QUOTE] > "Ǹ’"
"Ň" + [K_QUOTE] > "Ň’"
"L̆" + [K_QUOTE] > "L̆’"
"Ź" + [K_QUOTE] > "Ź’"
"Z̀" + [K_QUOTE] > "Z̀’"
"Ǵ" + [K_QUOTE] > "Ǵ’"
"G̀" + [K_QUOTE] > "G̀’"

"æ" + [SHIFT K_QUOTE] > "æ”"
"ǽ" + [SHIFT K_QUOTE] > "ǽ”"
"ǽ" + [SHIFT K_QUOTE] > "ǽ”"
"æ̀" + [SHIFT K_QUOTE] > "æ̀”"
"ï" + [SHIFT K_QUOTE] > "ï”"
"ḯ" + [SHIFT K_QUOTE] > "ḯ”"
"ï̀" + [SHIFT K_QUOTE] > "ï̀”"
"û" + [SHIFT K_QUOTE] > "û”"
"û́" + [SHIFT K_QUOTE] > "û́”"
"û̀" + [SHIFT K_QUOTE] > "û̀”"
"ǘ" + [SHIFT K_QUOTE] > "ǘ”"
"ǜ" + [SHIFT K_QUOTE] > "ǜ”"
"ö" + [SHIFT K_QUOTE] > "ö”"
"ö́" + [SHIFT K_QUOTE] > "ö́”"
"ö̀" + [SHIFT K_QUOTE] > "ö̀”"
"ḿ" + [SHIFT K_QUOTE] > "ḿ”"
"m̀" + [SHIFT K_QUOTE] > "m̀”"
"m̌" + [SHIFT K_QUOTE] > "m̌”"
"ń" + [SHIFT K_QUOTE] > "ń”"
"ǹ" + [SHIFT K_QUOTE] > "ǹ”"
"ň" + [SHIFT K_QUOTE] > "ň”"
"l̆" + [SHIFT K_QUOTE] > "l̆”"
"ź" + [SHIFT K_QUOTE] > "ź”"
"z̀" + [SHIFT K_QUOTE] > "z̀”"
"ǵ" + [SHIFT K_QUOTE] > "ǵ”"
"g̀" + [SHIFT K_QUOTE] > "g̀”"

"Æ" + [SHIFT K_QUOTE] > "Æ”"
"Ǽ" + [SHIFT K_QUOTE] > "Ǽ”"
"Ǽ" + [SHIFT K_QUOTE] > "Ǽ”"
"Æ̀" + [SHIFT K_QUOTE] > "Æ̀”"
"Ï" + [SHIFT K_QUOTE] > "Ï”"
"Ḯ" + [SHIFT K_QUOTE] > "Ḯ”"
"Ï̀" + [SHIFT K_QUOTE] > "Ï̀”"
"Û" + [SHIFT K_QUOTE] > "Û”"
"Û́" + [SHIFT K_QUOTE] > "Û́”"
"Û̀" + [SHIFT K_QUOTE] > "Û̀”"
"Ǘ" + [SHIFT K_QUOTE] > "Ǘ”"
"Ǜ" + [SHIFT K_QUOTE] > "Ǜ”"
"Ö" + [SHIFT K_QUOTE] > "Ö”"
"Ö́" + [SHIFT K_QUOTE] > "Ö́”"
"Ö̀" + [SHIFT K_QUOTE] > "Ö̀”"
"Ḿ" + [SHIFT K_QUOTE] > "Ḿ”"
"M̀" + [SHIFT K_QUOTE] > "M̀”"
"M̌" + [SHIFT K_QUOTE] > "M̌”"
"Ń" + [SHIFT K_QUOTE] > "Ń”"
"Ǹ" + [SHIFT K_QUOTE] > "Ǹ”"
"Ň" + [SHIFT K_QUOTE] > "Ň”"
"L̆" + [SHIFT K_QUOTE] > "L̆”"
"Ź" + [SHIFT K_QUOTE] > "Ź”"
"Z̀" + [SHIFT K_QUOTE] > "Z̀”"
"Ǵ" + [SHIFT K_QUOTE] > "Ǵ”"
"G̀" + [SHIFT K_QUOTE] > "G̀”"

"á" + [K_QUOTE] > "á’"
"à" + [K_QUOTE] > "à’"
"é" + [K_QUOTE] > "é’"
"è" + [K_QUOTE] > "è’"
"í" + [K_QUOTE] > "í’"
"ì" + [K_QUOTE] > "ì’"
"ó" + [K_QUOTE] > "ó’"
"ò" + [K_QUOTE] > "ò’"
"ú" + [K_QUOTE] > "ú’"
"ù" + [K_QUOTE] > "ù’"

"Á" + [K_QUOTE] > "Á’"
"À" + [K_QUOTE] > "À’"
"É" + [K_QUOTE] > "É’"
"È" + [K_QUOTE] > "È’"
"Í" + [K_QUOTE] > "Í’"
"Ì" + [K_QUOTE] > "Ì’"
"Ó" + [K_QUOTE] > "Ó’"
"Ò" + [K_QUOTE] > "Ò’"
"Ú" + [K_QUOTE] > "Ú’"
"Ù" + [K_QUOTE] > "Ù’"

"á" + [SHIFT K_QUOTE] > "á”"
"à" + [SHIFT K_QUOTE] > "à”"
"é" + [SHIFT K_QUOTE] > "é”"
"è" + [SHIFT K_QUOTE] > "è”"
"í" + [SHIFT K_QUOTE] > "í”"
"ì" + [SHIFT K_QUOTE] > "ì”"
"ó" + [SHIFT K_QUOTE] > "ó”"
"ò" + [SHIFT K_QUOTE] > "ò”"
"ú" + [SHIFT K_QUOTE] > "ú”"
"ù" + [SHIFT K_QUOTE] > "ù”"

"Á" + [SHIFT K_QUOTE] > "Á”"
"À" + [SHIFT K_QUOTE] > "À”"
"É" + [SHIFT K_QUOTE] > "É”"
"È" + [SHIFT K_QUOTE] > "È”"
"Í" + [SHIFT K_QUOTE] > "Í”"
"Ì" + [SHIFT K_QUOTE] > "Ì”"
"Ó" + [SHIFT K_QUOTE] > "Ó”"
"Ò" + [SHIFT K_QUOTE] > "Ò”"
"Ú" + [SHIFT K_QUOTE] > "Ú”"
"Ù" + [SHIFT K_QUOTE] > "Ù”"

"0" + [K_QUOTE] > "0’"
"1" + [K_QUOTE] > "1’"
"2" + [K_QUOTE] > "2’"
"3" + [K_QUOTE] > "3’"
"4" + [K_QUOTE] > "4’"
"5" + [K_QUOTE] > "5’"
"6" + [K_QUOTE] > "6’"
"7" + [K_QUOTE] > "7’"
"8" + [K_QUOTE] > "8’"
"9" + [K_QUOTE] > "9’"
"." + [K_QUOTE] > ".’"
"?" + [K_QUOTE] > "?’"
"!" + [K_QUOTE] > "!’"


"0" + [SHIFT K_QUOTE] > "0”"
"1" + [SHIFT K_QUOTE] > "1”"
"2" + [SHIFT K_QUOTE] > "2”"
"3" + [SHIFT K_QUOTE] > "3”"
"4" + [SHIFT K_QUOTE] > "4”"
"5" + [SHIFT K_QUOTE] > "5”"
"6" + [SHIFT K_QUOTE] > "6”"
"7" + [SHIFT K_QUOTE] > "7”"
"8" + [SHIFT K_QUOTE] > "8”"
"9" + [SHIFT K_QUOTE] > "9”"
"." + [SHIFT K_QUOTE] > ".”"
"?" + [SHIFT K_QUOTE] > "?”"
"!" + [SHIFT K_QUOTE] > "!”"

'A' + 'a' > 'Æ'
'a' + 'a' > 'æ'
'A' + 'A' > 'Æ'
'Æ' + 'a' > 'Aa'
'æ' + 'a' > 'aa'
'Æ' + 'A' > 'AA'

'á' + 'e' > 'ǽ'
'à' + 'e' > 'æ̀'
'á' + 'a' > 'ǽ'
'à' + 'a' > 'æ̀'
'ú' + 'u' > 'û́'
'ù' + 'u' > 'û̀'
'ú' + 'w' > 'ǘ'
'ù' + 'w' > 'ǜ'
'ó' + 'o' > 'ö́'
'ò' + 'o' > 'ö̀'
'í' + 'i' > 'ḯ'
'ì' + 'i' > 'ï̀'
'Á' + 'E' > 'Ǽ'
'À' + 'E' > 'Æ̀'
'Á' + 'A' > 'Ǽ'
'À' + 'A' > 'Æ̀'
'Ú' + 'U' > 'Û́'
'Ù' + 'U' > 'Û̀'
'Ú' + 'W' > 'Ǘ'
'Ù' + 'W' > 'Ǜ'
'Ó' + 'O' > 'Ö́'
'Ò' + 'O' > 'Ö̀'
'Í' + 'I' > 'Ḯ'
'Ì' + 'I' > 'Ï̀'
'Á' + 'e' > 'Ǽ'
'À' + 'e' > 'Æ̀'
'Á' + 'a' > 'Ǽ'
'À' + 'a' > 'Æ̀'
'Ú' + 'u' > 'Û́'
'Ù' + 'u' > 'Û̀'
'Ú' + 'w' > 'Ǘ'
'Ù' + 'w' > 'Ǜ'
'Ó' + 'o' > 'Ö́'
'Ò' + 'o' > 'Ö̀'
'Í' + 'i' > 'Ḯ'
'Ì' + 'i' > 'Ï̀'
