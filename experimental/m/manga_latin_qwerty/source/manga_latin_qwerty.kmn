store(&VERSION) '15.0'
store(&NAME) 'Manga Latin QWERTY'
store(&COPYRIGHT) '© SIL Niger'
store(&KEYBOARDVERSION) '1.0'
store(&TARGETS) 'any'
store(&BITMAP) 'manga_latin_qwerty.ico'
store(&VISUALKEYBOARD) 'manga_latin_qwerty.kvks'
store(&LAYOUTFILE) 'manga_latin_qwerty.keyman-touch-layout'

begin Unicode > use(main)

store(vowel) 'aeǝiouAEƎIOU'

group(main) using keys

+ [K_SPACE] > U+0020

+ [K_0] > U+0030
+ [SHIFT K_0] > U+0029

+ [K_1] > U+0031
+ [SHIFT K_1] > U+0021

+ [K_2] > U+0032
+ [SHIFT K_2] > U+0040

+ [K_3] > U+0033
+ [SHIFT K_3] > U+0023

+ [K_4] > U+0034
+ [SHIFT K_4] > U+0024

+ [K_5] > U+0035
+ [SHIFT K_5] > U+0025

+ [K_6] > U+0036
any(vowel) + [SHIFT K_6] > context U+0302
+ [SHIFT K_6] > U+005e
+ [RALT K_6] > U+005e c original '^' on RightAlt layer

+ [K_7] > U+0037
+ [SHIFT K_7] > U+0026

+ [K_8] > U+0038
+ [SHIFT K_8] > U+002a

+ [K_9] > U+0039
+ [SHIFT K_9] > U+0028

+ [NCAPS K_A] > U+0061
+ [CAPS K_A] > U+0041
+ [NCAPS SHIFT K_A] > U+0041
+ [CAPS SHIFT K_A] > U+0061

+ [NCAPS K_B] > U+0062
+ [CAPS K_B] > U+0042
+ [NCAPS SHIFT K_B] > U+0042
+ [CAPS SHIFT K_B] > U+0062

+ [NCAPS K_C] > U+0063
+ [CAPS K_C] > U+0043
+ [NCAPS SHIFT K_C] > U+0043
+ [CAPS SHIFT K_C] > U+0063
+ [NCAPS RALT K_C] > 'ç'
+ [CAPS RALT K_C] > 'Ç'
+ [NCAPS SHIFT RALT K_C] > 'Ç'
+ [CAPS SHIFT RALT K_C] > 'ç'

+ [NCAPS K_D] > U+0064
+ [CAPS K_D] > U+0044
+ [NCAPS SHIFT K_D] > U+0044
+ [CAPS SHIFT K_D] > U+0064

+ [NCAPS K_E] > U+0065
+ [CAPS K_E] > U+0045
+ [NCAPS SHIFT K_E] > U+0045
+ [CAPS SHIFT K_E] > U+0065
+ [NCAPS RALT K_E] > 'ǝ'
+ [CAPS RALT K_E] > 'Ǝ'
+ [NCAPS SHIFT RALT K_E] > 'Ǝ'
+ [CAPS SHIFT RALT K_E] > 'ǝ'

+ [NCAPS K_F] > U+0066
+ [CAPS K_F] > U+0046
+ [NCAPS SHIFT K_F] > U+0046
+ [CAPS SHIFT K_F] > U+0066

+ [NCAPS K_G] > U+0067
+ [CAPS K_G] > U+0047
+ [NCAPS SHIFT K_G] > U+0047
+ [CAPS SHIFT K_G] > U+0067

+ [NCAPS K_H] > U+0068
+ [CAPS K_H] > U+0048
+ [NCAPS SHIFT K_H] > U+0048
+ [CAPS SHIFT K_H] > U+0068

+ [NCAPS K_I] > U+0069
+ [CAPS K_I] > U+0049
+ [NCAPS SHIFT K_I] > U+0049
+ [CAPS SHIFT K_I] > U+0069

+ [NCAPS K_J] > U+006a
+ [CAPS K_J] > U+004a
+ [NCAPS SHIFT K_J] > U+004a
+ [CAPS SHIFT K_J] > U+006a

+ [NCAPS K_K] > U+006b
+ [CAPS K_K] > U+004b
+ [NCAPS SHIFT K_K] > U+004b
+ [CAPS SHIFT K_K] > U+006b

+ [NCAPS K_L] > U+006c
+ [CAPS K_L] > U+004c
+ [NCAPS SHIFT K_L] > U+004c
+ [CAPS SHIFT K_L] > U+006c

+ [NCAPS K_M] > U+006d
+ [CAPS K_M] > U+004d
+ [NCAPS SHIFT K_M] > U+004d
+ [CAPS SHIFT K_M] > U+006d

+ [NCAPS K_N] > U+006e
+ [CAPS K_N] > U+004e
+ [NCAPS SHIFT K_N] > U+004e
+ [CAPS SHIFT K_N] > U+006e

+ [NCAPS K_O] > U+006f
+ [CAPS K_O] > U+004f
+ [NCAPS SHIFT K_O] > U+004f
+ [CAPS SHIFT K_O] > U+006f

+ [NCAPS K_P] > U+0070
+ [CAPS K_P] > U+0050
+ [NCAPS SHIFT K_P] > U+0050
+ [CAPS SHIFT K_P] > U+0070

+ [NCAPS K_Q] > U+0071
+ [CAPS K_Q] > U+0051
+ [NCAPS SHIFT K_Q] > U+0051
+ [CAPS SHIFT K_Q] > U+0071

+ [NCAPS K_R] > U+0072
+ [CAPS K_R] > U+0052
+ [NCAPS SHIFT K_R] > U+0052
+ [CAPS SHIFT K_R] > U+0072
+ [NCAPS RALT K_R] > 'ɍ'
+ [CAPS RALT K_R] > 'Ɍ'
+ [NCAPS SHIFT RALT K_R] > 'Ɍ'
+ [CAPS SHIFT RALT K_R] > 'ɍ'

+ [NCAPS K_S] > U+0073
+ [CAPS K_S] > U+0053
+ [NCAPS SHIFT K_S] > U+0053
+ [CAPS SHIFT K_S] > U+0073

+ [NCAPS K_T] > U+0074
+ [CAPS K_T] > U+0054
+ [NCAPS SHIFT K_T] > U+0054
+ [CAPS SHIFT K_T] > U+0074

+ [NCAPS K_U] > U+0075
+ [CAPS K_U] > U+0055
+ [NCAPS SHIFT K_U] > U+0055
+ [CAPS SHIFT K_U] > U+0075

+ [NCAPS K_V] > U+0076
+ [CAPS K_V] > U+0056
+ [NCAPS SHIFT K_V] > U+0056
+ [CAPS SHIFT K_V] > U+0076

+ [NCAPS K_W] > U+0077
+ [CAPS K_W] > U+0057
+ [NCAPS SHIFT K_W] > U+0057
+ [CAPS SHIFT K_W] > U+0077

+ [NCAPS K_X] > U+0078
+ [CAPS K_X] > U+0058
+ [NCAPS SHIFT K_X] > U+0058
+ [CAPS SHIFT K_X] > U+0078

+ [NCAPS K_Y] > U+0079
+ [CAPS K_Y] > U+0059
+ [NCAPS SHIFT K_Y] > U+0059
+ [CAPS SHIFT K_Y] > U+0079

+ [NCAPS K_Z] > U+007a
+ [CAPS K_Z] > U+005a
+ [NCAPS SHIFT K_Z] > U+005a
+ [CAPS SHIFT K_Z] > U+007a

+ [K_COLON] > U+003b
any(vowel) + [SHIFT K_COLON] > context U+0308
+ [SHIFT K_COLON] > U+003a
+ [RALT K_COLON] > U+003a c original ':' on RightALt layer

+ [K_EQUAL] > U+003d
+ [SHIFT K_EQUAL] > U+002b

+ [K_COMMA] > U+002c
+ [SHIFT K_COMMA] > U+003c
+ [RALT K_COMMA] > U+00AB c «

+ [K_HYPHEN] > U+002d
+ [SHIFT K_HYPHEN] > U+005f

+ [K_PERIOD] > U+002e
+ [SHIFT K_PERIOD] > U+003e
+ [RALT K_PERIOD] > U+00BB c »

any(vowel) + [K_SLASH] > context U+0301 c replaces U+002F with combining acute when it follows a vowel
+ [K_SLASH] > U+002f
+ [SHIFT K_SLASH] > U+003f
+ [RALT K_SLASH] > U+002f c original '/' on RightAlt layer

any(vowel) + [K_BKQUOTE] > context U+0300 c replaces U+0060 with combining grave when it follows a vowel
+ [K_BKQUOTE] > U+0060
+ [SHIFT K_BKQUOTE] > U+007e
+ [RALT K_BKQUOTE] > U+0060 c original '`' on RightAlt layer

+ [K_LBRKT] > U+005b
+ [SHIFT K_LBRKT] > U+007b

+ [K_BKSLASH] > U+005c
+ [SHIFT K_BKSLASH] > U+007c

+ [K_RBRKT] > U+005d
+ [SHIFT K_RBRKT] > U+007d

+ [K_QUOTE] > U+0027
+ [SHIFT K_QUOTE] > U+0022

+ [K_oE2] > U+005c
+ [SHIFT K_oE2] > U+007c

match > use(NFC)

group(NFC)

store(basevowel) 'aeiouAEIOU'
store(grave) U+00E0 U+00E8 U+00EC U+00F2 U+00F9 U+00C0 U+00C8 U+00CC U+00D2 U+00D9
store(acute) U+00E1 U+00E9 U+00ED U+00F3 U+00FA U+00C1 U+00C9 U+00CD U+00D3 U+00DA
store(circumflex) U+00E2 U+00EA U+00EE U+00F4 U+00FB U+00C2 U+00CA U+00CE U+00D4 U+00DB
store(dieresis) U+00E4 U+00EB U+00EF U+00F6 U+00FC U+00C4 U+00CB U+00CF U+00D6 U+00DC

any(basevowel) U+0300 > index(grave, 1)
any(basevowel) U+0301 > index(acute, 1)
any(basevowel) U+0302 > index(circumflex, 1)
any(basevowel) U+0308 > index(dieresis,1)
