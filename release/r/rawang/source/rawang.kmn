c Keyboard created by KMDECOMP
c
c Meta details: Registered=1; Version=0
c               Flags=0; HotKey=30052
c

store(&VERSION) "15.0" 
store(&NAME) "Rawang" 
store(&COPYRIGHT) '© 2007-2021 R.James'
store(&MESSAGE) "Rvwàng Unicode Keyboard" 
c store(&MNEMONICLAYOUT) "1" 
store(&VISUALKEYBOARD) 'rawang.kvks'
c store(&ETHNOLOGUECODE) "raw" 
store(&BITMAP) 'rawang.ico'
store(&KEYBOARDVERSION) '1.7'
store(&TARGETS) 'any'
store(&LAYOUTFILE) 'rawang.keyman-touch-layout'

begin Unicode > use(main)
begin NewContext > use(NewContext)
begin PostKeystroke > use(PostKeystroke)

store(store11) "AEIOU" 
store(store12) "aeiou" 
store(store13) "ÁÉÍÓÚ" 
store(store14) "ÀÈÌÒÙ" 
store(store15) "ĀĒĪŌŪ" 
store(store16) "ÂÊÎÔÛ" 
store(store17) "ǍĚǏǑǓ" 
store(store18) "ÃẼĨÕŨ" 
store(store19) "áéíóú" 
store(store20) "àèìòù" 
store(store21) "āēīōū" 
store(store22) "âêîôû" 
store(store23) "ǎěǐǒǔ" 
store(store24) "ãẽĩõũ" 

store(digit) '0'..'9'

group(NewContext) readonly
    c Any time we get a new context, by mouse click, tap,
    c cursor movement, new document, etc, we'll try and
    c determine the best layer to use
    nomatch > use(detectStartOfSentence)

group(PostKeystroke) readonly
    c We get here after every keystroke and model action is processed

    c Okay, let's stay on the numeric layer if we are there already
    if(&newLayer = "") if(&layer = 'numeric') any(digit) > context

    c Don't swap off the caps lock layer automatically
    if(&layer = 'caps') > context

    c no other changes, so detect sentence or layer change, as long
    c as the user hasn't attempted to change layer themselves.
    if(&newLayer = "") > use(detectStartOfSentence)

group(detectStartOfSentence) readonly
    c We have a shared group for the start of sentence detection now
    c which will set the current layer according to the current context.

    c Some common end-of-sentence punctuation
    store(sentencePunctuation) '.?!"'

    c If we are at the start of a text field, we're at the 'start of a
    c sentence', so we'll move to the Shift layer
    nul > layer('shift')

    c Otherwise, we'll move to the Shift layer only if we see end of a
    c sentence followed by one or two spaces.
    any(sentencePunctuation) ' ' > layer('shift')
    any(sentencePunctuation) '  ' > layer('shift')

    c And because we haven't see any of these situations above, we'll
    c move to the default layer. Note that this effectively drops us
    c back to the default layer after every keystroke that isn't blocked
    c by the `PostKeystroke` or early `detectStartOfSentence` rules.
    nomatch > layer('default')

group(main) using keys
   + [RALT K_COMMA] > "<"  c line(0)
   + [RALT K_PERIOD] > ">"  c line(0)
  "v̀"  + "/" > "v/"  c line(0)
  "V̀"  + "/" > "V/"  c line(0)
  "ø̀"  + "/" > "ø/"  c line(0)
  "Ø̀"  + "/" > "Ø/"  c line(0)
  "v́"  + "/" > "v̀"  c line(0)
  "ǿ"  + "/" > "ø̀"  c line(0)
  "V́"  + "/" > "V̀"  c line(0)
  "Ǿ"  + "/" > "Ø̀"  c line(0)
  "v̄"  + "/" > "v̀"  c line(0)
  "ø̄"  + "/" > "ø̀"  c line(0)
  "V̄"  + "/" > "V̀"  c line(0)
  "Ø̄"  + "/" > "Ø̀"  c line(0)
  "v̂"  + "/" > "v̀"  c line(0)
  "ø̂"  + "/" > "ø̀"  c line(0)
  "V̂"  + "/" > "V̀"  c line(0)
  "Ø̂"  + "/" > "Ø̀"  c line(0)
  "v̌"  + "/" > "v̀"  c line(0)
  "ø̌"  + "/" > "ø̀"  c line(0)
  "V̌"  + "/" > "V̀"  c line(0)
  "Ø̌"  + "/" > "Ø̀"  c line(0)
  "ṽ"  + "/" > "v̀"  c line(0)
  "ø̃"  + "/" > "ø̀"  c line(0)
  "Ṽ"  + "/" > "V̀"  c line(0)
  "Ø̃"  + "/" > "Ø̀"  c line(0)
  any(store12)  + "/" > index(store20, 1)  c line(0)
  any(store11)  + "/" > index(store14, 1)  c line(0)
  any(store14)  + "/" > index(store11, 1) "/"  c line(0)
  any(store20)  + "/" > index(store12, 1) "/"  c line(0)
  "v"  + "/" > "v̀"  c line(0)
  "V"  + "/" > "V̀"  c line(0)
  "ø"  + "/" > "ø̀"  c line(0)
  "Ø"  + "/" > "Ø̀"  c line(0)
  "s"  + "/" > "š"  c line(0)
  "S"  + "/" > "Š"  c line(0)
  any(store13)  + "/" > index(store14, 1)  c line(0)
  any(store15)  + "/" > index(store14, 1)  c line(0)
  any(store16)  + "/" > index(store14, 1)  c line(0)
  any(store17)  + "/" > index(store14, 1)  c line(0)
  any(store18)  + "/" > index(store14, 1)  c line(0)
  any(store19)  + "/" > index(store20, 1)  c line(0)
  any(store21)  + "/" > index(store20, 1)  c line(0)
  any(store22)  + "/" > index(store20, 1)  c line(0)
  any(store23)  + "/" > index(store20, 1)  c line(0)
  any(store24)  + "/" > index(store20, 1)  c line(0)
   + [RALT K_SLASH] > "/"  c line(0)
   + ":" > "Ø"  c line(0)
   + ";" > "ø"  c line(0)
   + "<" > ";"  c line(0)
   + ">" > ":"  c line(0)
  "v́"  + "[" > "v["  c line(0)
  "V́"  + "[" > "V["  c line(0)
  "ǿ"  + "[" > "ø["  c line(0)
  "Ǿ"  + "[" > "Ø["  c line(0)
  "v̀"  + "[" > "v́"  c line(0)
  "ø̀"  + "[" > "ǿ"  c line(0)
  "V̀"  + "[" > "V́"  c line(0)
  "Ø̀"  + "[" > "Ǿ"  c line(0)
  "v̄"  + "[" > "v́"  c line(0)
  "ø̄"  + "[" > "ǿ"  c line(0)
  "V̄"  + "[" > "V́"  c line(0)
  "Ø̄"  + "[" > "Ǿ"  c line(0)
  "v̂"  + "[" > "v́"  c line(0)
  "ø̂"  + "[" > "ǿ"  c line(0)
  "V̂"  + "[" > "V́"  c line(0)
  "Ø̂"  + "[" > "Ǿ"  c line(0)
  "v̌"  + "[" > "v́"  c line(0)
  "ø̌"  + "[" > "ǿ"  c line(0)
  "V̌"  + "[" > "V́"  c line(0)
  "Ø̌"  + "[" > "Ǿ"  c line(0)
  "ṽ"  + "[" > "v́"  c line(0)
  "ø̃"  + "[" > "ǿ"  c line(0)
  "Ṽ"  + "[" > "V́"  c line(0)
  "Ø̃"  + "[" > "Ǿ"  c line(0)
  any(store12)  + "[" > index(store19, 1)  c line(0)
  any(store11)  + "[" > index(store13, 1)  c line(0)
  any(store13)  + "[" > index(store11, 1) "["  c line(0)
  any(store19)  + "[" > index(store12, 1) "["  c line(0)
  "v"  + "[" > "v́"  c line(0)
  "V"  + "[" > "V́"  c line(0)
  "ø"  + "[" > "ǿ"  c line(0)
  "Ø"  + "[" > "Ǿ"  c line(0)
  "g"  + "[" > "ġ"  c line(0)
  "G"  + "[" > "Ġ"  c line(0)
  "ḡ"  + "[" > "ġ"  c line(0)
  any(store14)  + "[" > index(store13, 1)  c line(0)
  any(store15)  + "[" > index(store13, 1)  c line(0)
  any(store16)  + "[" > index(store13, 1)  c line(0)
  any(store17)  + "[" > index(store13, 1)  c line(0)
  any(store18)  + "[" > index(store13, 1)  c line(0)
  any(store20)  + "[" > index(store19, 1)  c line(0)
  any(store21)  + "[" > index(store19, 1)  c line(0)
  any(store22)  + "[" > index(store19, 1)  c line(0)
  any(store23)  + "[" > index(store19, 1)  c line(0)
  any(store24)  + "[" > index(store19, 1)  c line(0)
   + [RALT K_LBRKT] > "["  c line(0)
  "v̌"  + "\" > "v\"  c line(0)
  "V̌"  + "\" > "V\"  c line(0)
  "ø̌"  + "\" > "ø\"  c line(0)
  "Ø̌"  + "\" > "Ø\"  c line(0)
  "v̀"  + "\" > "v̌"  c line(0)
  "ø̀"  + "\" > "ø̌"  c line(0)
  "V̀"  + "\" > "V̌"  c line(0)
  "Ø̀"  + "\" > "Ø̌"  c line(0)
  "v́"  + "\" > "v̌"  c line(0)
  "ǿ"  + "\" > "ø̌"  c line(0)
  "V́"  + "\" > "V̌"  c line(0)
  "Ǿ"  + "\" > "Ø̌"  c line(0)
  "v̄"  + "\" > "v̌"  c line(0)
  "ø̄"  + "\" > "ø̌"  c line(0)
  "V̄"  + "\" > "V̌"  c line(0)
  "Ø̄"  + "\" > "Ø̌"  c line(0)
  "v̂"  + "\" > "v̌"  c line(0)
  "ø̂"  + "\" > "ø̌"  c line(0)
  "V̂"  + "\" > "V̌"  c line(0)
  "Ø̂"  + "\" > "Ø̌"  c line(0)
  "ṽ"  + "\" > "v̌"  c line(0)
  "ø̃"  + "\" > "ø̌"  c line(0)
  "Ṽ"  + "\" > "V̌"  c line(0)
  "Ø̃"  + "\" > "Ø̌"  c line(0)
  any(store12)  + "\" > index(store23, 1)  c line(0)
  any(store11)  + "\" > index(store17, 1)  c line(0)
  any(store17)  + "\" > index(store11, 1) "\"  c line(0)
  any(store23)  + "\" > index(store12, 1) "\"  c line(0)
  "v"  + "\" > "v̌"  c line(0)
  "V"  + "\" > "V̌"  c line(0)
  "ø"  + "\" > "ø̌"  c line(0)
  "Ø"  + "\" > "Ø̌"  c line(0)
  any(store14)  + "\" > index(store17, 1)  c line(0)
  any(store15)  + "\" > index(store17, 1)  c line(0)
  any(store13)  + "\" > index(store17, 1)  c line(0)
  any(store16)  + "\" > index(store17, 1)  c line(0)
  any(store18)  + "\" > index(store17, 1)  c line(0)
  any(store20)  + "\" > index(store23, 1)  c line(0)
  any(store21)  + "\" > index(store23, 1)  c line(0)
  any(store19)  + "\" > index(store23, 1)  c line(0)
  any(store22)  + "\" > index(store23, 1)  c line(0)
  any(store24)  + "\" > index(store23, 1)  c line(0)
  "v̄"  + "]" > "v]"  c line(0)
  "V̄"  + "]" > "V]"  c line(0)
  "ø̄"  + "]" > "ø]"  c line(0)
  "Ø̄"  + "]" > "Ø]"  c line(0)
  "v̀"  + "]" > "v̄"  c line(0)
  "ø̀"  + "]" > "ø̄"  c line(0)
  "V̀"  + "]" > "V̄"  c line(0)
  "Ø̀"  + "]" > "Ø̄"  c line(0)
  "v́"  + "]" > "v̄"  c line(0)
  "ǿ"  + "]" > "ø̄"  c line(0)
  "V́"  + "]" > "V̄"  c line(0)
  "Ǿ"  + "]" > "Ø̄"  c line(0)
  "v̂"  + "]" > "v̄"  c line(0)
  "ø̂"  + "]" > "ø̄"  c line(0)
  "V̂"  + "]" > "V̄"  c line(0)
  "Ø̂"  + "]" > "Ø̄"  c line(0)
  "v̌"  + "]" > "v̄"  c line(0)
  "ø̌"  + "]" > "ø̄"  c line(0)
  "V̌"  + "]" > "V̄"  c line(0)
  "Ø̌"  + "]" > "Ø̄"  c line(0)
  "ṽ"  + "]" > "v̄"  c line(0)
  "ø̃"  + "]" > "ø̄"  c line(0)
  "Ṽ"  + "]" > "V̄"  c line(0)
  "Ø̃"  + "]" > "Ø̄"  c line(0)
  any(store12)  + "]" > index(store21, 1)  c line(0)
  any(store11)  + "]" > index(store15, 1)  c line(0)
  any(store15)  + "]" > index(store11, 1) "]"  c line(0)
  any(store21)  + "]" > index(store12, 1) "]"  c line(0)
  "v"  + "]" > "v̄"  c line(0)
  "V"  + "]" > "V̄"  c line(0)
  "ø"  + "]" > "ø̄"  c line(0)
  "Ø"  + "]" > "Ø̄"  c line(0)
  "g"  + "]" > "ḡ"  c line(0)
  "G"  + "]" > "Ḡ"  c line(0)
  "Ḡ"  + "]" > "Ġ"  c line(0)
  "ġ"  + "]" > "ḡ"  c line(0)
  "Ġ"  + "]" > "Ḡ"  c line(0)
  any(store13)  + "]" > index(store15, 1)  c line(0)
  any(store14)  + "]" > index(store15, 1)  c line(0)
  any(store16)  + "]" > index(store15, 1)  c line(0)
  any(store17)  + "]" > index(store15, 1)  c line(0)
  any(store18)  + "]" > index(store15, 1)  c line(0)
  any(store19)  + "]" > index(store21, 1)  c line(0)
  any(store20)  + "]" > index(store21, 1)  c line(0)
  any(store22)  + "]" > index(store21, 1)  c line(0)
  any(store23)  + "]" > index(store21, 1)  c line(0)
  any(store24)  + "]" > index(store21, 1)  c line(0)
   + [RALT K_RBRKT] > "]"  c line(0)
  "v̂"  + "^" > "v^"  c line(0)
  "V̂"  + "^" > "V^"  c line(0)
  "ø̂"  + "^" > "ø^"  c line(0)
  "Ø̂"  + "^" > "Ø^"  c line(0)
  "v̀"  + "^" > "v̂"  c line(0)
  "ø̀"  + "^" > "ø̂"  c line(0)
  "V̀"  + "^" > "V̂"  c line(0)
  "Ø̀"  + "^" > "Ø̂"  c line(0)
  "v́"  + "^" > "v̂"  c line(0)
  "ǿ"  + "^" > "ø̂"  c line(0)
  "V́"  + "^" > "V̂"  c line(0)
  "Ǿ"  + "^" > "Ø̂"  c line(0)
  "v̄"  + "^" > "v̂"  c line(0)
  "ø̄"  + "^" > "ø̂"  c line(0)
  "V̄"  + "^" > "V̂"  c line(0)
  "Ø̄"  + "^" > "Ø̂"  c line(0)
  "v̌"  + "^" > "v̂"  c line(0)
  "ø̌"  + "^" > "ø̂"  c line(0)
  "V̌"  + "^" > "V̂"  c line(0)
  "Ø̌"  + "^" > "Ø̂"  c line(0)
  "ṽ"  + "^" > "v̂"  c line(0)
  "ø̃"  + "^" > "ø̂"  c line(0)
  "Ṽ"  + "^" > "V̂"  c line(0)
  "Ø̃"  + "^" > "Ø̂"  c line(0)
  any(store12)  + "^" > index(store22, 1)  c line(0)
  any(store11)  + "^" > index(store16, 1)  c line(0)
  any(store16)  + "^" > index(store11, 1) "^"  c line(0)
  any(store22)  + "^" > index(store12, 1) "^"  c line(0)
  "v"  + "^" > "v̂"  c line(0)
  "V"  + "^" > "V̂"  c line(0)
  "ø"  + "^" > "ø̂"  c line(0)
  "Ø"  + "^" > "Ø̂"  c line(0)
  any(store14)  + "^" > index(store16, 1)  c line(0)
  any(store15)  + "^" > index(store16, 1)  c line(0)
  any(store13)  + "^" > index(store16, 1)  c line(0)
  any(store17)  + "^" > index(store16, 1)  c line(0)
  any(store18)  + "^" > index(store16, 1)  c line(0)
  any(store20)  + "^" > index(store22, 1)  c line(0)
  any(store21)  + "^" > index(store22, 1)  c line(0)
  any(store19)  + "^" > index(store22, 1)  c line(0)
  any(store23)  + "^" > index(store22, 1)  c line(0)
  any(store24)  + "^" > index(store22, 1)  c line(0)
  "ṽ"  + "`" > "v`"  c line(0)
  "Ṽ"  + "`" > "V`"  c line(0)
  "ø̃"  + "`" > "ø`"  c line(0)
  "Ø̃"  + "`" > "Ø`"  c line(0)
  "v̀"  + "`" > "ṽ"  c line(0)
  "ø̀"  + "`" > "ø̃"  c line(0)
  "V̀"  + "`" > "Ṽ"  c line(0)
  "Ø̀"  + "`" > "Ø̃"  c line(0)
  "v́"  + "`" > "ṽ"  c line(0)
  "ǿ"  + "`" > "ø̃"  c line(0)
  "V́"  + "`" > "Ṽ"  c line(0)
  "Ǿ"  + "`" > "Ø̃"  c line(0)
  "v̄"  + "`" > "ṽ"  c line(0)
  "ø̄"  + "`" > "ø̃"  c line(0)
  "V̄"  + "`" > "Ṽ"  c line(0)
  "Ø̄"  + "`" > "Ø̃"  c line(0)
  "v̂"  + "`" > "ṽ"  c line(0)
  "ø̂"  + "`" > "ø̃"  c line(0)
  "V̂"  + "`" > "Ṽ"  c line(0)
  "Ø̂"  + "`" > "Ø̃"  c line(0)
  "v̌"  + "`" > "ṽ"  c line(0)
  "ø̌"  + "`" > "ø̃"  c line(0)
  "V̌"  + "`" > "Ṽ"  c line(0)
  "Ø̌"  + "`" > "Ø̃"  c line(0)
  any(store12)  + "`" > index(store24, 1)  c line(0)
  any(store11)  + "`" > index(store18, 1)  c line(0)
  any(store18)  + "`" > index(store11, 1) "`"  c line(0)
  any(store24)  + "`" > index(store12, 1) "`"  c line(0)
  "v"  + "`" > "ṽ"  c line(0)
  "V"  + "`" > "Ṽ"  c line(0)
  "ø"  + "`" > "ø̃"  c line(0)
  "Ø"  + "`" > "Ø̃"  c line(0)
  any(store14)  + "`" > index(store18, 1)  c line(0)
  any(store15)  + "`" > index(store18, 1)  c line(0)
  any(store13)  + "`" > index(store18, 1)  c line(0)
  any(store17)  + "`" > index(store18, 1)  c line(0)
  any(store16)  + "`" > index(store18, 1)  c line(0)
  any(store20)  + "`" > index(store24, 1)  c line(0)
  any(store21)  + "`" > index(store24, 1)  c line(0)
  any(store19)  + "`" > index(store24, 1)  c line(0)
  any(store23)  + "`" > index(store24, 1)  c line(0)
  any(store22)  + "`" > index(store24, 1)  c line(0)

c EOF

