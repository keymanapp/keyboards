c Version 1.0.0 Initial Version
c 20190517
c Based on itrans_devanagari_sanskrit_vedic
c Version 1.1.0
c 20190524 
c Streamline Code using stores, any, index
c Remap based on feedback
c Version 1.2.0 
c 20190527 
c Sync code with itrans_devanagari_sanskrit_vedic
c Add many other languages and Hindi dialects in list of keyboards
c Add additional letters used in other languages
c 20190528
c Add \ - ॲ
c Add ` - U+02BC apostrophe for Bodo, Dogri, and Maithili
c Allow ca + nukta (used in Konkani)
c 20190529
c Changes based on PR and user feedback
c Fix double virama bug
c Add implicit a for word-ending NuktaVyanjana 
c 20190530
c Add OM for ॐ
c 20190601
c Fix bug related to explicit virama
c
store(&VERSION) "10.0" 
store(&NAME) 'Hindi Devanagari Phonetic (ITRANS)'
store(&TARGETS) 'web desktop'
store(&COPYRIGHT) '© sanskritdocuments.org'
store(&MESSAGE) 'A Phonetic Devanagari (ITRANS) keyboard for Hindi.'
store(&KMW_HELPTEXT) 'Uses Unshifted, Shifted layouts.'
store(&KEYBOARDVERSION) '1.2.1'
store(&BITMAP) 'itrans_devanagari_hindi.ico'
store(&VISUALKEYBOARD) 'itrans_devanagari_hindi.kvks'

begin Unicode > use(main)
group(main) using keys

c  Set Hindi mode by default (implict word ending `a`)
store(opt1) 'hindi'
+ [RCTRL RALT K_0]	>	set(opt1='0') 
+ [RCTRL RALT K_1]	>	reset(opt1)

c	Special Symbols

+ "#"	>	"ॐ"
+ "$"	>	"₹"
+ "%"	>	U+0FD5	c ࿕ RIGHT-FACING SVASTI SIGN
+ "*"	>	"❀"
+ "&"	>	"☸"
+ "V"	>	"ऽ"	c AVAGRAHA
+ "`"   >   "ʼ" c U+02BC apostrophe for Bodo,Dogri, and Maithili

+ "_"	>	U+200C	c ZERO-WIDTH NON-JOINER
+ "+"	>	U+200D	c ZERO-WIDTH JOINER
+ "^"	>	"्"	c VIRAMA

c	Punctuation
store(Punctuation) "!" "'" "(" ")" "-" "/" ":" ";" "" "?" '"' "," "." "=" "<" ">" "|"
+ any(Punctuation)	>	index(Punctuation,1)

store(RALT_punctK) [RALT K_LBRKT]   [RALT K_RBRKT] [SHIFT RALT K_LBRKT] [SHIFT RALT K_RBRKT] \
                   [RALT K_BKSLASH] [RALT K_3]     [RALT K_4]           [RALT K_5] \
                   [RALT K_6]       [RALT K_7]     [RALT K_8]           [RALT K_HYPHEN] \
                   [RALT K_EQUAL]   [SHIFT RALT K_EQUAL]
store(RALT_punctU) U+005B           U+005D           U+007B               U+007D \
                   U+005C           U+0023           U+0024               U+0025 \
                   U+005E           U+0026           U+002A               U+005F \
                   U+003D           U+002B

+ any(RALT_punctK) > index(RALT_punctU,1)

+ "~"	>	"~" c Breaks Hindi mode rules if included in punctuation
+ "@"	>	"@" 

"," + ","	>	U+0970	c	DEVANAGARI ABBREVIATION SIGN

"." + "."	>	"।"	c twice for DANDA
"।" + "."	>	"॥"	c thrice for DOUBLE DANDA
"॥" + "."	>	U+2026	c four dots for a HORIZONTAL ELLIPSIS

"-" + "-"	>	U+2013	c hyphen twice for EN DASH
U+2013 + "-"	>	U+2014	c three times for EM DASH

c	numbers - Devanagari DigitsU
store(Digits)	"0"		"1"		"2"		"3"		"4"		"5"		"6"		"7"		"8"		"9"
store(DigitsU)	"०"		"१"		"२"		"३"		"४"		"५"		"६"		"७"		"८"		"९"
+ any(Digits)	>	index(DigitsU,1)
any(DigitsU) + [K_BKSP]	>	index(Digits,1)

c standalone vowel signs with @
"@" + "A"	>	"ा"
"@" + "i"	>	"ि"
"@" + "I"	>	"ी"
"@" + "u"	>	"ु"
"@" + "U"	>	"ू"
"@" + "e"	>	"े"
"@" + "o"	>	"ो"
"@" + "E"	>	"ॅ"
"@" + "O"	>	"ॉ"
"@" + "["	>	'ॆ'
"@" + "]"	>	'ॊ'
"@" + "W"	>	'ॆ'
"@" + "{" > U+A8FF c DEVANAGARI VOWEL SIGN AY
"@" + "}"	>	'ॏ'
"@" + "a"	>	"@a"
"@a" + "a"	>	"ा"
"@a" + "e"	>	"ॅ"
"@a" + "i"	>	"ै"
"@a" + "u"	>	"ौ"
"@a" + "w"	>	"ॉ"
"ि" + "i"	>	"ी"
"ु" + "u"	>	"ू"
"े" + "e"	>	"ी"
"े" + "i"	>	"ै"
"ो" + "o"	>	"ू"
"ो" + "u"	>	"ौ"
"@" + "R"	>	"ृ"
"ृ" + "R"	>	"ृ" c @RR
"ृ" + "^"	>	"ॄ" c @RR^
"@" + "L"	>	"ॢ"
"ॢ" + "L"	>	"ॢ" c @LL
"ॢ" + "^"	>	"ॣ" c @LL^
"@" + "q"	>	'ऺ'
"@" + "Q"	>	'ऻ'
"@" + "z"	>	'ॖ'
"@" + "Z"	>	'ॗ'
"@" + "\"	>	"ॅ"

c Independent Vowels
+ "a"	>	"अ"
"अ" + "a"	>	"आ"
+ "A"	>	"आ"
+ "i"	>	"इ"
"इ" + "i"	>	"ई"
"ए" + "e"	>	"ई"
+ "I"	>	"ई"
+ "u"	>	"उ"
"उ" + "u"	>	"ऊ"
"ओ" + "o"	>	"ऊ"
+ "U"	>	"ऊ"
+ "["	>	"ऎ"
+ "e"	>	"ए"
+ "E"	>	"ऍ"
"अ" + "e"	>	"ऍ"
"अ" + "i"	>	"ऐ"
"ए" + "i"	>	"ऐ"
+ "]"	>	"ऒ"
+ "o"	>	"ओ"
+ "O"	>	"ऑ"
"अ" + "w"	>	"ऑ"
"अ" + "u"	>	"औ"
"ओ" + "u"	>	"औ"
"र्‍" + "R"	>	"ऋ" c RR
"ऋ" + "^"	>	"ॠ" c RR^
"ळ्" + "L"	>	"ऌ" c LL
"ऌ" + "^"	>	"ॡ" c LL^
+ 'W' > 'ऄ'
+ "{" > U+A8FE c DEVANAGARI LETTER AY
+ '}' > 'ॵ'
+ "Z" > 'ॷ'
+ "Q" > 'ॴ'
+ "z" > 'ॶ'
+ "q" > 'ॳ'
+ "\" > 'ॲ'

c Vowel Modifiers
+ "H"	>	"ः" c VISARGA - H
+ "M"	>	"ं" c ANUSVARA - M
"ं" + "M"	>	"ँ"	c CHANDRABINDU - MM

c Consonants
+ "b"	>	"ब्"
+ "B"	>	"भ्"
+ "c"	>	"च्"
+ "C"	>	"छ्"
+ "d"	>	"द्"
+ "D"	>	"ड्"
+ "g"	>	"ग्"
+ "G"	>	"घ्"
+ "h"	>	"ह्"
+ "j"	>	"ज्"
+ "J"	>	"झ्"
+ "k"	>	"क्"
+ "K"	>	"ख्"
+ "l"	>	"ल्"
+ "L"	>	"ळ्"
+ "m"	>	"म्"
+ "n"	>	"न्"
+ "N"	>	"ण्"
+ "p"	>	"प्"
+ "P"	>	"फ्"
+ "r"	>	"र्"
+ "R"	>	"र्‍" c Marathi eyelash ra
+ "s"	>	"स्"
+ "S"	>	"ष्"
+ "t"	>	"त्"
+ "T"	>	"ट्"
+ "v"	>	"व्"
+ "w"	>	"व्"
+ "x"	>	"क्ष्"
+ "y"	>	"य्"
+ "f"	>	"फ्"

c duplicate mappings for ease of typing consonants
+ "F"	>	"ङ्"
+ "X"	>	"ज्ञ्"
+ "Y"	>	"ञ्"


c Nukta with preceding dot
"."           + "n"	>	U+0929 U+094D c "ऩ्"  c .n
"."           + "r"	>	U+0931 U+094D c "ऱ्"  c .r
"."           + "L"	>	U+0934 U+094D c "ऴ्" c .L 
"."           + "k"	>	U+0958 U+094D c "क़्" c .k
U+0958 U+094D + "h"	>	U+0959 U+094D c "ख़्"  c .kh
"."           + "g"	>	U+095A U+094D c "ग़्"  c .g
"."           + "j"	>	U+095B U+094D c "ज़्" use(NFC)  c .j
U+095B U+094D + "h"	>	"झ़्"           c .jh
"."           + "D"	>	U+095C U+094D c "ड़्" use(NFC)  c .D
U+095C U+094D + "h"	>	U+095D U+094D c "ढ़्" use(NFC)  c .Dh
"."           + "f"	>	U+095E U+094D c "फ़्"  c .f
"."           + "y"	>	U+095F U+094D c "य़्" c .y
"."           + "c"	>	"च़्"           c .c - ca plus nukta for Konkani ??

store(other_nuktaU) U+091B U+091F U+0924 U+0926 U+0935 c छटतदथव
store(other_nuktaK) "CTtdw"
"." + any(other_nuktaK) > index(other_nuktaU,2) U+093C U+094D 
U+0924 U+093C U+094D + "h" > U+0925 U+093C U+094D

c alternate mapping with ~
"~" + "n"	>	"ञ्" c ~n
"~" + "N"	>	"ङ्" c ~N

c add h to consonants
"क्" + "h"	>	"ख्"
"ग्" + "h"	>	"घ्"
"च्" + "h"	>	"च्" c same c=ch
"छ्" + "h"	>	"छ्" c same C=Ch
"ज्" + "h"	>	"झ्"
"ट्" + "h"	>	"ठ्"
"ड्" + "h"	>	"ढ्"
"त्" + "h"	>	"थ्"
"द्" + "h"	>	"ध्"
"प्" + "h"	>	"फ्" 
"ब्" + "h"	>	"भ्"
"ष्" + "h"	>	"ष्" c same S=Sh
"स्" + "h"	>	"श्"

c special combinations
$keymanonly: if(opt1 = '0') "न्" + "k"	>	"ङ्क्"
$keymanonly: if(opt1 = '0') "न्" + "g"	>	"ङ्ग्"
$keymanonly: if(opt1 = '0') "न्" + "c"	>	"nc"
$keymanonly: if(opt1 = '0') "nc" + "h"	>	"ञ्च्"	c nch
$keymanonly: if(opt1 = '0') "न्" + "j"	>	"ञ्ज्"
"घ्" + "Y"	>	"ज्ञ्"	c	GY
"श्" + "r"	>	"श्र्"	c	shr
"ण्" + "g"	>	"ङ्"	c	Ng
"ऑ" + "M" > "ॐ"

c Rules for Consonants + Vowel Signs

store(Vyanjana) 'कक्षखगघङचछजज्ञझञटठडढणतथदधनपफबभमयरलळवश्रषसह'
store(NuktaVyanjana) 'कखगजझडढफनरळयच' 'छटतथदव' c added last set

c Since we changed to NFC this store is needed to fire the NuktaVyanjana rules
store(NuktaVyanjana2) U+0929 U+0931 U+0934 U+0958 U+0959 U+095A U+095B U+095C U+095D U+095E U+095F
store(ViramaMaatraa) 'eiouAEIORU[]LW{}qQzZ\'
store(ViramaMaatraaU) "े" "ि" "ो" "ु" "ा" "ॅ" "ी" "ॉ" "ृ" "ू" "ॆ" "ॊ" "ॢ" "ॆ" 'ꣿ' 'ॏ' 'ऺ' 'ऻ'  'ॖ' 'ॗ' "ॅ"
store(aPlusMaatraa) 'aeiuw'
store(aPlusMaatraaU) "ा" "ॅ" "ै" "ौ" "ॉ"

c	implicit akaara for Hindi mode 
store(opt1endings) outs(Punctuation) ' '
$keymanonly: if(opt1 = 'hindi') any(Vyanjana)"्" + any(opt1endings)	>	index(Vyanjana,2) index(opt1endings,4)
$keymanonly: if(opt1 = 'hindi') any(Vyanjana)"्" + "`"	>	index(Vyanjana,2) "ʼ"
$keymanonly: if(opt1 = 'hindi') any(Vyanjana) + "^"	>	index(Vyanjana,2) "्" U+200C
$keymanonly: if(opt1 = 'hindi') any(Vyanjana)"्" + "^"	>	index(Vyanjana,2) "्" U+200C

any(Vyanjana)"्" + "a"	>	index(Vyanjana,1)
any(Vyanjana) + any(aPlusMaatraa) 	>	context index(aPlusMaatraaU,2) 
any(Vyanjana)"्" + any(ViramaMaatraa) 	>	index(Vyanjana,1) index(ViramaMaatraaU,3) 
any(Vyanjana)"ि" + "i"	>	 index(Vyanjana,1)"ी"	 c ii
any(Vyanjana)"ु" + "u"	>	 index(Vyanjana,1)"ू"	 c uu
any(Vyanjana)"े" + "e"	>	 index(Vyanjana,1)"ी"	 c ee
any(Vyanjana)"े" + "i"	>	index(Vyanjana,1)"ै"	 c ei
any(Vyanjana)"ो" + "o"	>	 index(Vyanjana,1)"ू"	 c oo
any(Vyanjana)"ो" + "u"	>	index(Vyanjana,1)"ौ"	 c ou

$keymanonly: if(opt1 = 'hindi') any(NuktaVyanjana)"़" "्" + any(opt1endings)	>	index(NuktaVyanjana,2)"़" index(opt1endings,5)
$keymanonly: if(opt1 = 'hindi') any(NuktaVyanjana)"़" "्" + "`"	>	index(NuktaVyanjana,2) "ʼ"
$keymanonly: if(opt1 = 'hindi') any(NuktaVyanjana)"़" "्" + "^"	>	index(NuktaVyanjana,2) "्" U+200C
$keymanonly: if(opt1 = 'hindi') any(NuktaVyanjana)"़" + "^"	>	index(NuktaVyanjana,2) "्" U+200C
any(NuktaVyanjana)"़""्" + "a"	>	index(NuktaVyanjana,1)"़"
any(NuktaVyanjana)"़" + any(aPlusMaatraa) 	>	context index(aPlusMaatraaU,3) 
any(NuktaVyanjana)"़""्" + any(ViramaMaatraa) 	>	index(NuktaVyanjana,1)"़" index(ViramaMaatraaU,4) 
any(NuktaVyanjana)"़""ि" + "i"	>	 index(NuktaVyanjana,1)"़""ी"	 c ii
any(NuktaVyanjana)"़""ु" + "u"	>	 index(NuktaVyanjana,1)"़""ू"	 c uu
any(NuktaVyanjana)"़""े" + "e"	>	 index(NuktaVyanjana,1)"़""ी"	 c ee
any(NuktaVyanjana)"़""े" + "i"	>	index(NuktaVyanjana,1)"़""ै"	 c ei
any(NuktaVyanjana)"़""ो" + "o"	>	 index(NuktaVyanjana,1)"़""ू"	 c oo
any(NuktaVyanjana)"़""ो" + "u"	>	index(NuktaVyanjana,1)"़""ौ"	 c ou

c need to see if nukta needs changing because of above changes
$keymanonly: if(opt1 = 'hindi') any(NuktaVyanjana2) "्" + any(opt1endings)	>	index(NuktaVyanjana2,2) index(opt1endings,4)
$keymanonly: if(opt1 = 'hindi') any(NuktaVyanjana2)  "्" + "`"	>	index(NuktaVyanjana,2) "ʼ"
$keymanonly: if(opt1 = 'hindi') any(NuktaVyanjana2) "्" + "^"	>	index(NuktaVyanjana,2) "्" U+200C
$keymanonly: if(opt1 = 'hindi') any(NuktaVyanjana2) + "^"	>	index(NuktaVyanjana,2) "्" U+200C
any(NuktaVyanjana2)"्" + "a"	>	index(NuktaVyanjana2,1)
any(NuktaVyanjana2) + any(aPlusMaatraa) 	>	context index(aPlusMaatraaU,2) 
any(NuktaVyanjana2)"्" + any(ViramaMaatraa) 	>	index(NuktaVyanjana2,1) index(ViramaMaatraaU,3) 
any(NuktaVyanjana2)"ि" + "i"	>	 index(NuktaVyanjana2,1)"ी"	 c ii
any(NuktaVyanjana2)"ु" + "u"	>	 index(NuktaVyanjana2,1)"ू"	 c uu
any(NuktaVyanjana2)"े" + "e"	>	 index(NuktaVyanjana2,1)"ी"	 c ee
any(NuktaVyanjana2)"े" + "i"	>	index(NuktaVyanjana2,1)"ै"	 c ei
any(NuktaVyanjana2)"ो" + "o"	>	 index(NuktaVyanjana2,1)"ू"	 c oo
any(NuktaVyanjana2)"ो" + "u"	>	index(NuktaVyanjana2,1)"ौ"	 c ou

