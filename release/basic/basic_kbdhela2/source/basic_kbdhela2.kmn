c
c Keyman keyboard generated by ImportKeyboard
c Imported: 2019-08-05 13:02:12
c
c Source Keyboard File: KBDHELA2.DLL
c Source KeyboardID: 00030408
c
c 

store(&VERSION) '10.0'
store(&NAME) 'Greek (220) Latin Basic'
store(&Targets) "any"
store(&VISUALKEYBOARD) 'basic_kbdhela2.kvks'
store(&BITMAP) 'basic_kbdhela2.ico'
store(&LAYOUTFILE) 'basic_kbdhela2.keyman-touch-layout'
store(&COPYRIGHT) '(c) 2009-2020 SIL International'
store(&KEYBOARDVERSION) '1.1'

begin Unicode > use(main)

group(main) using keys

+ [K_SPACE] > U+0020

+ [K_0] > U+0030
+ [SHIFT K_0] > U+003d
+ [RALT K_0] > U+00b0

+ [K_1] > U+0031
+ [SHIFT K_1] > U+0021

+ [K_2] > U+0032
+ [SHIFT K_2] > U+0022
+ [RALT K_2] > U+00b2

+ [K_3] > U+0033
+ [SHIFT K_3] > U+0023
+ [RALT K_3] > U+00b3

+ [K_4] > U+0034
+ [SHIFT K_4] > U+0024
+ [RALT K_4] > U+00a3

+ [K_5] > U+0035
+ [SHIFT K_5] > U+0025
+ [RALT K_5] > U+00a7

+ [K_6] > U+0036
+ [SHIFT K_6] > U+0026
+ [RALT K_6] > U+00b6

+ [K_7] > U+0037
+ [SHIFT K_7] > U+002f

+ [K_8] > U+0038
+ [SHIFT K_8] > U+0028
+ [RALT K_8] > U+00a4

+ [K_9] > U+0039
+ [SHIFT K_9] > U+0029
+ [RALT K_9] > U+00a6

+ [NCAPS K_A] > U+0061
+ [CAPS K_A] > U+0041
+ [NCAPS SHIFT K_A] > U+0041
+ [CAPS SHIFT K_A] > U+0061

+ [NCAPS K_B] > U+0062
+ [CAPS K_B] > U+0042
+ [NCAPS SHIFT K_B] > U+0042
+ [CAPS SHIFT K_B] > U+0062

+ [NCAPS K_C] > U+0063
+ [CAPS K_C] > U+0043
+ [NCAPS SHIFT K_C] > U+0043
+ [CAPS SHIFT K_C] > U+0063

+ [NCAPS K_D] > U+0064
+ [CAPS K_D] > U+0044
+ [NCAPS SHIFT K_D] > U+0044
+ [CAPS SHIFT K_D] > U+0064

+ [NCAPS K_E] > U+0065
+ [CAPS K_E] > U+0045
+ [NCAPS SHIFT K_E] > U+0045
+ [CAPS SHIFT K_E] > U+0065
+ [NCAPS RALT K_E] > U+20ac

+ [NCAPS K_F] > U+0066
+ [CAPS K_F] > U+0046
+ [NCAPS SHIFT K_F] > U+0046
+ [CAPS SHIFT K_F] > U+0066

+ [NCAPS K_G] > U+0067
+ [CAPS K_G] > U+0047
+ [NCAPS SHIFT K_G] > U+0047
+ [CAPS SHIFT K_G] > U+0067

+ [NCAPS K_H] > U+0068
+ [CAPS K_H] > U+0048
+ [NCAPS SHIFT K_H] > U+0048
+ [CAPS SHIFT K_H] > U+0068

+ [NCAPS K_I] > U+0069
+ [CAPS K_I] > U+0049
+ [NCAPS SHIFT K_I] > U+0049
+ [CAPS SHIFT K_I] > U+0069

+ [NCAPS K_J] > U+006a
+ [CAPS K_J] > U+004a
+ [NCAPS SHIFT K_J] > U+004a
+ [CAPS SHIFT K_J] > U+006a

+ [NCAPS K_K] > U+006b
+ [CAPS K_K] > U+004b
+ [NCAPS SHIFT K_K] > U+004b
+ [CAPS SHIFT K_K] > U+006b

+ [NCAPS K_L] > U+006c
+ [CAPS K_L] > U+004c
+ [NCAPS SHIFT K_L] > U+004c
+ [CAPS SHIFT K_L] > U+006c

+ [NCAPS K_M] > U+006d
+ [CAPS K_M] > U+004d
+ [NCAPS SHIFT K_M] > U+004d
+ [CAPS SHIFT K_M] > U+006d

+ [NCAPS K_N] > U+006e
+ [CAPS K_N] > U+004e
+ [NCAPS SHIFT K_N] > U+004e
+ [CAPS SHIFT K_N] > U+006e

+ [NCAPS K_O] > U+006f
+ [CAPS K_O] > U+004f
+ [NCAPS SHIFT K_O] > U+004f
+ [CAPS SHIFT K_O] > U+006f

+ [NCAPS K_P] > U+0070
+ [CAPS K_P] > U+0050
+ [NCAPS SHIFT K_P] > U+0050
+ [CAPS SHIFT K_P] > U+0070

+ [NCAPS K_Q] > U+0071
+ [CAPS K_Q] > U+0051
+ [NCAPS SHIFT K_Q] > U+0051
+ [CAPS SHIFT K_Q] > U+0071

+ [NCAPS K_R] > U+0072
+ [CAPS K_R] > U+0052
+ [NCAPS SHIFT K_R] > U+0052
+ [CAPS SHIFT K_R] > U+0072

+ [NCAPS K_S] > U+0073
+ [CAPS K_S] > U+0053
+ [NCAPS SHIFT K_S] > U+0053
+ [CAPS SHIFT K_S] > U+0073

+ [NCAPS K_T] > U+0074
+ [CAPS K_T] > U+0054
+ [NCAPS SHIFT K_T] > U+0054
+ [CAPS SHIFT K_T] > U+0074

+ [NCAPS K_U] > U+0075
+ [CAPS K_U] > U+0055
+ [NCAPS SHIFT K_U] > U+0055
+ [CAPS SHIFT K_U] > U+0075

+ [NCAPS K_V] > U+0076
+ [CAPS K_V] > U+0056
+ [NCAPS SHIFT K_V] > U+0056
+ [CAPS SHIFT K_V] > U+0076

+ [NCAPS K_W] > U+0077
+ [CAPS K_W] > U+0057
+ [NCAPS SHIFT K_W] > U+0057
+ [CAPS SHIFT K_W] > U+0077

+ [NCAPS K_X] > U+0078
+ [CAPS K_X] > U+0058
+ [NCAPS SHIFT K_X] > U+0058
+ [CAPS SHIFT K_X] > U+0078

+ [NCAPS K_Y] > U+0079
+ [CAPS K_Y] > U+0059
+ [NCAPS SHIFT K_Y] > U+0059
+ [CAPS SHIFT K_Y] > U+0079

+ [NCAPS K_Z] > U+007a
+ [CAPS K_Z] > U+005a
+ [NCAPS SHIFT K_Z] > U+005a
+ [CAPS SHIFT K_Z] > U+007a

+ [K_COLON] > dk(0384)
+ [SHIFT K_COLON] > dk(00a8)
+ [RALT K_COLON] > dk(0385)

+ [K_LBRKT] > U+002b
+ [SHIFT K_LBRKT] > U+002a
+ [RALT K_LBRKT] > U+00ab

+ [K_COMMA] > U+002c
+ [SHIFT K_COMMA] > U+003b

+ [K_SLASH] > U+002d
+ [SHIFT K_SLASH] > U+005f

+ [K_PERIOD] > U+002e
+ [SHIFT K_PERIOD] > U+003a

+ [K_HYPHEN] > U+0027
+ [SHIFT K_HYPHEN] > U+003f
+ [RALT K_HYPHEN] > U+00b1

+ [K_BKQUOTE] > U+005c
+ [SHIFT K_BKQUOTE] > U+007c

+ [K_EQUAL] > U+005d
+ [SHIFT K_EQUAL] > U+005b
+ [RALT K_EQUAL] > U+00bd

+ [K_BKSLASH] > U+0023
+ [SHIFT K_BKSLASH] > U+0040
+ [RALT K_BKSLASH] > U+00ac

+ [K_RBRKT] > U+007d
+ [SHIFT K_RBRKT] > U+007b
+ [RALT K_RBRKT] > U+00bb

+ [K_QUOTE] > dk(00a8)
+ [SHIFT K_QUOTE] > dk(0385)
+ [RALT K_QUOTE] > dk(0385)

+ [K_oE2] > U+003c
+ [SHIFT K_oE2] > U+003e


match > use(deadkeys)

group(deadkeys)

store(dkf0384) U+0020
store(dkt0384) U+0384
dk(0384) any(dkf0384) > index(dkt0384, 2)

store(dkf00a8) U+0020
store(dkt00a8) U+00a8
dk(00a8) any(dkf00a8) > index(dkt00a8, 2)

store(dkf0385) U+0020
store(dkt0385) U+0385
dk(0385) any(dkf0385) > index(dkt0385, 2)


