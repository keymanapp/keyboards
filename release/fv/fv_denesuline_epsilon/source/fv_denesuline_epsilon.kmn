store(&VERSION) "10.0"
store(&KEYBOARDVERSION) '10.0.1'
store(&TARGETS) "any"
c store(&ETHNOLOGUECODE) "chp"
store(&COPYRIGHT) '(c) 2008-2024 FirstVoices, SIL International. Portions (c) 2006 Chris Harvey'
store(&NAME) 'Dɛnɛsųłiné'
store(&BITMAP) 'fv_denesuline_epsilon.ico'
store(&VISUALKEYBOARD) 'fv_denesuline_epsilon.kvks'
store(&KMW_HELPFILE) 'fv_denesuline_epsilon_kmw_help.htm'
begin Unicode > use(main)


group(main) using keys


c --- START OF TOUCH LAYOUT RULES ---

c Touch layout rules originally imported from KeyMap.plist on Tue Nov 17 2015

store(&LAYOUTFILE) 'fv_denesuline_epsilon.keyman-touch-layout'

+ [SHIFT T_W] > 'W' layer('default')
+ [SHIFT T_E_0] > 'É' layer('default')
+ [SHIFT T_E_1] > 'Ę' layer('default')
+ [SHIFT T_E_2] > 'Ę́' layer('default')
+ [SHIFT T_E] > 'E' layer('default')
+ [SHIFT T_R] > 'R' layer('default')
+ [SHIFT T_T] > 'T' layer('default')
+ [SHIFT T_Y] > 'Y' layer('default')
+ [SHIFT T_U_0] > 'Ú' layer('default')
+ [SHIFT T_U_1] > 'Ų' layer('default')
+ [SHIFT T_U_2] > 'Ų́' layer('default')
+ [SHIFT T_U] > 'U' layer('default')
+ [SHIFT T_I_0] > 'Í' layer('default')
+ [SHIFT T_I_1] > 'Į' layer('default')
+ [SHIFT T_I_2] > 'Į́' layer('default')
+ [SHIFT T_I] > 'I' layer('default')
+ [SHIFT T_O_0] > 'Ó' layer('default')
+ [SHIFT T_O_1] > 'Ǫ' layer('default')
+ [SHIFT T_O_2] > 'Ǫ́' layer('default')
+ [SHIFT T_O] > 'O' layer('default')
+ [SHIFT T_P] > 'Ł' layer('default')
+ [SHIFT T_A_0] > 'Á' layer('default')
+ [SHIFT T_A_1] > 'Ą' layer('default')
+ [SHIFT T_A_2] > 'Ą́' layer('default')
+ [SHIFT T_A] > 'A' layer('default')
+ [SHIFT T_S] > 'S' layer('default')
+ [SHIFT T_D] > 'D' layer('default')
+ [SHIFT T_F_0] > 'Ɛ́' layer('default')
+ [SHIFT T_F_1] > 'Ɛ̨' layer('default')
+ [SHIFT T_F_2] > 'Ɛ̨́' layer('default')
+ [SHIFT T_F] > 'Ɛ' layer('default')
+ [SHIFT T_G] > 'G' layer('default')
+ [SHIFT T_H] > 'H' layer('default')
+ [SHIFT T_J] > 'J' layer('default')
+ [SHIFT T_K] > 'K' layer('default')
+ [SHIFT T_L] > 'L' layer('default')
+ [SHIFT T_COLON_0] > '"' layer('default')
+ [SHIFT T_COLON] > "'" layer('default')
+ [SHIFT T_Z] > 'Z' layer('default')
+ [SHIFT T_C] > 'C' layer('default')
+ [SHIFT T_V] > 'ʔ' layer('default')
+ [SHIFT T_B] > 'B' layer('default')
+ [SHIFT T_N] > 'N' layer('default')
+ [SHIFT T_M] > 'M' layer('default')
+ [T_W] > 'w'
+ [T_E_0] > 'é'
+ [T_E_1] > 'ę'
+ [T_E_2] > 'ę́'
+ [T_E] > 'e'
+ [T_R] > 'r'
+ [T_T] > 't'
+ [T_Y] > 'y'
+ [T_U_0] > 'ú'
+ [T_U_1] > 'ų'
+ [T_U_2] > 'ų́'
+ [T_U] > 'u'
+ [T_I_0] > 'í'
+ [T_I_1] > 'į'
+ [T_I_2] > 'į́'
+ [T_I] > 'i'
+ [T_O_0] > 'ó'
+ [T_O_1] > 'ǫ'
+ [T_O_2] > 'ǫ́'
+ [T_O] > 'o'
+ [T_P] > 'ł'
+ [T_A_0] > 'á'
+ [T_A_1] > 'ą'
+ [T_A_2] > 'ą́'
+ [T_A] > 'a'
+ [T_S] > 's'
+ [T_D] > 'd'
+ [T_F_0] > 'ɛ́'
+ [T_F_1] > 'ɛ̨'
+ [T_F_2] > 'ɛ̨́'
+ [T_F] > 'ɛ'
+ [T_G] > 'g'
+ [T_H] > 'h'
+ [T_J] > 'j'
+ [T_K] > 'k'
+ [T_L] > 'l'
+ [T_COLON_0] > '"'
+ [T_COLON] > "'"
+ [T_Z] > 'z'
+ [T_C] > 'c'
+ [T_V] > 'ʔ'
+ [T_B] > 'b'
+ [T_N] > 'n'
+ [T_M] > 'm'

c --- END OF TOUCH LAYOUT RULES ---

c constraints

store(Vowels) 'aeiouAEIOU'
store(Acute) [T_Q] [SHIFT T_Q] [K_BKQUOTE]
store(Ogonek) [T_X] [SHIFT T_X] [K_RBRKT]
store(Epsilon) 'ɛƐ'
store(HasAcute) 'áéíóúÁÉÍÓÚ'
store(HasOgonek) 'ąęįǫųĄĘĮǪŲ'

any(Vowels) + any(Acute) > index(HasAcute,1)
any(Vowels) + any(Ogonek) > index(HasOgonek,1)
any(Vowels) + [K_EQUAL] > index(HasOgonek,1) U+0301
any(HasAcute) + any(Ogonek) > index(HasOgonek,1) U+0301
any(HasOgonek) + any(Acute) > index(HasOgonek,1) U+0301

any(Epsilon) + any(Acute) > index(Epsilon,1) U+0301
any(Epsilon) + any(Ogonek) > index(Epsilon,1) U+0328
any(Epsilon) + [K_EQUAL] > index(Epsilon,1) U+0328 U+0301
'ɛ̨' + any(Acute) > 'ɛ̨́'
'ɛ́' + any(Ogonek) > 'ɛ̨́'
'Ɛ̨' + any(Acute) > 'Ɛ̨́'
'Ɛ́' + any(Ogonek) > 'Ɛ̨́'

store(underaccent)  U+0328
store(underaccentkey) [K_RBRKT]

store(overaccent)  U+0301
store(overaccentkey) [K_bkquote]

any(underaccent) + any(underaccentkey) > context beep
any(overaccent) + any(overaccentkey) > context beep  
any(underaccent) any(overaccent) + any(underaccentkey) > context beep
any(HasAcute) + any (overaccentkey) > context beep
any(HasOgonek) + any(underaccentkey) > context beep

U+0328 + [K_EQUAL] > context beep
U+0301 + [K_EQUAL] > context beep
any(HasOgonek) + [K_EQUAL] > index(HasOgonek,1) U+0301
any(HasAcute) + [K_EQUAL] > index(HasOgonek,1) U+0301
any(underaccent) + [K_EQUAL] > context beep 
any(overaccent) + [K_EQUAL] > context beep      

store(accentkey) [K_equal] [K_BKQUOTE]  [K_RBRKT]
store(NumbersAndPunctuation) '1234567890-=[]\;,./`~!@#$%^&*()_+{}|:"<>?‘’“”‹›«»' "'"  c preventing accents on non-letters
any(NumbersAndPunctuation) + any(accentkey) > context beep

c original punctuation
+ [RALT K_PERIOD] > '>'
+ [RALT K_COMMA] > '<'
+ [SHIFT RALT K_BKQUOTE] > '~'
+ [RALT K_BKQUOTE] > '`'
+ [NCAPS SHIFT RALT K_COLON] > ':'
+ [NCAPS RALT K_COLON] > ';'
+ [RALT K_SLASH] > '/'
+ [RALT K_QUOTE] > U+0027
+ [RALT K_BKSLASH] > '\'
+ [SHIFT RALT K_BKSLASH] > '|'
+ [SHIFT RALT K_RBRKT] > '}'
+ [NCAPS SHIFT RALT K_LBRKT] > '{'
+ [RALT K_RBRKT] > ']'
+ [NCAPS RALT K_LBRKT] > '['
+ [RALT K_EQUAL] > '='    
+ [RALT shift K_EQUAL] > '+'
+ [RALT K_HYPHEN] > '_' 
+ "<" > ";"
+ ">" > ":"

c Guillemets
+ [SHIFT RALT K_0] > '›'
+ [SHIFT RALT K_9] > '‹'
+ [RALT K_0] > '»'
+ [RALT K_9] > '«'

c Quotes
+ [SHIFT K_RBRKT] > "”"
+ [SHIFT K_equal] > "“"
+ [shift K_BKQUOTE] > "‘"
+ [K_QUOTE] > "’"      

c language

+ [caps shift k_colon] > 'ł'   
+ [ncaps shift k_colon] > 'Ł'
+ [caps k_colon] > 'Ł'
+ [ncaps k_colon] > 'ł'
                                             
+ [caps shift K_LBRKT] > 'ɛ'   
+ [ncaps shift K_LBRKT] > 'Ɛ'
+ [caps K_LBRKT] > 'Ɛ'
+ [ncaps K_LBRKT] > 'ɛ'

+ [K_bkquote] > "́"     c cdmacute
+ [k_equal] >  "̨́"    c cdmogo cdmacu
+ [k_rbrkt] > "̨"      c cdmogo

+ "/" > "ʔ"

match > use(normalize)
nomatch > use(x)

group(normalize)

any(overaccent) any(underaccent) > context(2) context(1)


group(x) using keys

