store(&VERSION) '10.0'
store(&NAME) 'Kwadacha Tsek’ene'
store(&COPYRIGHT) '© 2023 FirstVoices, First Peoples' U+0027 ' Cultural Council'
store(&KEYBOARDVERSION) '1.0'
store(&TARGETS) 'any'
store(&BITMAP) 'fv_kwadacha_tsekene.ico'
store(&VISUALKEYBOARD) 'fv_kwadacha_tsekene.kvks'
store(&LAYOUTFILE) 'fv_kwadacha_tsekene.keyman-touch-layout'



begin Unicode > use(main)

group(main) using keys

c --- BEGIN MOBILE LAYOUT ---

+ [SHIFT T_W] > 'W' layer('default')
+ [SHIFT T_E_0] > 'È' layer('default')
+ [SHIFT T_E_1] > 'Ę' layer('default')
+ [SHIFT T_E_2] > 'É' layer('default')
+ [SHIFT T_E_3] > 'Ę̀' layer('default')
+ [SHIFT T_E_4] > 'Ę́' layer('default')
+ [SHIFT T_E] > 'E' layer('default')
+ [SHIFT T_T] > 'T' layer('default')
+ [SHIFT T_Y] > 'Y' layer('default')
+ [SHIFT T_U_0] > 'Ù' layer('default')
+ [SHIFT T_U_1] > 'Ų' layer('default')
+ [SHIFT T_U_2] > 'Ú' layer('default')
+ [SHIFT T_U_3] > 'Ų̀' layer('default')
+ [SHIFT T_U_4] > 'Ų́' layer('default')
+ [SHIFT T_U] > 'U' layer('default')
+ [SHIFT T_I_0] > 'Ì' layer('default')
+ [SHIFT T_I_1] > 'Į' layer('default')
+ [SHIFT T_I_2] > 'Í' layer('default')
+ [SHIFT T_I_3] > 'Į̀' layer('default')
+ [SHIFT T_I_4] > 'Į́' layer('default')
+ [SHIFT T_I] > 'I' layer('default')
+ [SHIFT T_O_0] > 'Ò' layer('default')
+ [SHIFT T_O_1] > 'Ǫ' layer('default')
+ [SHIFT T_O_2] > 'Ó' layer('default')
+ [SHIFT T_O_3] > 'Ǫ̀' layer('default')
+ [SHIFT T_O_4] > 'Ǫ́' layer('default')
+ [SHIFT T_O] > 'O' layer('default')
+ [SHIFT T_P] > 'P' layer('default')
+ [SHIFT T_A_0] > 'À' layer('default')
+ [SHIFT T_A_1] > 'Ą' layer('default')
+ [SHIFT T_A_2] > 'Á' layer('default')
+ [SHIFT T_A_3] > 'Ą̀' layer('default')
+ [SHIFT T_A_4] > 'Ą́' layer('default')
+ [SHIFT T_A] > 'A' layer('default')
+ [SHIFT T_S] > 'S' layer('default')
+ [SHIFT T_D] > 'D' layer('default')
+ [SHIFT T_G] > 'G' layer('default')
+ [SHIFT T_H] > 'H' layer('default')
+ [SHIFT T_J] > 'J' layer('default')
+ [SHIFT T_K] > 'K' layer('default')
+ [SHIFT T_L] > 'L' layer('default')
+ [SHIFT T_APOS] > '’' layer('default')
+ [SHIFT T_Z] > 'Z' layer('default')
+ [SHIFT T_C] > 'C' layer('default')
+ [SHIFT T_N] > 'N' layer('default')
+ [SHIFT T_M] > 'M' layer('default')
+ [T_W] > 'w' 
+ [T_E_0] > 'è'
+ [T_E_1] > 'ę'
+ [T_E_2] > 'é'
+ [T_E_3] > 'ę̀'
+ [T_E_4] > 'ę́'
+ [T_E] > 'e'
+ [T_T] > 't'
+ [T_Y] > 'y'
+ [T_U_0] > 'ù'
+ [T_U_1] > 'ų'
+ [T_U_2] > 'ú'
+ [T_U_3] > 'ų̀'
+ [T_U_4] > 'ų́'
+ [T_U] > 'u'
+ [T_I_0] > 'ì'
+ [T_I_1] > 'į'
+ [T_I_2] > 'í'
+ [T_I_3] > 'į̀'
+ [T_I_4] > 'į́'
+ [T_I] > 'i'
+ [T_O_0] > 'ò'
+ [T_O_1] > 'ǫ'
+ [T_O_2] > 'ó'
+ [T_O_3] > 'ǫ̀'
+ [T_O_4] > 'ǫ́'
+ [T_O] > 'o'
+ [T_P] > 'p'
+ [T_A_0] > 'à'
+ [T_A_1] > 'ą'
+ [T_A_2] > 'á'
+ [T_A_3] > 'ą̀'
+ [T_A_4] > 'ą́'
+ [T_A] > 'a'
+ [T_S] > 's'
+ [T_D] > 'd'
+ [T_G] > 'g'
+ [T_H] > 'h'
+ [T_J] > 'j'
+ [T_K] > 'k'
+ [T_L] > 'l'
+ [T_APOS] > '’'
+ [T_Z] > 'z'
+ [T_C] > 'c'
+ [T_N] > 'n'
+ [T_M] > 'm'

c --- MOBILE AND DESKTOP STORES AND RULES ---

store(BaseVowels) 'aeiouAEIOU'
store(HasAcute) 'áéíóúÁÉÍÓÚ'
store(HasGrave) 'àèìòùÀÈÌÒÙ'
store(HasOgonek) 'ąęįǫųĄĘĮǪŲ'
store(AcuteKeys) [T_ACU] [SHIFT T_ACU] [K_SLASH]
store(GraveKeys) [T_GRA] [SHIFT T_GRA] [K_BKQUOTE]
store(OgonekKeys) [T_OGO] [SHIFT T_OGO] [K_LBRKT]
store(OgoAcuKeys) [T_OGOA] [SHIFT T_OGOA] [K_BKSLASH]
store(OgoGraKeys) [T_OGOG] [SHIFT T_OGOG] [K_RBRKT]

any(BaseVowels) + any(AcuteKeys) > index(HasAcute,1)
any(BaseVowels) + any(GraveKeys) > index(HasGrave,1)
any(BaseVowels) + any(OgonekKeys) > index(HasOgonek,1)
any(BaseVowels) + any(OgoAcuKeys) > index(HasOgonek,1) U+0301
any(BaseVowels) + any(OgoGraKeys) > index(HasOgonek,1) U+0300
any(HasAcute) + any(OgonekKeys) > index(HasOgonek,1) U+0301
any(HasGrave) + any(OgonekKeys) > index(HasOgonek,1) U+0300
any(HasOgonek) + any(AcuteKeys) > index(HasOgonek,1) U+0301
any(HasOgonek) + any(GraveKeys) > index(HasOgonek,1) U+0300

c shortcuts for accented double vowels
'oo' + any(AcuteKeys) > 'óó'
'óó' + any(OgonekKeys) > 'ǫ́ǫ́'
'oo' + any(GraveKeys) > 'òò'
'òò' + any(OgonekKeys) > 'ǫ̀ǫ̀'
'oo' + any(OgonekKeys) > 'ǫǫ'
'ǫǫ' + any(AcuteKeys) > 'ǫ́ǫ́'
'ǫǫ' + any(GraveKeys) > 'ǫ̀ǫ̀'
'oo' + any(OgoAcuKeys) > 'ǫ́ǫ́'
'oo' + any(OgoGraKeys) > 'ǫ̀ǫ̀'
'OO' + any(AcuteKeys) > 'ÓÓ'
'ÓÓ' + any(OgonekKeys) > 'Ǫ́Ǫ́'
'OO' + any(GraveKeys) > 'ÒÒ'
'ÒÒ' + any(OgonekKeys) > 'Ǫ̀Ǫ̀'
'OO' + any(OgonekKeys) > 'ǪǪ'
'ǪǪ' + any(AcuteKeys) > 'Ǫ́Ǫ́'
'ǪǪ' + any(GraveKeys) > 'Ǫ̀Ǫ̀'
'OO' + any(OgoAcuKeys) > 'Ǫ́Ǫ́'
'OO' + any(OgoGraKeys) > 'Ǫ̀Ǫ̀'

'ii' + any(AcuteKeys) > 'íí'
'íí' + any(OgonekKeys) > 'į́į́'
'ii' + any(GraveKeys) > 'ìì'
'ìì' + any(OgonekKeys) > 'į̀į̀'
'ii' + any(OgonekKeys) > 'įį'
'įį' + any(AcuteKeys) > 'į́į́'
'įį' + any(GraveKeys) > 'į̀į̀'
'ii' + any(OgoAcuKeys) > 'į́į́'
'ii' + any(OgoGraKeys) > 'į̀į̀'
'II' + any(AcuteKeys) > 'ÍÍ'
'ÍÍ' + any(OgonekKeys) > 'Į́Į́'
'II' + any(GraveKeys) > 'ÌÌ'
'ÌÌ' + any(OgonekKeys) > 'Į̀Į̀'
'II' + any(OgonekKeys) > 'ĮĮ'
'ĮĮ' + any(AcuteKeys) > 'Į́Į́'
'ĮĮ' + any(GraveKeys) > 'Į̀Į̀'
'II' + any(OgoAcuKeys) > 'Į́Į́'
'II' + any(OgoGraKeys) > 'Į̀Į̀'

c --- BEGIN DESKTOP RULES ---

c language
+ [K_BKQUOTE] > '̀' c grave
+ [K_LBRKT] > '̨' c ogonek
+ [K_RBRKT] > '̨̀' c ogonek+grave
+ [K_BKSLASH] > '̨́' c ogonek+acute
+ [K_SLASH] > '́' c acute
+ [K_QUOTE] > U+2019

c original punctuation
+ [RALT K_BKQUOTE] > '`'
+ [RALT K_LBRKT] > '['
+ [RALT K_RBRKT] > ']'
+ [RALT K_BKSLASH] > '\'
+ [RALT K_SLASH] > '/'
+ [RALT K_QUOTE] > U+0027

c stacking prevention
store(AboveAccents) U+0300 U+0301
store(BelowAccents) U+0328
store(AboveKeys) [K_BKQUOTE] [K_SLASH]
store(BelowKeys) [K_LBRKT]
store(ComboKeys) [K_RBRKT] [K_BKSLASH]

any(HasAcute) + any(AboveKeys) > context beep
any(HasGrave) + any(AboveKeys) > context beep
any(AboveAccents) + any(AboveKeys) > context beep
any(BelowAccents) + any(BelowKeys) > context beep
any(HasOgonek) + [K_RBRKT] > index(HasOgonek,1) U+0300
any(HasOgonek) + [K_BKSLASH] > index(HasOgonek,1) U+0301
any(HasOgonek) + [K_LBRKT] > index(HasOgonek,1)

c need to have an override rule for vowels + combining accents, ogo vowels + combining accents. Would take a lot of lines, stores don't work because of combined nature? Can take a stab at it though
any(HasOgonek) U+0300 + [K_RBRKT] > context beep
any(HasOgonek) U+0300 + [K_BKSLASH] > index(HasOgonek,1) U+0301
any(HasOgonek) U+0300 + [K_LBRKT] > context beep
any(HasOgonek) U+0301 + [K_RBRKT] > index(HasOgonek,1) U+0300
any(HasOgonek) U+0301 + [K_BKSLASH] > context beep
any(HasOgonek) U+0301 + [K_LBRKT] > context beep
