store(&VERSION) "10.0"
store(&KEYBOARDVERSION) '9.3'
store(&TARGETS) "any"
c store(&ETHNOLOGUECODE) "tgx"
store(&COPYRIGHT) '(c) 2008-2024 FirstVoices, SIL International. Portions (c) 2006 Chris Harvey'
store(&NAME) 'Tāgizi Dene'
store(&HOTKEY) '[CTRL SHIFT K_1]'
store(&BITMAP) 'fv_tagizi_dene.ico'
store(&KMW_HELPFILE) 'fv_tagizi_dene-help.htm'
 
begin Unicode > use(main)                      
 
group(main) using keys   

c --- START OF TOUCH LAYOUT RULES ---

c Touch layout rules originally imported from KeyMap.plist on Tue Nov 17 2015

c key to shorthands used throughout rules and stores
c Car ->  caron      Cir  ->  circumflex        Gra  ->  grave
c Mac ->  macron     Ogo  ->  ogonek 

store(&LAYOUTFILE) 'fv_tagizi_dene.keyman-touch-layout'


+ [SHIFT T_W] > 'W' layer('default')
+ [SHIFT T_E] > 'E' layer('default')
+ [SHIFT T_T] > 'T' layer('default')
+ [SHIFT T_Y_0] > 'Ÿ' layer('default')
+ [SHIFT T_Y] > 'Y' layer('default')
+ [SHIFT T_U] > 'U' layer('default')
+ [SHIFT T_I] > 'I' layer('default')
+ [SHIFT T_O] > 'O' layer('default')
+ [SHIFT T_P] > 'Ł' layer('default')
+ [SHIFT T_A] > 'A' layer('default')
+ [SHIFT T_S] > 'S' layer('default')
+ [SHIFT T_D] > 'D' layer('default')
+ [SHIFT T_G] > 'G' layer('default')
+ [SHIFT T_H] > 'H' layer('default')
+ [SHIFT T_J] > 'J' layer('default')
+ [SHIFT T_K] > 'K' layer('default')
+ [SHIFT T_L] > 'L' layer('default')
+ [SHIFT T_COLON_0] > '"' layer('default')
+ [SHIFT T_COLON] > "'" layer('default')
+ [SHIFT T_Z] > 'Z' layer('default')
+ [SHIFT T_C] > 'C' layer('default')
+ [SHIFT T_N] > 'B' layer('default')
+ [SHIFT T_M] > 'N' layer('default')
+ [SHIFT T_COMMA] > 'M' layer('default')
+ [T_W] > 'w'
+ [T_E] > 'e'
+ [T_T] > 't'
+ [T_Y_0] > 'ÿ'
+ [T_Y] > 'y'
+ [T_U] > 'u'
+ [T_I] > 'i'
+ [T_O] > 'o'
+ [T_P] > 'ł'
+ [T_A] > 'a'
+ [T_S] > 's'
+ [T_D] > 'd'
+ [T_G] > 'g'
+ [T_H] > 'h'
+ [T_J] > 'j'
+ [T_K] > 'k'
+ [T_L] > 'l'
+ [T_COLON_0] > '"'
+ [T_COLON] > "'"
+ [T_Z] > 'z'
+ [T_C] > 'c'
+ [T_N] > 'b'
+ [T_M] > 'n'
+ [T_COMMA] > 'm'

c --- touch stores and rules ---

store(MCarKeys) [T_R] [SHIFT T_R]
store(MCirKeys) [T_B] [SHIFT T_B]
store(MGraKeys) [T_Q] [SHIFT T_Q]
store(MMacKeys) [T_X] [SHIFT T_X]
store(MOgoKeys) [T_F] [SHIFT T_F]
store(MMacGraKeys) [T_V] [SHIFT T_V]

c single diacritics
any(Vowels) + any(MCarKeys) > index(HasCar,1)
any(Vowels) + any(MCirKeys) > index(HasCir,1)
any(Vowels) + any(MGraKeys) > index(HasGra,1)
any(Vowels) + any(MMacKeys) > index(HasMac,1)
any(Vowels) + any(MOgoKeys) > index(HasOgo,1)

c double diacritics
any(Vowels) + any(MMacGraKeys) > index(HasMac,1) U+0300 c MacGra
any(HasGra) + any(MMacKeys) > index(HasMac,1) U+0300 c MacGra
any(HasMac) + any(MGraKeys) > index(HasMac,1) U+0300 c MacGra

any(HasCar) + any(MOgoKeys) > index(HasOgo,1) U+030c c OgoCar
any(HasCir) + any(MOgoKeys) > index(HasOgo,1) U+0302 c OgoCir
any(HasGra) + any(MOgoKeys) > index(HasOgo,1) U+0300 c OgoGra
any(HasMac) + any(MOgoKeys) > index(HasOgo,1) U+0304 c OgoMac
any(HasOgo) + any(MCarKeys) > index(HasOgo,1) U+030c c OgoCar
any(HasOgo) + any(MCirKeys) > index(HasOgo,1) U+0302 c OgoCir
any(HasOgo) + any(MGraKeys) > index(HasOgo,1) U+0300 c OgoGra
any(HasOgo) + any(MMacKeys) > index(HasOgo,1) U+0304 c OgoMac

c -- triple diacritics --

c mac gra + ogo / mac gra + ogo
'ā̀' + any(MOgoKeys) > 'ą̄̀'
'ḕ' + any(MOgoKeys) > 'ę̄̀'
'ī̀' + any(MOgoKeys) > 'į̄̀'
'ṑ' + any(MOgoKeys) > 'ǭ̀'
'ū̀' + any(MOgoKeys) > 'ų̄̀'
'Ā̀' + any(MOgoKeys) > 'Ą̄̀'
'Ḕ' + any(MOgoKeys) > 'Ę̄̀'
'Ī̀' + any(MOgoKeys) > 'Į̄̀'
'Ṑ' + any(MOgoKeys) > 'Ǭ̀'
'Ū̀' + any(MOgoKeys) > 'Ų̄̀'

c ogo gra + mac
'ą̀' + any(MMacKeys) > 'ą̄̀'
'ę̀' + any(MMacKeys) > 'ę̄̀'
'į̀' + any(MMacKeys) > 'į̄̀'
'ǫ̀' + any(MMacKeys) > 'ǭ̀'
'ų̀' + any(MMacKeys) > 'ų̄̀'
'Ą̀' + any(MMacKeys) > 'Ą̄̀'
'Ę̀' + any(MMacKeys) > 'Ę̄̀'
'Į̀' + any(MMacKeys) > 'Į̄̀'
'Ǫ̀' + any(MMacKeys) > 'Ǭ̀'
'Ų̀' + any(MMacKeys) > 'Ų̄̀'

c ogo mac + gra
'ą̄' + any(MGraKeys) > 'ą̄̀'
'ę̄' + any(MGraKeys) > 'ę̄̀'
'į̄' + any(MGraKeys) > 'į̄̀'
'ǭ' + any(MGraKeys) > 'ǭ̀'
'ų̄' + any(MGraKeys) > 'ų̄̀'
'Ą̄' + any(MGraKeys) > 'Ą̄̀'
'Ę̄' + any(MGraKeys) > 'Ę̄̀'
'Į̄' + any(MGraKeys) > 'Į̄̀'
'Ǭ' + any(MGraKeys) > 'Ǭ̀'
'Ų̄' + any(MGraKeys) > 'Ų̄̀'

c ogo + MacGra
'ą' + any(MMacGraKeys) > 'ą̄̀'
'ę' + any(MMacGraKeys) > 'ę̄̀'
'į' + any(MMacGraKeys) > 'į̄̀'
'ǫ' + any(MMacGraKeys) > 'ǭ̀'
'ų' + any(MMacGraKeys) > 'ų̄̀'
'Ą' + any(MMacGraKeys) > 'Ą̄̀'
'Ę' + any(MMacGraKeys) > 'Ę̄̀'
'Į' + any(MMacGraKeys) > 'Į̄̀'
'Ǫ' + any(MMacGraKeys) > 'Ǭ̀'
'Ų' + any(MMacGraKeys) > 'Ų̄̀'

c --- END OF TOUCH LAYOUT RULES ---

c --- CROSS PLATFORM STORES AND RULES ---            

store(Vowels) 'aeiouAEIOU'
store(HasCar) 'ǎěǐǒǔǍĚǏǑǓ'
store(HasCir) 'âêîôûÂÊÎÔÛ'
store(HasGra) 'àèìòùÀÈÌÒÙ'
store(HasMac) 'āēīōūĀĒĪŌŪ'
store(HasOgo) 'ąęįǫųĄĘĮǪŲ'

c *** Consonants ***
store(l1) 'Ll'
store(l2) 'Łł'    
store(n1) "Nn"
store(n2) "Ŋŋ"

'/' + any(l1) > index(l2,2)      
',' + any(n1) > index(n2,2)

c single diacritics
'%' + any(Vowels) > index(HasCar,2)
'^' + any(Vowels) > index(HasCir,2)
'`' + any(Vowels) > index(HasGra,2)
'=' + any(Vowels) > index(HasMac,2)
',' + any(Vowels) > index(HasOgo,2)
';' + 'y' > 'ÿ'
';' + 'Y' > 'Ÿ'

c double diacritics
'=`' + any(Vowels) > index(HasMac,3) U+0300 c MacGra
'`=' + any(Vowels) > index(HasMac,3) U+0300 c MacGra

'%,' + any(Vowels) > index(HasOgo,3) U+030c c OgoCar
',%' + any(Vowels) > index(HasOgo,3) U+030c c OgoCar
'^,' + any(Vowels) > index(HasOgo,3) U+0302 c OgoCir
',^' + any(Vowels) > index(HasOgo,3) U+0302 c OgoCir
'`,' + any(Vowels) > index(HasOgo,3) U+0300 c OgoGra
',`' + any(Vowels) > index(HasOgo,3) U+0300 c OgoGra
'=,' + any(Vowels) > index(HasOgo,3) U+0304 c OgoMac
',=' + any(Vowels) > index(HasOgo,3) U+0304 c OgoMac

c triple diacritics
'`=,' + any(Vowels) > index(HasOgo,4) U+0304 U+0300 c OgoMacGra
'=`,' + any(Vowels) > index(HasOgo,4) U+0304 U+0300 c OgoMacGra
'=,`' + any(Vowels) > index(HasOgo,4) U+0304 U+0300 c OgoMacGra
'`,=' + any(Vowels) > index(HasOgo,4) U+0304 U+0300 c OgoMacGra
',`=' + any(Vowels) > index(HasOgo,4) U+0304 U+0300 c OgoMacGra
',=`' + any(Vowels) > index(HasOgo,4) U+0304 U+0300 c OgoMacGra

c --- misc ---

+ [K_QUOTE] > U+02BC
+ [RALT K_QUOTE] > U+0027
