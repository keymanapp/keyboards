c =====================Begin Identity Section===================================================
c 
c Mnemonic input method for Ethiopic script on US-QWERTY
c keyboards for Keyman version 7.1, compliant with Unicode 4.1 and later.
c 
c License       :  http://creativecommons.org/licenses/by/3.0/
c Info          :  http://keyboards.ethiopic.org/
c Keyman        :  http://www.tavultesoft.com/
c Bugs          :  keyboards@ethiopic.org
c 
c Specification : http://keyboards.ethiopic.org/specification/
c 
c Updates       :  ftp://ftp.ethiopic.org/pub/keyboards/Keyman/7.0/
c Last Update   :  2008-11-10
c 

store(&Version) "9.0"
store(&Name) "Ethiopic - (Language Neutral)"
c store(&MnemonicLayout) "1"
store(&CapsAlwaysOff) "1"
store(&Copyright) "Creative Commons Attribution 3.0"
store(&Message) "This is a language neutral mnemonic input method for Ethiopic script that requires Unicode 4.1 support."
store(&VISUALKEYBOARD) 'gff_ethiopic_7.kvk'
store(&HOTKEY) "[CTRL ALT K_Y]"
store(&targets) 'any'
store(&KEYBOARDVERSION) '1.0'
c 
c =====================End Identity Section=====================================================

c =====================Begin Data Section=======================================================

c ---------------------Maps of Syllabic Forms---------------------------------------------------
c the following is universal (language nuetral) these mappings can be overridden by
c language specific mappings
store(gIz)   'ሀለሐመሠረሰሸⶠቀⷀቐበቨተቸⶨኀነኘከⷈኸⷐወዐዘዠⶰየደዸጀገⷘጘጠጨⶸጰጸፀፈፐ'
store(kaIb)  'ሁሉሑሙሡሩሱሹⶡቁⷁቑቡቩቱቹⶩኁኑኙኩⷉኹⷑዉዑዙዡⶱዩዱዹጁጉⷙጙጡጩⶹጱጹፁፉፑ'
store(sals)  'ሂሊሒሚሢሪሲሺⶢቂⷂቒቢቪቲቺⶪኂኒኚኪⷊኺⷒዊዒዚዢⶲዪዲዺጂጊⷚጚጢጪⶺጲጺፂፊፒ'
store(rabI)  'ሃላሓማሣራሳሻⶣቃⷃቓባቫታቻⶫኃናኛካⷋኻⷓዋዓዛዣⶳያዳዻጃጋⷛጛጣጫⶻጳጻፃፋፓ'
store(hams)  'ሄሌሔሜሤሬሴሼⶤቄⷄቔቤቬቴቼⶬኄኔኜኬⷌኼⷔዌዔዜዤⶴዬዴዼጄጌⷜጜጤጬⶼጴጼፄፌፔ'
store(sads)  'ህልሕምሥርስሽⶥቅⷅቕብቭትችⶭኅንኝክⷍኽⷕውዐዝዥⶵይድዽጅግⷝጝጥጭⶽጵጽፅፍፕ'
store(sabI)  'ሆሎሖሞሦሮሶሾⶦቆⷆቖቦቮቶቾⶮኆኖኞኮⷎኾⷖዎዖዞዦⶶዮዶዾጆጎⷞጞጦጮⶾጶጾፆፎፖ'

store(keys)  'hlHm_rsx_q_Qbvtc__nNk_K_w_zZ_ydDjg_GTC_PS_fp'
store(extraKeys) 'LMRXBVWYJF'
store(extraSads) 'ልምርሽብቭውይጅፍ'

c letters that map to Me'en/Mursi/Suri
store(sabIMeen)  'ሆሎሞሮሶሾቆቦቶቾኆኖኞኦኮዎዞዮዶዾጆጎጦጮጶፆፖ'           
store(samen) 'ሇⶀⶁⶂⶃⶄቇⶅⶆⶇኇⶈⶉⶊኯዏⶋዯⶌⶍⶎጏⶏⶐⶑፇⶒ'
c ---------------------End Maps of Syllabic Forms-----------------------------------------------

c ---------------------Begin Maps of Sebatbeit Forms-----------------------------------------------
store(potentialSebatbeit)  'ኽቅክግ'
store(sebatbeit)  'ⷕⷅⷍⷝ'
store(sebatbeitY) 'yY'
c ---------------------End Maps of Sebatbeit Forms-----------------------------------------------

c ---------------------Maps for Vowels----------------------------------------------------------
store(alefKeys)  'aAuUiIeEoO'
store(alefEthio) 'አአኡኡኢኢእእኦኦ'
c ---------------------End Vowel Maps-----------------------------------------------------------

c --------------------Maps for Labiovelars------------------------------------------------------
store(zemedeKeys)      'ህልሕምሥርስሽቅቕብቭትችኅንኝክኽዝዥድዽጅግጝጥጭጵጽፅፍፕ'
store(zemedeKeysKaIb)  'ሁሉሑሙሡሩሱሹቁቑቡቩቱቹኁኑኙኩኹዙዡዱዹጁጉጙጡጩጱጹፁፉፑ'
store(zemedeEthio)     'ኋሏሗሟሧሯሷሿቋቛቧቯቷቿኋኗኟኳዃዟዧዷዿጇጓጟጧጯጷጿጿፏፗ'

c 'hmbqQhkKgGfp'
store(zemedeKeysKaIbExtended)  'ሁሙቁቑቡኁኩኹጉጙፉፑ'
store(zemedeWe)  'ኈᎀቈቘᎄኈኰዀጐⶓᎈᎌ'
store(zemedeWu)  'ኍᎃቍቝᎇኍኵዅጕⶖᎋᎏ'
store(zemedeWi)  'ኊᎁቊቚᎅኊኲዂጒⶔᎉᎍ'
store(zemedeWa)  'ኋሟቋቛቧኋኳዃጓጟፏፗ'
store(zemedeWEE) 'ኌᎂቌቜᎆኌኴዄጔⶕᎊᎎ'
c ---------------------End Labiovelars----------------------------------------------------------

c ---------------------Maps for Numbers---------------------------------------------------------
store(ArabOnes) '23456789'
store(ones)     '፪፫፬፭፮፯፰፱'
store(tens)     '፳፴፵፶፷፸፹፺'
store(arabNumbers) '123456789'
store(ethNumbers) '፩፪፫፬፭፮፯፰፱፲፳፴፵፶፷፸፹፺፻፼'      

store(arabNumbersWithZero) '0123456789'
store(ColonOrComma) ':,'
store(ethWordspaceOrComma) '፡፣'
c ---------------------End Numbers--------------------------------------------------------------

c ---------------------Maps of Keystrokes of Syllabic Forms-------------------------------------
store(gIz-key)  'eEäÄéÉèÈêÊëË'
store(kaIb-key) 'uUùÙúÚûÛüÜ'
store(sals-key) 'iIìÌíÍîÎïÏ'
store(rabI-key) 'aAàÀáÁâÂãÃåÅ'
store(hams-key) 'æÆ'
store(sabI-key) 'oOòÒóÓôÔõÕöÖøØ'
c ---------------------Maps of Keystrokes of Syllabic Forms-------------------------------------

c ---------------------Maps of Yared Zaima Notation---------------------------------------------
store(Tebek) U+135F
store(zaima) '᎐᎑᎒᎓᎔᎕᎖᎗᎘᎙'$Tebek
store(zaimaMenu) '[1᎐2᎑3᎒4᎓5᎔6᎕7᎖8᎗9᎘0᎙_፟]'
store(zaimaKeys) '1234567890_'
c ---------------------End Maps of Yared Zaima Notation---------------------------------------

c ---------------------Maps of Archiac Ligatures --------------------------------------------------
store(zemedeYa) 'ፙፘፚ'
store(zemedeYaKeys) 'ምርፍ'
c ---------------------End Maps of Archiac Ligatures --------------------------------------------

c =====================End Data Section=========================================================

c =====================Begin Functional Section=================================================
store(&BITMAP) 'ethiopic.bmp'
begin Unicode > use(first)

c first matches a menu in the context or passes processing to main
group(first)
c match a menu on the context
  outs(zaimaMenu) > use(zaimaGroup)
   
c no menu was in the context, so process keys normally
  nomatch         > use(main)
   
c The main group
group(main) using keys

c ---------------------Input of Special Symbols-------------------------------------------------
c 
c The input section here is for rules that must precede other rules
c 
  + '_' > outs(zaimaMenu)
  $Tebek + '_' > '_'

  + any(extraKeys) > index(extraSads,1)
  + any(keys)     > index(sads,1)
c ---------------------End Input of Special Symbols---------------------------------------------

c ---------------------Input of Double Strike Letters-------------------------------------------
  'ስ' + 's' > 'ሥ'
  'ህ' + 'h' > 'ኅ'
  'ጽ' + 'S' > 'ፅ'
  'ሽ' + 'x' > 'ⶥ'
  'ሽ' + 'X' > 'ⶥ'
  'ች' + 'c' > 'ⶭ'
  'ዥ' + 'Z' > 'ⶵ'
  'ጭ' + 'C' > 'ⶽ'
c ---------------------End Input of Double Strike Letters---------------------------------------

c ---------------------Input of Lone Vowels-----------------------------------------------------
  + any(alefKeys) > index(alefEthio,1)
  'አ' + 'e' > 'ኧ'
  
c Alef-A Vowels as Regular Syllables
  'እ' + any(kaIb-key) > 'ኡ'
  'እ' + any(sals-key) > 'ኢ'
  'እ' + any(rabI-key) > 'ኣ'
  'ኢ' + any(gIz-key)  > 'ኤ'
  'እ' + any(sabI-key) > 'ኦ'

c Aynu-A Vowels as Regular Sylalbles
  'እ' + any(gIz-key)  > 'ዕ'
  'ዕ' + any(gIz-key)  > 'ዐ'
  'ዕ' + any(kaIb-key) > 'ዑ'
  'ዕ' + any(sals-key) > 'ዒ'
  'ዕ' + any(rabI-key) > 'ዓ'
  'ዒ' + any(gIz-key)  > 'ዔ'
  'ዕ' + any(sabI-key) > 'ዖ'

c Aynu-A Vowels as Vowels
  'ኡ' + any(kaIb-key) > 'ዑ'
  'ኢ' + any(sals-key) > 'ዒ'
  'ኦ' + any(sabI-key) > 'ዖ'

c Completing the Ge'ez "a" chain:
  'አ' + any(rabI-key) > 'ዓ'
  'ዓ' + any(rabI-key) > 'ዐ'
  'ዐ' + any(rabI-key) > 'ኣ'
c ---------------------End Input of Lone Vowels-------------------------------------------------

c ---------------------Input of Basic Syllables-------------------------------------------------
  any(sads) + any(gIz-key)  > index(gIz,1)
  any(sads) + any(kaIb-key) > index(kaIb,1)
  any(sads) + any(sals-key) > index(sals,1)
  any(sads) + any(rabI-key) > index(rabI,1)
  any(sads) + any(hams-key) > index(hams,1)
  any(sals) + any(gIz-key)  > index(hams,1)
  any(sads) + any(sabI-key) > index(sabI,1) 
c comment out for Amharic
  any(sabIMeen) + any(rabI-key) > index(samen,1)
c ---------------------End Input of Basic Syllables---------------------------------------------

c ---------------------Input of Sebatbeit Syllables-------------------------------------------------
  any(potentialSebatbeit) + any(sebatbeitY) > index(sebatbeit,1)
c ---------------------End Input of Sebatbeit Syllables---------------------------------------------

c ---------------------Input of Labiovelars-----------------------------------------------------
  any(zemedeKeysKaIb) + any(rabI-key) > index(zemedeEthio,1)
  any(zemedeKeysKaIbExtended) + any(gIz-key)  > index(zemedeWe,1)
  any(zemedeKeysKaIbExtended) + any(kaIb-key) > index(zemedeWu,1)
  any(zemedeKeysKaIbExtended) + any(sals-key) > index(zemedeWi,1)
  any(zemedeWi)               + any(gIz-key)  > index(zemedeWEE,1)

  'ኮ' + 'o' > 'ኰ'
  'ጎ' + 'o' > 'ጐ'

  'ኰ' + 'o' > 'ኮ'
  'ጐ' + 'o' > 'ጎ'
c ---------------------End Input of Labiovelars-------------------------------------------------

c ---------------------Input of Archiac Ligatures-----------------------------------------------
  any(zemedeYaKeys) + 'Y' > index(zemedeYa, 1)
  any(zemedeYa) + 'a' > index(zemedeYa,1)
c ---------------------End Input of Archiac Ligatures-------------------------------------------

c ---------------------Input of Punctuation-----------------------------------------------------
c 
c The only dead key for entry of special characters and
c to handle the ge'ez + lone vowel problem:  ግእዝ and not ገዝ
c 
  any(sads) + "'" > index(sads,1) deadkey(1)
  deadkey(1) + "'" > "'"


  + ':' > '፡'
  + [SHIFT K_SPACE] > '፡'
  '፡' + ':'  > '።'
  '።' + ':' > '፨'
  '፨' + ':'  > '፠'  c makes circular
  '፠' + ':'  > ':'  c makes circular

      + ',' > '፣'
  '፣' + ',' > '፥'
  '፥' + ',' > ','
  ',' + ',' > '፣'  c makes circular

      + ';' > '፤'
  '፤' + ';' > ';'
  ';' + ';' > '፤'  c makes circular

  '፡' + '-' > '፦'

  + '?' > '፧'   
  '፧' + '?' > '?'
  
c The following group is here for compatibility with proposed ISO transliteration for Ethiopic:
  '፡' + '#' > '፨'
  '፡' + '+' > '፠'  
  '፡' + ',' > '፣'  
  '፡' + '?' > '፧'   
  
  deadkey(1) + '!' > '¡'

  + '<' > '‹'
  + '>' > '›'
  '‹' + '<' > '«'
  '›' + '>' > '»'
  '«' + '<' > '<'
  '»' + '>' > '>'
c ---------------------End Input of Punctuation-------------------------------------------------

c ---------------------Input of European Characters---------------------------------------------
  store(euro) 'ÇçÐðÝýÿßÑñ'
  store(euroMap) 'ጭችድዽይይይጽኝኝ'
  + any(euro) > index(euroMap,1)

  'ጽ' + 'ß' > 'ፅ'
  + '¨' > U+135F

  store(euroVowels) 'àÀáÁâÂãÃåÅùÙúÚûÛüÜìÌíÍîÎïÏæÆéÉèÈêÊëËòÒóÓôÔõÕöÖøØ'
c this mapping has an Amharic bias
  store(euroVowelsMap) 'አአአአአአአአአአኡኡኡኡኡኡኡኡኢኢኢኢኢኢኢኢኤኤእእእእእእእእኦኦኦኦኦኦኦኦኦኦኦኦ'
  + any(euroVowels) > index(euroVowelsMap,1)
c ---------------------End Input of European Characters-----------------------------------------

c ---------------------Input of Numbers---------------------------------------------------------

c Special Rule for Arabic Numerals
c 
c The following attempts to auto-correct the use of Ethiopic wordspace and
c Ethiopic comma within an Arabic numeral context.  Ethiopic wordspace gets
c used erroneously in time formats and Ethiopic commas as an order of thousands
c delimiter. The correction context is not known until numerals appear on _both_
c sides of the punctuation.
c 
  any(arabNumbersWithZero) any(ethWordspaceOrComma) + any(arabNumbers) > index(arabNumbersWithZero,1) index(ColonOrComma,2) index(arabNumbers,3)

c Ethiopic Numerals

  "'" + '1' > '፩'
  "'" + any(ArabOnes) > index(ones,2)
  + '1' > '፩'
  + any(ArabOnes) > index(ones,1)   c I3243 - index was out of bounds

c special cases for multiples of one
  '፩'  + '0' > '፲'
  '፲'  + '0' > '፻'
  '፻'  + '0' > '፲፻'
  '፲፻' + '0' > '፼'
  '፼'  + '0' > '፲፼'    
  '፲፼' + '0' > '፻፼' 
  '፻፼'  + '0' > '፲፻፼'
  '፲፻፼' + '0' > '፼፼'
  '፼፼' + '0' > context beep  c do not go any higher, we could beep here

c upto the order of 100 million
  any(ones)     + '0' > index(tens,1)
  any(tens)     + '0' > index(ones,1) '፻'  c Hundreds
  any(ones)  '፻ '+ '0' > index(tens,1) '፻'  c Thousands
  any(tens)  '፻' + '0' > index(ones,1) '፼'  c Ten Thousands
  any(ones)  '፼' + '0' > index(tens,1) '፼'  c Hundred Thousands
  any(tens)  '፼' + '0' > index(ones,1) '፻፼' c Millions
  any(ones) '፻፼' + '0' > index(tens,1) '፻፼' c Ten Millions
  any(tens) '፻፼' + '0' > index(ones,1) '፼፼' c Hundred Millions

c enhance this later, look for something that can copy a match over
  any(ethNumbers) + any(arabNumbers) > index(ethNumbers,1)  index(ethNumbers,2)
c ---------------------End Input of Numbers-----------------------------------------------------

c ---------------------Begin Zaima Group--------------------------------------------------------
group( zaimaGroup ) using keys
  + any(zaimaKeys) > index(zaima, 1)
  nomatch          > use(main)             
c ---------------------End Zaima Group----------------------------------------------------------
c =====================End Functional Section===================================================
