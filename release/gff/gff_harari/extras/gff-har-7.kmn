c =====================Begin Identity Section===================================================
c 
c Mnemonic input method for Harari script on US-QWERTY
c keyboards for Keyman version 7.1, compliant with Unicode 4.1 and later.
c 
c License       :  http://creativecommons.org/licenses/by/3.0/
c Info          :  http://keyboards.ethiopic.org/
c Keyman        :  http://www.tavultesoft.com/
c Bugs          :  keyboards@ethiopic.org
c 
c Specification : http://keyboards.ethiopic.org/specification/
c 
c Updates       :  ftp://ftp.ethiopic.org/pub/keyboards/Keyman/7.0/
c Last Update   :  2008-11-10
c 

store(&Version) "7.0"
store(&Name) "Harari"
store(&Bitmap) "../Bitmaps/AlefA.bmp"
store(&MnemonicLayout) "1"
store(&CapsAlwaysOff) "1"
store(&Copyright) "Creative Commons Attribution 3.0"
store(&Message) "This is an Harari language mnemonic input method for Ethiopic script that requires Unicode 4.1 support."
store(&EthnologueCode) "har"
store(&VISUALKEYBOARD) 'gff-har-7.kvk'
HOTKEY "^%H"
c 
c =====================End Identity Section=====================================================

c =====================Begin Data Section=======================================================

c ---------------------Maps of Syllabic Forms---------------------------------------------------
c the following is universal (language neutral) these mappings can be overridden by
c language specific mappings
store(gIz)  'ለሐመረሰሸቀበተቸነኘአከኸወዘየደጀገጠጨፈ'
store(kaIb) 'ሉሑሙሩሱሹቁቡቱቹኑኙኡኩኹዉዙዩዱጁጉጡጩፉ'
store(sals) 'ሊሒሚሪሲሺቂቢቲቺኒኚኢኪኺዊዚዪዲጂጊጢጪፊ'
store(rabI) 'ላሓማራሳሻቃባታቻናኛኣካኻዋዛያዳጃጋጣጫፋ'
store(hams) 'ሌሔሜሬሴሼቄቤቴቼኔኜኤኬኼዌዜዬዴጄጌጤጬፌ'
store(sads) 'ልሕምርስሽቅብትችንኝእክኽውዝይድጅግጥጭፍ'
store(sabI) 'ሎሖሞሮሶሾቆቦቶቾኖኞኦኮኾዎዞዮዶጆጎጦጮፎ'

store(keys) 'lHmrsxqbtcnNekKwzydjgTCf'
c the following is Amharic specific
store(extraKeys) 'LMRXBVQWYDJGF'
store(extraSads) 'ልምርሽብብቅውይድጅግፍ'
c ---------------------End Maps of Syllabic Forms-----------------------------------------------

c ---------------------Maps for Vowels----------------------------------------------------------
store(loneVowelKeys)  'aAuUiIeEoO'
store(loneVowelEthio) 'አአኡኡኢኢእእኦኦ'
store(composableVowel) 'አኡኢእኦ'
c ---------------------End Vowel Maps-----------------------------------------------------------

c --------------------Maps for Labiovelars------------------------------------------------------
c 
c Silt'e does not make use of the labiovelars
c 
c ---------------------End Labiovelars----------------------------------------------------------

c ---------------------Maps for Numbers---------------------------------------------------------
store(ArabOnes)    '23456789'
store(ones)        '፪፫፬፭፮፯፰፱'
store(tens)        '፳፴፵፶፷፸፹፺'
store(arabNumbers) '123456789'
store(ethNumbers)  '፩፪፫፬፭፮፯፰፱፲፳፴፵፶፷፸፹፺፻፼'
store(arabNumbersWithZero) '0123456789'
store(ColonOrComma) ':,'
store(ethWordspaceOrComma) '፡፣'
c ---------------------End Numbers--------------------------------------------------------------

c ---------------------Maps of Keystrokes of Syllabic Forms-------------------------------------
store(gIz-key)  'eEäÄéÉèÈêÊëË'
store(kaIb-key) 'uUùÙúÚûÛüÜ'
store(sals-key) 'iIìÌíÍîÎïÏ'
store(rabI-key) 'aAàÀáÁâÂãÃåÅ'
store(hams-key) 'æÆ'
store(sabI-key) 'oOòÒóÓôÔõÕöÖøØ'
c ---------------------Maps of Keystrokes of Syllabic Forms-------------------------------------

c =====================End Data Section=========================================================

c =====================Begin Functional Section=================================================
c 
begin Unicode > use(main)
group(main) using keys

c ---------------------Input of Special Symbols-------------------------------------------------
c 
c The input section here is for rules that must precede other rules
c 
  + '_' > U+135F c gemination
  U+135F + '_' > '_'

  + any(extraKeys) > index(extraSads,1)
  + any(keys)      > index(sads,1)
c ---------------------End Input of Special Symbols---------------------------------------------

c ---------------------Input of Double Strike Letters-------------------------------------------
c 
c None occuring for Silt'e
c 
c ---------------------End Input of Double Strike Letters---------------------------------------

c ---------------------Input of Lone Vowels-----------------------------------------------------
c 
c Alef-A Vowels as Vowels
  + any(loneVowelKeys) > index(loneVowelEthio,1)

  'አ' + any(gIz-key)  > 'እኧ'
  'አ' + any(kaIb-key) > 'ኡ'
  'አ' + any(sals-key) > 'ኢ'
  'አ' + any(rabI-key) > 'ኣ'
  'ኢ' + any(gIz-key)  > 'ኤ'
  'አ' + any(sabI-key) > 'ኦ'

c Silt'e does not use the Aynu-A

  any(composableVowel) + "'" > index(composableVowel,1) deadkey(2)
c 
c ---------------------End Input of Lone Vowels-------------------------------------------------

c ---------------------Input of Basic Syllables-------------------------------------------------
  any(sads) + any(gIz-key)  > index(gIz,1)
  any(sads) + any(kaIb-key) > index(kaIb,1)
  any(sads) + any(sals-key) > index(sals,1)
  any(sads) + any(rabI-key) > index(rabI,1)
  any(sads) + any(hams-key) > index(hams,1)
  any(sals) + any(gIz-key)  > index(hams,1)
  any(sads) + any(sabI-key) > index(sabI,1)
c ---------------------End Input of Basic Syllables---------------------------------------------

c ---------------------End Input of Labiovelars-------------------------------------------------
c 
c Silt'e does not make use of the labiovelars
c 
c ---------------------End Input of Labiovelars-------------------------------------------------

c ---------------------Input of Punctuation-----------------------------------------------------
c 
c The only dead key for entry of special characters and
c to handle the ge'ez + lone vowel problem:  ግእዝ and not ገዝ
c 
  any(sads)  + "'" > index(sads,1) deadkey(2)
  deadkey(2) + "'" > "'"

  + ':'     > '፡'
  + [SHIFT ' '] > '፡'
  '፡' + ':' > '።'
  '።' + ':' > ':'
  ':' + ':' > '፡'  c makes circular
      + ',' > '፣'
  '፣' + ',' > '፥'
  '፥' + ',' > ','
  ',' + ',' > '፣'  c makes circular

      + ';' > '፤'
  '፤' + ';' > ';'
  ';' + ';' > '፤'  c makes circular

  '፡' + '-' > '፦'

      + '<' > '‹'
      + '>' > '›'
  '‹' + '<' > '«'
  '›' + '>' > '»'
  '«' + '<' > '<'
  '»' + '>' > '>'
c ---------------------End Input of Punctuation-------------------------------------------------

c ---------------------Input of European Characters---------------------------------------------
  store(euro) 'ÇçÐðÝýÿßÑñ'
  store(euroMap) 'ጭችድድይይይስኝኝ'
  + any(euro) > index(euroMap,1)

  + '¨' > U+135F

  store(euroVowels) 'àÀáÁâÂãÃåÅùÙúÚûÛüÜìÌíÍîÎïÏæÆéÉèÈêÊëËòÒóÓôÔõÕöÖøØ'
c this mapping has an Amharic bias
  store(euroVowelsMap) 'አአአአአአአአአአኡኡኡኡኡኡኡኡኢኢኢኢኢኢኢኢኤኤእእእእእእእእኦኦኦኦኦኦኦኦኦኦኦኦ'
  + any(euroVowels) > index(euroVowelsMap,1)
c ---------------------End Input of European Characters-----------------------------------------

c ---------------------Input of Numbers---------------------------------------------------------

c Special Rule for Arabic Numerals
c 
c The following attempts to auto-correct the use of Ethiopic wordspace and
c Ethiopic comma within an Arabic numeral context.  Ethiopic wordspace gets
c used erroneously in time formats and Ethiopic commas as an order of thousands
c delimiter. The correction context is not known until numerals appear on _both_
c sides of the punctuation.
c 
  any(arabNumbersWithZero) any(ethWordspaceOrComma) + any(arabNumbers) > index(arabNumbersWithZero,1) index(ColonOrComma,2) index(arabNumbers,3)

c Ethiopic Numerals

  "'" + '1' > '፩'
  "'" + any(ArabOnes) > index(ones,2)

c special cases for multiples of one
  '፩'   + '0' > '፲'
  '፲'   + '0' > '፻'
  '፻'   + '0' > '፲፻'
  '፲፻'  + '0' > '፼'
  '፼'   + '0' > '፲፼'
  '፲፼'  + '0' > '፻፼'
  '፻፼'  + '0' > '፲፻፼'
  '፲፻፼' + '0' > '፼፼'
  '፼፼'  + '0' > context beep  c do not go any higher, we could beep here

c upto the order of 100 million
  any(ones)      + '0' > index(tens,1)
  any(tens)      + '0' > index(ones,1) '፻'  c Hundreds
  any(ones)  '፻ '+ '0' > index(tens,1) '፻'  c Thousands
  any(tens)  '፻' + '0' > index(ones,1) '፼'  c Ten Thousands
  any(ones)  '፼' + '0' > index(tens,1) '፼'  c Hundred Thousands
  any(tens)  '፼' + '0' > index(ones,1) '፻፼' c Millions
  any(ones) '፻፼' + '0' > index(tens,1) '፻፼' c Ten Millions
  any(tens) '፻፼' + '0' > index(ones,1) '፼፼' c Hundred Millions

c enhance this later, look for something that can copy a match over
  any(ethNumbers) + any(arabNumbers) > index(ethNumbers,1)  index(ethNumbers,2)
c ---------------------End Input of Numbers-----------------------------------------------------

c =====================End Functional Section===================================================
