c bj_mista_wasaha_cree generated from template at 2020-12-09 09:51:24
c with name "Swampy Cree (Tataskweyak)"
store(&VERSION) '10.0'
store(&NAME) 'Swampy Cree (Tataskweyak)'
store(&COPYRIGHT) '© Bill Jancewicz'
store(&KEYBOARDVERSION) '1.2'
store(&TARGETS) 'web desktop'
store(&VISUALKEYBOARD) 'bj_mista_wasaha_cree.kvks'


c File Name: mista_wasaha_cree.kmn
c File Version: Oct 2017
c Rewritten by Bill Jancewicz

c Originally written by Bob Hallissy with the following notes:
c ================================================================
c Purpose: KeyMan definition file for Eastern Cree, for use with
c SILEasternCree fonts for Windows and KeyMan 3.1.
c 
c The definition herein matches the EasternCree GX font. That is,
c when you install this KeyMan file in Windows, you can keyboard
c essentially the same way as you would on a Macintosh which is
c using the GX font. (The underlying document codes will be
c different, of course.)
c 
c Known differences between this definition and the GX font are:
c GX converts "je" (as in Jesus) to "chii"; I don't.
c GX provides easy access to the alternate forms of re, ri, rii; I don't
c 
c Author: Bob Hallissy
c Date: 16-Aug-95
c ================================================================
c Revision: 20 Nov 99, (BJ) changed bitmaps buttons, filename
c Fixed for Windows 98 fonts, added "o" for "u"
c Revision: 16 Jan 2000, (BJ) added "th"
c Revision: 25 May 2002, (BJ) redone for Keyman 5.0 BJWCREE3.KMN
c Revision: 02 May 2001, (BJ) redone for Unicode BJCRUNI.KMN
c Revision: 17 Nov 2001, (BJ) added CapH for h char following digraphs
c Revision: 09 Mar 2002, (BJ) fixed non-final "u" + "h" + continue
c Revision: 25 May 2002, (BJ) change to Unicode BJWCRUNI.KMN
c Revision: 21 Jul 2004, (BJ) added "hk" (raised x). When this is not a final,
c this comes out as h+k+...
c Revision: 02 May 2005, (BJ) changed "w" back to "small circle"

c This keyboard is distinguished by: TH characters that resemble Y characters,
c (with a slash), w-dot FOLLOWS the character (West Cree style)
c Western Finals, zig-zag R's and L's

c Revision: 30 Jan 2010, (BJ) redone for Plains Cree:
c Plains Cree uses a dot on the line (normal period) for period.
c Plains Cree uses non-breaking full spaces between preverbs (type "-").
c Plains Cree uses 2 non-breaking thin spaces after prefixes (type "=").
c Plains Cree uses the y-series-with-a-bar for "th", a double-bar + for the final.
c Plains Cree uses normal wedges < > for quote marks.

c Revision: 02 Sep 2014, (BJ) redone for Oji-Cree:
c Based on the 30 Jan 2010 version, but replaced the final y U+1429 ("plus") with U+153E (small "ya")

c Revision 28 Jul 2015, (BJ) revised for Oji-Cree
c Added curvy quotes on the "wedge" keys like Naskapi.

c Revision 29 Mar 2016, (BJ) revised for Oji-Cree
c changed filename from bjojcuni.kmn to bj_oji_cree.kmn for Tavultesoft repository
c updated stores for developer version 9.0

c Revision 01 Apr 2016, (BJ) bug fix for initial consonant keys ver 9.0.1

c Revision 18 Oct 2017, (BJ) revised for Mistah Wasaha Cree (Swampy Cree, Tataskweyak)
c changed filename from bjojcuni.kmn to mista_wasaha_cree.kmn for Tavultesoft repository
c applying recommended changes for "sh":

c Rather than 14D1 "ng" use 1421 "bottom half ring" for "sh"

c Replaced the U+153E (small "ya") with U+1429 ("plus")

begin Unicode > use(main)

c ================================================================
c STORES
c ================================================================

c initial consonant keys (The Î is U+1421 which is the sh consonant)
c (The ÿ is U+15AE which is the th consonant that looks like y-slash)

store(ConsKey) "ptkcmnsyf"
store(CapConsKey) "PTKCMNSYF"

c Consonant followed by vowel:
c           p      t      k      c      m      n       s      y       f      
store(Ce)  U+142F U+144C U+146B U+1489 U+14A3 U+14C0  U+14ED U+1526  U+1553 
store(Ci)  U+1431 U+144E U+146D U+148B U+14A5 U+14C2  U+14EF U+1528  U+1555 
store(Cii) U+1432 U+144F U+146E U+148C U+14A6 U+14C3  U+14F0 U+1529  U+1556 
store(Cu)  U+1433 U+1450 U+146F U+148D U+14A7 U+14C4  U+14F1 U+152A  U+1557 
store(Cuu) U+1434 U+1451 U+1470 U+148E U+14A8 U+14C5  U+14F2 U+152B  U+1558 
store(Co)  U+1433 U+1450 U+146F U+148D U+14A7 U+14C4  U+14F1 U+152A  U+1557 
store(Coo) U+1434 U+1451 U+1470 U+148E U+14A8 U+14C5  U+14F2 U+152B  U+1558 
store(Ca)  U+1438 U+1455 U+1472 U+1490 U+14AA U+14C7  U+14F4 U+152D  U+1559 
store(Caa) U+1439 U+1456 U+1473 U+1491 U+14AB U+14C8  U+14F5 U+152E  U+155A 

c Consonant sh and th followed by vowel:
store(Ce_shth)  U+1510 U+15A7
store(Ci_shth)  U+1511 U+15A8
store(Cii_shth) U+1512 U+15A9
store(Cu_shth)  U+1513 U+15AA
store(Cuu_shth) U+1514 U+15AB
store(Co_shth)  U+1513 U+15AA
store(Coo_shth) U+1514 U+15AB
store(Ca_shth)  U+1515 U+15AC
store(Caa_shth) U+1516 U+15AD

c Standalone or trailing consonant, "western finals":
c           p      t      k      c      m      n       s       y       f      
store(CC)  U+144A U+141F U+1420 U+1428 U+14BC U+1423  U+1422 U+1429  U+155D 

c Standalone or trailing sh and th
store(CC_shth)  U+1421 U+15AE 

c Vowel keys
store(VowelKey) "eiuoa"
store(CapVowelKey) "EIUOA"

c Standalone vowels (also includes doubled):
c (Note that the u triangle (U+1405) is NOT the word-final form.
c           e      i      u      o      a        ii     uu     aa
store(VV) U+1401 U+1403 U+1405 U+1405 U+140A   U+1404 U+1406 U+140B

c Special keys
store(Hkey) "h"
store(CapHkey) "H"
store(WKey) "wW"

c Western Finals with U+1427 following
store(C_wf) U+1401 U+1403 U+1404 U+1405 U+1406 U+140A U+140B U+142F U+1431 U+1432 U+1433 U+1434 U+1438 U+1439 \
            U+144C U+144E U+144F U+1450 U+1451 U+1455 U+1456 U+146B U+146D U+146E U+146F U+1470 U+1472 U+1473 \
            U+1489 U+148B U+148C U+148D U+148E U+1490 U+1491 U+14A3 U+14A5 U+14A6 U+14A7 U+14A8 U+14AA U+14AB \
            U+14C0 U+14C2 U+14C3 U+14C4 U+14C5 U+14C7 U+14C8 U+14ED U+14EF U+14F0 U+14F1 U+14F2 U+14F4 U+14F5 \
            U+1510 U+1511 U+1512 U+1513 U+1514 U+1515 U+1516 U+1526 U+1528 U+1529 U+152A U+152B U+152D U+152E \
            U+15A7 U+15A8 U+15A9 U+15AA U+15AB U+15AC U+15AD \
            U+155E U+1567 \

store(C_wfc) U+140D U+140F U+1411 U+1413 U+1415 U+1418 U+141A U+143B U+143D U+143F U+1441 U+1443 U+1445 U+1447 \
             U+1458 U+145A U+145C U+145E U+1460 U+1462 U+1464 U+1475 U+1477 U+1479 U+147B U+147D U+147F U+1481 \
             U+1493 U+1495 U+1497 U+1499 U+149B U+149D U+149F U+14AD U+14AF U+14B1 U+14B3 U+14B5 U+14B7 U+14B9 \
             U+14CA U+18C7 U+18C9 U+18CB U+18CD U+14CC U+14CE U+14F7 U+14F9 U+14FB U+14FD U+14FF U+1501 U+1503 \
             U+1518 U+151A U+151C U+151E U+1520 U+1522 U+1524 U+1530 U+1532 U+1534 U+1536 U+1538 U+153A U+153C \
             U+1677 U+1678 U+1679 U+167A U+167B U+167C U+167D \
             U+18E3 U+1569 \

c These are not needed for this language
c Western Finals (long a) w      pw     tw     kw     chw    mw     nw     sw     shw    yw     thw
c store(C_wf_long_a)        U+1418 U+1445 U+1462 U+147F U+149D U+14B7 U+14CC U+1501 U+1522 U+153A U+167C
c store(C_wfc_long_a)       U+141A U+1447 U+1464 U+1481 U+149F U+14B9 U+14CE U+1503 U+1524 U+153C U+167D

c Western Finals (long i) w      pw     tw     kw     chw    mw     nw     sw     shw    yw     thw
c store(C_wf_long_i)        U+140F U+143D U+145A U+1477 U+1495 U+14AF U+18C7 U+14F9 U+151A U+1532 U+1678
c store(C_wfc_long_i)       U+1411 U+143F U+145C U+1479 U+1497 U+14B1 U+18C9 U+14FB U+151C U+1534 U+1679

c Western Finals (long o/u) w      pw     tw     kw     chw    mw     nw     sw     shw    yw     thw
c store(C_wf_long_u)          U+1413 U+1441 U+145E U+147B U+1499 U+14B3 U+18CB U+14FD U+151E U+1536 U+167A
c store(C_wfc_long_u)         U+1415 U+1443 U+1460 U+147D U+149B U+14B5 U+18CD U+14FF U+1520 U+1538 U+167B

c ================================================================
c GROUP MAIN - convert keycodes
c 
c (Conversion to syllables and reordering, etc, takes place in
c the group MakeSyllables.)
c ================================================================

group(Main) using keys

c  Option keys Set composite mode by default
    store(option_key)     ''
 + [RALT K_HYPHEN]	>	set(option_key='nfd') c 
 + [RALT K_EQUAL]	>	reset(option_key)  c 
         
c Special rules to deal with h: (western finals)
c s   +    h      > sh (small sh character)
c s   +    H      > s (small s) and h
c t   +    h      > th
c t   +    H      > t (small t) and h
c c   +    h      > c
c c   +    H      > c (small c) and h
c otherwise, h      > standalone h
    U+1422 + any(Hkey)    > U+1421
    U+1422 + any(CapHkey) > U+1422 U+1426
    U+141F + any(Hkey)    > U+15AE
    U+141F + any(CapHkey) > U+141F U+1426
    U+1428 + any(Hkey)    > U+1428
    U+1428 + any(CapHkey) > U+1428 U+1426
         + any(Hkey)      > U+1426
         + any(CapHkey)   > U+1426

c hk stuff
    U+1426 + "k"          > U+157D c hk 
        
U+157D + "e"  > U+1426 U+146B c h+ke
U+157D + "i"  > U+1426 U+146D c h+ki
U+157D + "u"  > U+1426 U+146F c h+ko
U+157D + "o"  > U+1426 U+146F c h+ko
U+157D + "a"  > U+1426 U+1472 c h+ka

U+157D + any(Wkey) > U+1426 U+1484 c h kw

c Consonant key to standalone consonant:
 + any(ConsKey)    > index(CC,1)
 + any(CapConsKey) > index(CC,1)
c compiler says that "The rule will never be matched because its key code is never fired."

c Alternate consonants: (voiced for voiceless)
    + "b" > U+144A
    + "d" > U+141F
    + "g" > U+1420
    + "j" > U+1428
    + "v" > U+155D
    + "z" > U+1422
c "r" and "l" sigma character (western style)
    + "l" > U+14EC
    + "r" > U+1552 
    + "L" > U+14EC
    + "R" > U+1552

c Vowel key to vowel:
    + any(VowelKey)    > index(VV,1)
    + any(CapVowelKey) > index(VV,1)

c Special rules for w (western)
c k   +   w       > kw
c m   +   w       > mw
c otherwise, w       > standalone w
    U+1420 + any(wKey) > U+1484
    U+14BC + any(wKey) > U+14BD
         + any(wKey) > U+1424

c Normal Period
    + "." > "."

c Special double thin non-breaking space for personal prefixes:
    + "=" > U+202F U+202F          
c Special non-breaking space for preverbs:
c    + "-" > U+00A0
    
c + "_" > U+202F c narrow non-breaking space
U+202F + "_" > U+00A0 c standard non-breaking space

c + "<" > U+2018 c open single quote
c + ">" > U+2019 c close single quote
U+2018 + "<" > U+201C c open double quote
U+2019 + ">" > U+201D c close double quote

c various symbols and numbers
store(numbers_keys)     '1234567890'
store(numbers_chars)    U+0031 U+0032 U+0033 U+0034 U+0035 U+0036 U+0037 U+0038 U+0039 U+0030
store(symbols_keys)     "`-[]\;',/"
store(symbols_chars)    U+0060 U+00A0 U+005B U+005D U+005C U+003B U+0027 U+002C U+002F     
store(symbols_Skeys)    '~!@#$%^&*()_+{}|:"<>?'
store(symbols_Schars)   U+007E U+0021 U+0040 U+0023 U+0024 U+0025 U+005E U+0026 U+002A U+0028 U+0029 U+202F U+002B U+007B U+007D U+007C U+003A U+0022 U+2018 U+2019 U+003F

+ any(numbers_keys) > index(numbers_chars,1)
+ any(symbols_keys) > index(symbols_chars,1)
+ any(symbols_Skeys)    > index(symbols_Schars,1)

c unwanted keys: q x Q D G J Z X V B
store(unwanted_keys)    "qxQDGJZXVB"
+ any(unwanted_keys) > nul

c If we did anything, then go look for syllables
    match   > use(MakeSyllables)


c ================================================================
c GROUP MAKESYLLABLES
c 
c This group process no keys, but looks at stuff already in the
c context stack and does things such as make syllables, reorder
c the "w" when in CVw, handle word-final u, etc.
c ================================================================

group(MakeSyllables)
c "w" is the final ring character U+1424

c Special rules for w:
c k   +   w  > kw
c m   +   w  > mw
    U+1420 U+1424 > U+1484
    U+14BC U+1424 > U+14BD

c Re-order the w when the syllable is complete:
c (WESTERN STYLE REORDERING)
c kw +            vowel   >  k+vowel     w
c mw +            vowel   >  m+vowel     w
c Consonant + w + vowel   >  Consonant+vowel w
    U+1484  U+1403 > U+146D U+1427
    U+1484  U+140A > U+1472 U+1427
    U+1484  U+1405 > U+146F U+1427
    U+1484  U+1401 > U+146B U+1427
    
    U+14BD  U+1403 > U+14A5 U+1427
    U+14BD  U+140A > U+14AA U+1427
    U+14BD  U+1405 > U+14A7 U+1427
    U+14BD  U+1401 > U+14A3 U+1427
    
    any(CC)  U+1427  any(VV)  > index(CC,1) index(VV,3) U+1427

    any(CC_shth)  U+1427  any(VV)  > index(CC_shth,1) index(VV,3) U+1427

c Convert consonant followed by vowels into syllable:

    any(CC) U+1401 > index(Ce,1) 
    any(CC) U+1403 > index(Ci,1) 
    any(CC) U+1404 > index(Cii,1) 
    any(CC) U+1405 > index(Cu,1) 
    any(CC) U+1406 > index(Cuu,1) 
c    any(CC) U+1405 > index(Co,1)  c duplicate of line 276
c    any(CC) U+1406 > index(Coo,1) c duplicate of line 277
    any(CC) U+140A > index(Ca,1) 
    any(CC) U+140B > index(Caa,1) 


    any(CC_shth) U+1401 > index(Ce_shth,1) 
    any(CC_shth) U+1403 > index(Ci_shth,1) 
    any(CC_shth) U+1404 > index(Cii_shth,1) 
    any(CC_shth) U+1405 > index(Cu_shth,1) 
    any(CC_shth) U+1406 > index(Cuu_shth,1) 
c    any(CC_shth) U+1405 > index(Co_shth,1)   c duplicate of line 287
c    any(CC_shth) U+1406 > index(Coo_shth,1)   c duplicate of line 288
    any(CC_shth) U+140A > index(Ca_shth,1) 
    any(CC_shth) U+140B > index(Caa_shth,1) 

c Consonant + w + vowel   >   Consonant vowel w

    any(CC) U+1424  U+1401 > index(Ce,1) U+1427  
    any(CC) U+1424  U+1403 > index(Ci,1) U+1427
    any(CC) U+1427  U+1404 > index(Cii,1) U+1427 deadkey(1) 
    any(CC) U+1424  U+1405 > index(Cu,1) U+1427  
    any(CC) U+1427  U+1406 > index(Cuu,1) U+1427 deadkey(1) 
c    any(CC) U+1424  U+1405 > index(Co,1) U+1427  c duplicate of line 299
c    any(CC) U+1427  U+1406 > index(Coo,1) U+1427 deadkey(1)   c duplicate of line 300
    any(CC) U+1424  U+140A > index(Ca,1) U+1427  
    any(CC) U+1427  U+140B > index(Caa,1) U+1427 deadkey(1) 

    any(CC_shth) U+1424  U+1401 > index(Ce_shth,1) U+1427  
    any(CC_shth) U+1424  U+1403 > index(Ci_shth,1) U+1427
    any(CC_shth) U+1427  U+1404 > index(Cii_shth,1) U+1427 deadkey(1) 
    any(CC_shth) U+1424  U+1405 > index(Cu_shth,1) U+1427  
    any(CC_shth) U+1427  U+1406 > index(Cuu_shth,1) U+1427 deadkey(1) 
c    any(CC_shth) U+1424  U+1405 > index(Co_shth,1) U+1427    c duplicate of line 309
c    any(CC_shth) U+1427  U+1406 > index(Coo_shth,1) U+1427 deadkey(1)    c duplicate of line 310
    any(CC_shth) U+1424  U+140A > index(Ca_shth,1) U+1427  
    any(CC_shth) U+1427  U+140B > index(Caa_shth,1) U+1427 deadkey(1) 
    
c Vowel followed by duplicate vowel changes to long form:
    U+1403    U+1403 > U+1404  
    U+1405    U+1405 > U+1406  
    U+140A    U+140A > U+140B  
    any(Ci) U+1403 > index(Cii,1)  
    any(Cu) U+1405 > index(Cuu,1)  
    any(Co) U+1405 > index(Coo,1)  
    any(Ca) U+140A > index(Caa,1)  

    any(Ci_shth) U+1403 > index(Cii_shth,1)  
    any(Cu_shth) U+1405 > index(Cuu_shth,1)  
    any(Co_shth) U+1405 > index(Coo_shth,1)  
    any(Ca_shth) U+140A > index(Caa_shth,1) 

c mid w
    any(Ci) U+1427 U+1403 > index(Cii,1) U+1427 deadkey(1) 
    any(Cu) U+1427 U+1405 > index(Cuu,1) U+1427 deadkey(1)  
    any(Co) U+1427 U+1405 > index(Coo,1) U+1427 deadkey(1)  
    any(Ca) U+1427 U+140A > index(Caa,1) U+1427 deadkey(1)  

    any(Ci_shth) U+1427 U+1403 > index(Cii_shth,1) U+1427 deadkey(1) 
    any(Cu_shth) U+1427 U+1405 > index(Cuu_shth,1) U+1427 deadkey(1)  
    any(Co_shth) U+1427 U+1405 > index(Coo_shth,1) U+1427 deadkey(1)  
    any(Ca_shth) U+1427 U+140A > index(Caa_shth,1) U+1427 deadkey(1)

c w + vowel = vowel w

    U+1424   U+1401 > U+1401 U+1427 deadkey(1)
    U+1424   U+1403 > U+1403 U+1427  
    U+1403 U+1427 U+1403 > U+1404 U+1427 deadkey(1)
    U+1424   U+1405 > U+1405 U+1427
    U+1405 U+1427 U+1405 > U+1406 U+1427 deadkey(1)
    U+1424   U+140A > U+140A U+1427
    U+140A U+1427 U+140A > U+140B U+1427 deadkey(1)



c Special rule for Christ (remember, ch is already c)
c ch     r      i      s      t    > christ symbol
    U+1428 U+1552 U+1403 U+1422 U+141F > U+166D

c short vowels
if(option_key = '') any(C_wf) U+1427 > index(C_wfc,2)
if(option_key = '') any(C_wf) U+1427 deadkey(1) > index(C_wfc,2)


c These are not needed for this language
c long vowels
c if(option_key = '') any(C_wf_long_a) U+140A > index(C_wfc_long_a,2)
c if(option_key = '') U+1427 U+1559 U+140A > U+155B c fwaa
c if(option_key = '') U+1427 U+1566 U+140A > U+1568 c thwaa

c if(option_key = '') any(C_wf_long_i) U+1403 > index(C_wfc_long_i,2)
c if(option_key = '') any(C_wf_long_u) U+1405 > index(C_wfc_long_u,2)

c If we did anything, then go back through again
    match > use(MakeSyllables)
        
c end of file

