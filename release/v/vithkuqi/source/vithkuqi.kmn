c
c Keyman keyboard generated by ImportKeyboard
c Imported: 2019-07-02 14:29:50
c
c Source Keyboard File: KBDAL.DLL
c Source KeyboardID: 0000041c
c
c 

store(&VERSION) '10.0'
store(&NAME) 'Vithkuqi'
store(&VISUALKEYBOARD) 'vithkuqi.kvks'
store(&BITMAP) 'vithkuqi.ico'
store(&LAYOUTFILE) 'vithkuqi.keyman-touch-layout'
store(&COPYRIGHT) '© SIL International'
store(&KEYBOARDVERSION) '1.0'
store(&TARGETS) 'any'

begin Unicode > use(main)

group(main) using keys

+ [K_SPACE] > U+0020

+ [K_0] > U+0030
+ [SHIFT K_0] > U+0029
+ [RALT K_0] > dk(02dd)

+ [K_1] > U+0031
+ [SHIFT K_1] > U+0021
+ [RALT K_1] > U+007e

+ [K_2] > U+0032
+ [SHIFT K_2] > U+0022
+ [RALT K_2] > dk(02c7)

+ [K_3] > U+0033
+ [SHIFT K_3] > U+0023
+ [RALT K_3] > dk(005e)

+ [K_4] > U+0034
+ [SHIFT K_4] > U+0024
+ [RALT K_4] > dk(02d8)

+ [K_5] > U+0035
+ [SHIFT K_5] > U+0025
+ [RALT K_5] > dk(00b0)

+ [K_6] > U+0036
+ [SHIFT K_6] > U+005e
+ [RALT K_6] > dk(02db)

+ [K_7] > U+0037
+ [SHIFT K_7] > U+0026
+ [RALT K_7] > U+0060

+ [K_8] > U+0038
+ [SHIFT K_8] > U+002a
+ [RALT K_8] > dk(02d9)

+ [K_9] > U+0039
+ [SHIFT K_9] > U+0028
+ [RALT K_9] > dk(00b4)

+ [NCAPS K_A] > U+10597
+ [CAPS K_A] > U+10570
+ [NCAPS SHIFT K_A] > U+10570
+ [CAPS SHIFT K_A] > U+10597

+ [NCAPS K_B] > U+10599
+ [CAPS K_B] > U+10572
+ [NCAPS SHIFT K_B] > U+10572
+ [CAPS SHIFT K_B] > U+10572
+ [NCAPS RALT K_B] > U+10598

+ [NCAPS K_C] > U+1059A
+ [CAPS K_C] > U+10573
+ [NCAPS SHIFT K_C] > U+10573
+ [CAPS SHIFT K_C] > U+1059A

+ [NCAPS K_D] > U+1059C
+ [CAPS K_D] > U+10575
+ [NCAPS SHIFT K_D] > U+10575
+ [CAPS SHIFT K_D] > U+1059C
+ [NCAPS RALT K_D] > U+1059D

+ [NCAPS K_E] > U+1059E
+ [CAPS K_E] > U+10577
+ [NCAPS SHIFT K_E] > U+10577
+ [CAPS SHIFT K_E] > U+1059E

+ [NCAPS K_F] > U+105A0
+ [CAPS K_F] > U+10579
+ [NCAPS SHIFT K_F] > U+10579
+ [CAPS SHIFT K_F] > U+105A0

+ [NCAPS K_G] > U+105A1
+ [CAPS K_G] > U+1057A
+ [NCAPS SHIFT K_G] > U+1057A
+ [CAPS SHIFT K_G] > U+105A1

+ [NCAPS K_H] > U+105A3
+ [CAPS K_H] > U+1057C
+ [NCAPS SHIFT K_H] > U+1057C
+ [CAPS SHIFT K_H] > U+105A3
+ [NCAPS RALT K_H] > U+105A4

+ [NCAPS K_I] > U+105A5
+ [CAPS K_I] > U+1057E
+ [NCAPS SHIFT K_I] > U+1057E
+ [CAPS SHIFT K_I] > U+105A5
+ [NCAPS RALT K_I] > U+105A6

+ [NCAPS K_J] > U+105A7
+ [CAPS K_J] > U+10580
+ [NCAPS SHIFT K_J] > U+10580
+ [CAPS SHIFT K_J] > U+105A7

+ [NCAPS K_K] > U+105A8
+ [CAPS K_K] > U+10581
+ [NCAPS SHIFT K_K] > U+10581
+ [CAPS SHIFT K_K] > U+105A8

+ [NCAPS K_L] > U+105A9
+ [CAPS K_L] > U+10582
+ [NCAPS SHIFT K_L] > U+10582
+ [CAPS SHIFT K_L] > U+105A9
+ [NCAPS RALT K_L] > U+105AA

+ [NCAPS K_M] > U+105AB
+ [CAPS K_M] > U+10584
+ [NCAPS SHIFT K_M] > U+10584
+ [CAPS SHIFT K_M] > U+105AB

+ [NCAPS K_N] > U+105AC
+ [CAPS K_N] > U+10585
+ [NCAPS SHIFT K_N] > U+10585
+ [CAPS SHIFT K_N] > U+105AC
+ [NCAPS RALT K_N] > U+105AD

+ [NCAPS K_O] > U+105AE
+ [CAPS K_O] > U+10587
+ [NCAPS SHIFT K_O] > U+10587
+ [CAPS SHIFT K_O] > U+105AE

+ [NCAPS K_P] > U+105AF
+ [CAPS K_P] > U+10588
+ [NCAPS SHIFT K_P] > U+10588
+ [CAPS SHIFT K_P] > U+105AF

+ [NCAPS K_Q] > U+105B0
+ [CAPS K_Q] > U+10589
+ [NCAPS SHIFT K_Q] > U+10589
+ [CAPS SHIFT K_Q] > U+105B0

+ [NCAPS K_R] > U+105B1
+ [CAPS K_R] > U+1058A
+ [NCAPS SHIFT K_R] > U+1058A
+ [CAPS SHIFT K_R] > U+105B1

+ [NCAPS K_S] > U+105B3
+ [CAPS K_S] > U+1058C
+ [NCAPS SHIFT K_S] > U+1058C
+ [CAPS SHIFT K_S] > U+105B3
+ [NCAPS RALT K_S] > U+105B4

+ [NCAPS K_T] > U+105B5
+ [CAPS K_T] > U+1058E
+ [NCAPS SHIFT K_T] > U+1058E
+ [CAPS SHIFT K_T] > U+105B5
+ [NCAPS RALT K_T] > U+105B6

+ [NCAPS K_U] > U+105B7
+ [CAPS K_U] > U+10590
+ [NCAPS SHIFT K_U] > U+10590
+ [CAPS SHIFT K_U] > U+105B7

+ [NCAPS K_V] > U+105B8
+ [CAPS K_V] > U+10591
+ [NCAPS SHIFT K_V] > U+10591
+ [CAPS SHIFT K_V] > U+105B8

+ [NCAPS K_W] > U+1059B
+ [CAPS K_W] > U+10574
+ [NCAPS SHIFT K_W] > U+10574
+ [CAPS SHIFT K_W] > U+1059B

+ [NCAPS K_X] > U+105B9
+ [CAPS K_X] > U+10592
+ [NCAPS SHIFT K_X] > U+10592
+ [CAPS SHIFT K_X] > U+105B9

+ [NCAPS K_Y] > U+105BB
+ [CAPS K_Y] > U+10594
+ [NCAPS SHIFT K_Y] > U+10594
+ [CAPS SHIFT K_Y] > U+105BB

+ [NCAPS K_Z] > U+105BC
+ [CAPS K_Z] > U+10595
+ [NCAPS SHIFT K_Z] > U+10595
+ [CAPS SHIFT K_Z] > U+105BC

+ [NCAPS K_COLON] > U+1059F
+ [CAPS K_COLON] > U+10578
+ [NCAPS SHIFT K_COLON] > U+10578
+ [CAPS SHIFT K_COLON] > U+1059F
+ [NCAPS RALT K_COLON] > U+0024

+ [K_EQUAL] > U+003d
+ [SHIFT K_EQUAL] > U+002b
+ [RALT K_EQUAL] > dk(00b8)

+ [K_COMMA] > U+002c
+ [SHIFT K_COMMA] > U+003b
+ [RALT K_COMMA] > U+003c

+ [K_HYPHEN] > U+002d
+ [SHIFT K_HYPHEN] > U+005f
+ [RALT K_HYPHEN] > dk(00a8)

+ [K_PERIOD] > U+002e
+ [SHIFT K_PERIOD] > U+003a
+ [RALT K_PERIOD] > U+003e

+ [K_SLASH] > U+002f
+ [SHIFT K_SLASH] > U+003f

+ [K_BKQUOTE] > U+005c
+ [SHIFT K_BKQUOTE] > U+007c

+ [NCAPS K_LBRKT] > U+0027
+ [CAPS K_LBRKT] > U+00c7
+ [NCAPS SHIFT K_LBRKT] > U+00c7
+ [CAPS SHIFT K_LBRKT] > U+0027
+ [NCAPS RALT K_LBRKT] > U+00f7

+ [K_BKSLASH] > U+005d
+ [SHIFT K_BKSLASH] > U+007d
+ [RALT K_BKSLASH] > U+00a4

+ [K_RBRKT] > U+0040
+ [SHIFT K_RBRKT] > U+0027
+ [RALT K_RBRKT] > U+00d7

+ [K_QUOTE] > U+005b
+ [SHIFT K_QUOTE] > U+007b
+ [RALT K_QUOTE] > U+00df

+ [K_oE2] > U+003c
+ [SHIFT K_oE2] > U+003e


match > use(deadkeys)

group(deadkeys)

store(dkf02dd) U+0020 U+006f U+004f U+0075 U+0055
store(dkt02dd) U+02dd U+0151 U+0150 U+0171 U+0170
dk(02dd) any(dkf02dd) > index(dkt02dd, 2)

store(dkf02c7) U+0020 U+0063 U+0043 U+0064 U+0044 U+0065 U+0045 U+006c U+004c U+006e U+004e U+0072 U+0052 U+0073 U+0053 U+0074 U+0054 U+007a U+005a
store(dkt02c7) U+02c7 U+010d U+010c U+010f U+010e U+011b U+011a U+013e U+013d U+0148 U+0147 U+0159 U+0158 U+0161 U+0160 U+0165 U+0164 U+017e U+017d
dk(02c7) any(dkf02c7) > index(dkt02c7, 2)

store(dkf005e) U+0020 U+0061 U+0041 U+0069 U+0049 U+006f U+004f
store(dkt005e) U+005e U+00e2 U+00c2 U+00ee U+00ce U+00f4 U+00d4
dk(005e) any(dkf005e) > index(dkt005e, 2)

store(dkf02d8) U+0020 U+0061 U+0041
store(dkt02d8) U+02d8 U+0103 U+0102
dk(02d8) any(dkf02d8) > index(dkt02d8, 2)

store(dkf00b0) U+0020 U+0075 U+0055
store(dkt00b0) U+00b0 U+016f U+016e
dk(00b0) any(dkf00b0) > index(dkt00b0, 2)

store(dkf02db) U+0020 U+0061 U+0041 U+0065 U+0045
store(dkt02db) U+02db U+0105 U+0104 U+0119 U+0118
dk(02db) any(dkf02db) > index(dkt02db, 2)

store(dkf02d9) U+0020 U+007a U+005a
store(dkt02d9) U+02d9 U+017c U+017b
dk(02d9) any(dkf02d9) > index(dkt02d9, 2)

store(dkf00b4) U+0020 U+0061 U+0041 U+0063 U+0043 U+0065 U+0045 U+0069 U+0049 U+006c U+004c U+006e U+004e U+006f U+004f U+0072 U+0052 U+0073 U+0053 U+0075 U+0055 U+0079 U+0059 U+007a U+005a
store(dkt00b4) U+00b4 U+00e1 U+00c1 U+0107 U+0106 U+00e9 U+00c9 U+00ed U+00cd U+013a U+0139 U+0144 U+0143 U+00f3 U+00d3 U+0155 U+0154 U+015b U+015a U+00fa U+00da U+00fd U+00dd U+017a U+0179
dk(00b4) any(dkf00b4) > index(dkt00b4, 2)

store(dkf00b8) U+0020 U+0063 U+0043 U+0073 U+0053 U+0074 U+0054
store(dkt00b8) U+00b8 U+00e7 U+00c7 U+015f U+015e U+0163 U+0162
dk(00b8) any(dkf00b8) > index(dkt00b8, 2)

store(dkf00a8) U+0020 U+0061 U+0041 U+0065 U+0045 U+006f U+004f U+0075 U+0055
store(dkt00a8) U+00a8 U+00e4 U+00c4 U+00eb U+00cb U+00f6 U+00d6 U+00fc U+00dc
dk(00a8) any(dkf00a8) > index(dkt00a8, 2)


