c Vietnamese Telex keyboard by Mike Vo


c *******************************************************************
c HEADERS
c *******************************************************************

store(&VERSION) '10.0'
store(&BITMAP) 'vietnamese_telex.ico'
store(&NAME) 'Vietnamese Telex'
store(&COPYRIGHT) '© 2022 Mike Vo'
store(&KEYBOARDVERSION) '1.05'
store(&TARGETS) 'any'
store(&VISUALKEYBOARD) 'vietnamese_telex.kvks'
store(&LAYOUTFILE) 'vietnamese_telex.keyman-touch-layout'


c *******************************************************************
c CONSTANTS
c *******************************************************************

store(vowels)                   'aeiouăâêôơưyAEIOUĂÂÊÔƠƯY'
store(vowels_sac)               'áéíóúắấếốớứýÁÉÍÓÚẮẤẾỐỚỨÝ'
store(vowels_huyen)             'àèìòùằầềồờừỳÀÈÌÒÙẰẦỀỒỜỪỲ'
store(vowels_hoi)               'ảẻỉỏủẳẩểổởửỷẢẺỈỎỦẲẨỂỔỞỬỶ'
store(vowels_nga)               'ãẽĩõũẵẫễỗỡữỹÃẼĨÕŨẴẪỄỖỠỮỸ'
store(vowels_nang)              'ạẹịọụặậệộợựỵẠẸỊỌỤẶẬỆỘỢỰỴ'


c *******************************************************************
begin Unicode > use(main)          c Code execution entry point


group(main) using keys
    c Keyboard options
    store(option_toneplace)     ''


    c Special d/đ consonant rules - Upper and Lowercase
    'd' + 'd' > 'đ'
    'd' + 'D' > 'đ'
    'đ' + 'd' > 'dd'
    'đ' + 'D' > 'dD'
    'D' + 'd' > 'Đ'
    'D' + 'D' > 'Đ'
    'Đ' + 'd' > 'Dd'
    'Đ' + 'D' > 'DD'

    c Single-vowel nuclei accent rules - Upper and Lowercase
    any(vowels) + 's' > index(vowels_sac, 1)
    any(vowels) + 'S' > index(vowels_sac, 1)
    any(vowels) + 'f' > index(vowels_huyen, 1)
    any(vowels) + 'F' > index(vowels_huyen, 1)
    any(vowels) + 'r' > index(vowels_hoi, 1)
    any(vowels) + 'R' > index(vowels_hoi, 1)
    any(vowels) + 'x' > index(vowels_nga, 1)
    any(vowels) + 'X' > index(vowels_nga, 1)
    any(vowels) + 'j' > index(vowels_nang, 1)
    any(vowels) + 'J' > index(vowels_nang, 1)

    any(vowels_sac) + 's' > index(vowels, 1) 's'
    any(vowels_sac) + 'S' > index(vowels, 1) 'S'
    any(vowels_sac) + 'f' > index(vowels_huyen, 1)
    any(vowels_sac) + 'F' > index(vowels_huyen, 1)
    any(vowels_sac) + 'r' > index(vowels_hoi, 1)
    any(vowels_sac) + 'R' > index(vowels_hoi, 1)
    any(vowels_sac) + 'x' > index(vowels_nga, 1)
    any(vowels_sac) + 'X' > index(vowels_nga, 1)
    any(vowels_sac) + 'j' > index(vowels_nang, 1)
    any(vowels_sac) + 'J' > index(vowels_nang, 1)

    any(vowels_huyen) + 's' > index(vowels_sac, 1)
    any(vowels_huyen) + 'S' > index(vowels_sac, 1)
    any(vowels_huyen) + 'f' > index(vowels, 1) 'f'
    any(vowels_huyen) + 'F' > index(vowels, 1) 'F'
    any(vowels_huyen) + 'r' > index(vowels_hoi, 1)
    any(vowels_huyen) + 'R' > index(vowels_hoi, 1)
    any(vowels_huyen) + 'x' > index(vowels_nga, 1)
    any(vowels_huyen) + 'X' > index(vowels_nga, 1)
    any(vowels_huyen) + 'j' > index(vowels_nang, 1)
    any(vowels_huyen) + 'J' > index(vowels_nang, 1)

    any(vowels_hoi) + 's' > index(vowels_sac, 1)
    any(vowels_hoi) + 'S' > index(vowels_sac, 1)
    any(vowels_hoi) + 'f' > index(vowels_huyen, 1)
    any(vowels_hoi) + 'F' > index(vowels_huyen, 1)
    any(vowels_hoi) + 'R' > index(vowels, 1) 'R'
    any(vowels_hoi) + 'r' > index(vowels, 1) 'r'
    any(vowels_hoi) + 'x' > index(vowels_nga, 1)
    any(vowels_hoi) + 'X' > index(vowels_nga, 1)
    any(vowels_hoi) + 'j' > index(vowels_nang, 1)
    any(vowels_hoi) + 'J' > index(vowels_nang, 1)

    any(vowels_nga) + 's' > index(vowels_sac, 1)
    any(vowels_nga) + 'S' > index(vowels_sac, 1)
    any(vowels_nga) + 'f' > index(vowels_huyen, 1)
    any(vowels_nga) + 'F' > index(vowels_huyen, 1)
    any(vowels_nga) + 'r' > index(vowels_hoi, 1)
    any(vowels_nga) + 'R' > index(vowels_hoi, 1)
    any(vowels_nga) + 'x' > index(vowels, 1) 'x'
    any(vowels_nga) + 'X' > index(vowels, 1) 'X'
    any(vowels_nga) + 'j' > index(vowels_nang, 1)
    any(vowels_nga) + 'J' > index(vowels_nang, 1)

    any(vowels_nang) + 's' > index(vowels_sac, 1)
    any(vowels_nang) + 'S' > index(vowels_sac, 1)
    any(vowels_nang) + 'f' > index(vowels_huyen, 1)
    any(vowels_nang) + 'F' > index(vowels_huyen, 1)
    any(vowels_nang) + 'r' > index(vowels_hoi, 1)
    any(vowels_nang) + 'R' > index(vowels_hoi, 1)
    any(vowels_nang) + 'x' > index(vowels_nga, 1)
    any(vowels_nang) + 'X' > index(vowels_nga, 1)
    any(vowels_nang) + 'j' > index(vowels, 1) 'j'
    any(vowels_nang) + 'J' > index(vowels, 1) 'J'


    c Single-vowel nuclei telex rules - Lowercase
    c 'a' + 'w' > 'ă'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'a' + 'W' > 'ă'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'ă' + 'w' > 'aw'
    'ă' + 'W' > 'aW'
    c 'a' + 'a' > 'â'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'a' + 'A' > 'â'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'â' + 'a' > 'aa'
    'â' + 'A' > 'aA'
    c 'e' + 'e' > 'ê'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'e' + 'E' > 'ê'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'ê' + 'e' > 'ee'
    'ê' + 'E' > 'eE'
    c 'o' + 'o' > 'ô'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'o' + 'O' > 'ô'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'ô' + 'o' > 'oo'
    'ô' + 'O' > 'oO'
    c 'o' + 'w' > 'ơ'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'o' + 'W' > 'ơ'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'ơ' + 'w' > 'ow'
    'ơ' + 'W' > 'oW'
    c 'u' + 'w' > 'ư'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'u' + 'W' > 'ư'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.

    c Single-vowel nuclei telex rules - Uppercase
    c 'A' + 'w' > 'Ă'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'A' + 'W' > 'Ă'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'Ă' + 'w' > 'Aw'
    'Ă' + 'W' > 'AW'
    c 'A' + 'a' > 'Â'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'A' + 'A' > 'Â'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'Â' + 'a' > 'Aa'
    'Â' + 'A' > 'AA'
    c 'E' + 'e' > 'Ê'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'E' + 'E' > 'Ê'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'Ê' + 'e' > 'Ee'
    'Ê' + 'E' > 'EE'
    c 'O' + 'o' > 'Ô'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'O' + 'O' > 'Ô'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'Ô' + 'o' > 'Ôo'
    'Ô' + 'O' > 'ÔO'
    c 'O' + 'w' > 'Ơ'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'O' + 'W' > 'Ơ'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    'Ơ' + 'w' > 'Ow'
    'Ơ' + 'W' > 'OW'
    c 'U' + 'w' > 'Ư'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.
    c 'U' + 'W' > 'Ư'  c This rule will be automatically generated with Python in the section below. Commented out to supress Keyman compiler warning, but still left here for clarity.

    c Special w/ư rules
    + 'w' > 'ư'
    'ư' + 'w' > 'w'
    'ư' + 'W' > 'w'
    + 'W' > 'Ư'
    'Ư' + 'w' > 'W'
    'Ư' + 'W' > 'W'

    c Special ươ vowel nuclei rules - Uppercase and Lowercase
    'uo' + 'w' > 'ươ'
    'uo' + 'W' > 'ươ'
    'ươ' + 'w' > 'uow'
    'ươ' + 'W' > 'uoW'
    'Uo' + 'w' > 'Ươ'
    'Uo' + 'W' > 'Ươ'
    'Ươ' + 'w' > 'Uow'
    'Ươ' + 'W' > 'UoW'
    'uO' + 'w' > 'ưƠ'
    'uO' + 'W' > 'ưƠ'
    'ưƠ' + 'w' > 'uOw'
    'ưƠ' + 'W' > 'uOW'
    'UO' + 'w' > 'ƯƠ'
    'UO' + 'W' > 'ƯƠ'
    'ƯƠ' + 'w' > 'UOw'
    'ƯƠ' + 'W' > 'UOW'

    c Qu + a diacritic rules
    'qua' + 's' > 'quá'
    'Qua' + 's' > 'Quá'
    'qUa' + 's' > 'qUá'
    'quA' + 's' > 'quÁ'
    'QUa' + 's' > 'QUá'
    'qUA' + 's' > 'qUÁ'
    'QuA' + 's' > 'QuÁ'
    'QUA' + 's' > 'QUÁ'
    'qua' + 'S' > 'quá'
    'Qua' + 'S' > 'Quá'
    'qUa' + 'S' > 'qUá'
    'quA' + 'S' > 'quÁ'
    'QUa' + 'S' > 'QUá'
    'qUA' + 'S' > 'qUÁ'
    'QuA' + 'S' > 'QuÁ'
    'QUA' + 'S' > 'QUÁ'

    'qua' + 'f' > 'quà'
    'Qua' + 'f' > 'Quà'
    'qUa' + 'f' > 'qUà'
    'quA' + 'f' > 'quÀ'
    'QUa' + 'f' > 'QUà'
    'qUA' + 'f' > 'qUÀ'
    'QuA' + 'f' > 'QuÀ'
    'QUA' + 'f' > 'QUÀ'
    'qua' + 'F' > 'quà'
    'Qua' + 'F' > 'Quà'
    'qUa' + 'F' > 'qUà'
    'quA' + 'F' > 'quÀ'
    'QUa' + 'F' > 'QUà'
    'qUA' + 'F' > 'qUÀ'
    'QuA' + 'F' > 'QuÀ'
    'QUA' + 'F' > 'QUÀ'

    'qua' + 'r' > 'quả'
    'Qua' + 'r' > 'Quả'
    'qUa' + 'r' > 'qUả'
    'quA' + 'r' > 'quẢ'
    'QUa' + 'r' > 'QUả'
    'qUA' + 'r' > 'qUẢ'
    'QuA' + 'r' > 'QuẢ'
    'QUA' + 'r' > 'QUẢ'
    'qua' + 'R' > 'quả'
    'Qua' + 'R' > 'Quả'
    'qUa' + 'R' > 'qUả'
    'quA' + 'R' > 'quẢ'
    'QUa' + 'R' > 'QUả'
    'qUA' + 'R' > 'qUẢ'
    'QuA' + 'R' > 'QuẢ'
    'QUA' + 'R' > 'QUẢ'

    'qua' + 'x' > 'quã'
    'Qua' + 'x' > 'Quã'
    'qUa' + 'x' > 'qUã'
    'quA' + 'x' > 'quÃ'
    'QUa' + 'x' > 'QUã'
    'qUA' + 'x' > 'qUÃ'
    'QuA' + 'x' > 'QuÃ'
    'QUA' + 'x' > 'QUÃ'
    'qua' + 'X' > 'quã'
    'Qua' + 'X' > 'Quã'
    'qUa' + 'X' > 'qUã'
    'quA' + 'X' > 'quÃ'
    'QUa' + 'X' > 'QUã'
    'qUA' + 'X' > 'qUÃ'
    'QuA' + 'X' > 'QuÃ'
    'QUA' + 'X' > 'QUÃ'

    'qua' + 'j' > 'quạ'
    'Qua' + 'j' > 'Quạ'
    'qUa' + 'j' > 'qUạ'
    'quA' + 'j' > 'quẠ'
    'QUa' + 'j' > 'QUạ'
    'qUA' + 'j' > 'qUẠ'
    'QuA' + 'j' > 'QuẠ'
    'QUA' + 'j' > 'QUẠ'
    'qua' + 'J' > 'quạ'
    'Qua' + 'J' > 'Quạ'
    'qUa' + 'J' > 'qUạ'
    'quA' + 'J' > 'quẠ'
    'QUa' + 'J' > 'QUạ'
    'qUA' + 'J' > 'qUẠ'
    'QuA' + 'J' > 'QuẠ'
    'QUA' + 'J' > 'QUẠ'
    
    c Qu + y diacritic rules
    'quy' + 's' > 'quý'
    'Quy' + 's' > 'Quý'
    'qUy' + 's' > 'qUý'
    'quY' + 's' > 'quÝ'
    'QUy' + 's' > 'QUý'
    'qUY' + 's' > 'qUÝ'
    'QuY' + 's' > 'QuÝ'
    'QUY' + 's' > 'QUÝ'
    'quy' + 'S' > 'quý'
    'Quy' + 'S' > 'Quý'
    'qUy' + 'S' > 'qUý'
    'quY' + 'S' > 'quÝ'
    'QUy' + 'S' > 'QUý'
    'qUY' + 'S' > 'qUÝ'
    'QuY' + 'S' > 'QuÝ'
    'QUY' + 'S' > 'QUÝ'

    'quy' + 'f' > 'quỳ'
    'Quy' + 'f' > 'Quỳ'
    'qUy' + 'f' > 'qUỳ'
    'quY' + 'f' > 'quỲ'
    'QUy' + 'f' > 'QUỳ'
    'qUY' + 'f' > 'qUỲ'
    'QuY' + 'f' > 'QuỲ'
    'QUY' + 'f' > 'QUỲ'
    'quy' + 'F' > 'quỳ'
    'Quy' + 'F' > 'Quỳ'
    'qUy' + 'F' > 'qUỳ'
    'quY' + 'F' > 'quỲ'
    'QUy' + 'F' > 'QUỳ'
    'qUY' + 'F' > 'qUỲ'
    'QuY' + 'F' > 'QuỲ'
    'QUY' + 'F' > 'QUỲ'

    'quy' + 'r' > 'quỷ'
    'Quy' + 'r' > 'Quỷ'
    'qUy' + 'r' > 'qUỷ'
    'quY' + 'r' > 'quỶ'
    'QUy' + 'r' > 'QUỷ'
    'qUY' + 'r' > 'qUỶ'
    'QuY' + 'r' > 'QuỶ'
    'QUY' + 'r' > 'QUỶ'
    'quy' + 'R' > 'quỷ'
    'Quy' + 'R' > 'Quỷ'
    'qUy' + 'R' > 'qUỷ'
    'quY' + 'R' > 'quỶ'
    'QUy' + 'R' > 'QUỷ'
    'qUY' + 'R' > 'qUỶ'
    'QuY' + 'R' > 'QuỶ'
    'QUY' + 'R' > 'QUỶ'

    'quy' + 'x' > 'quỹ'
    'Quy' + 'x' > 'Quỹ'
    'qUy' + 'x' > 'qUỹ'
    'quY' + 'x' > 'quỸ'
    'QUy' + 'x' > 'QUỹ'
    'qUY' + 'x' > 'qUỸ'
    'QuY' + 'x' > 'QuỸ'
    'QUY' + 'x' > 'QUỸ'
    'quy' + 'X' > 'quỹ'
    'Quy' + 'X' > 'Quỹ'
    'qUy' + 'X' > 'qUỹ'
    'quY' + 'X' > 'quỸ'
    'QUy' + 'X' > 'QUỹ'
    'qUY' + 'X' > 'qUỸ'
    'QuY' + 'X' > 'QuỸ'
    'QUY' + 'X' > 'QUỸ'

    'quy' + 'j' > 'quỵ'
    'Quy' + 'j' > 'Quỵ'
    'qUy' + 'j' > 'qUỵ'
    'quY' + 'j' > 'quỴ'
    'QUy' + 'j' > 'QUỵ'
    'qUY' + 'j' > 'qUỴ'
    'QuY' + 'j' > 'QuỴ'
    'QUY' + 'j' > 'QUỴ'
    'quy' + 'J' > 'quỵ'
    'Quy' + 'J' > 'Quỵ'
    'qUy' + 'J' > 'qUỵ'
    'quY' + 'J' > 'quỴ'
    'QUy' + 'J' > 'QUỵ'
    'qUY' + 'J' > 'qUỴ'
    'QuY' + 'J' > 'QuỴ'
    'QUY' + 'J' > 'QUỴ'

    c Gi + a diacritic rules
    'gia' + 's' > 'giá'
    'Gia' + 's' > 'Giá'
    'gIa' + 's' > 'gIá'
    'giA' + 's' > 'giÁ'
    'GIa' + 's' > 'GIá'
    'gIA' + 's' > 'gIÁ'
    'GiA' + 's' > 'GiÁ'
    'GIA' + 's' > 'GIÁ'
    'gia' + 'S' > 'giá'
    'Gia' + 'S' > 'Giá'
    'gIa' + 'S' > 'gIá'
    'giA' + 'S' > 'giÁ'
    'GIa' + 'S' > 'GIá'
    'gIA' + 'S' > 'gIÁ'
    'GiA' + 'S' > 'GiÁ'
    'GIA' + 'S' > 'GIÁ'

    'gia' + 'f' > 'già'
    'Gia' + 'f' > 'Già'
    'gIa' + 'f' > 'gIà'
    'giA' + 'f' > 'giÀ'
    'GIa' + 'f' > 'GIà'
    'gIA' + 'f' > 'gIÀ'
    'GiA' + 'f' > 'GiÀ'
    'GIA' + 'f' > 'GIÀ'
    'gia' + 'F' > 'già'
    'Gia' + 'F' > 'Già'
    'gIa' + 'F' > 'gIà'
    'giA' + 'F' > 'giÀ'
    'GIa' + 'F' > 'GIà'
    'gIA' + 'F' > 'gIÀ'
    'GiA' + 'F' > 'GiÀ'
    'GIA' + 'F' > 'GIÀ'

    'gia' + 'r' > 'giả'
    'Gia' + 'r' > 'Giả'
    'gIa' + 'r' > 'gIả'
    'giA' + 'r' > 'giẢ'
    'GIa' + 'r' > 'GIả'
    'gIA' + 'r' > 'gIẢ'
    'GiA' + 'r' > 'GiẢ'
    'GIA' + 'r' > 'GIẢ'
    'gia' + 'R' > 'giả'
    'Gia' + 'R' > 'Giả'
    'gIa' + 'R' > 'gIả'
    'giA' + 'R' > 'giẢ'
    'GIa' + 'R' > 'GIả'
    'gIA' + 'R' > 'gIẢ'
    'GiA' + 'R' > 'GiẢ'
    'GIA' + 'R' > 'GIẢ'

    'gia' + 'x' > 'giã'
    'Gia' + 'x' > 'Giã'
    'gIa' + 'x' > 'gIã'
    'giA' + 'x' > 'giÃ'
    'GIa' + 'x' > 'GIã'
    'gIA' + 'x' > 'gIÃ'
    'GiA' + 'x' > 'GiÃ'
    'GIA' + 'x' > 'GIÃ'
    'gia' + 'X' > 'giã'
    'Gia' + 'X' > 'Giã'
    'gIa' + 'X' > 'gIã'
    'giA' + 'X' > 'giÃ'
    'GIa' + 'X' > 'GIã'
    'gIA' + 'X' > 'gIÃ'
    'GiA' + 'X' > 'GiÃ'
    'GIA' + 'X' > 'GIÃ'

    'gia' + 'j' > 'giạ'
    'Gia' + 'j' > 'Giạ'
    'gIa' + 'j' > 'gIạ'
    'giA' + 'j' > 'giẠ'
    'GIa' + 'j' > 'GIạ'
    'gIA' + 'j' > 'gIẠ'
    'GiA' + 'j' > 'GiẠ'
    'GIA' + 'j' > 'GIẠ'
    'gia' + 'J' > 'giạ'
    'Gia' + 'J' > 'Giạ'
    'gIa' + 'J' > 'gIạ'
    'giA' + 'J' > 'giẠ'
    'GIa' + 'J' > 'GIạ'
    'gIA' + 'J' > 'gIẠ'
    'GiA' + 'J' > 'GiẠ'
    'GIA' + 'J' > 'GIẠ'

    c Python auto generated rules, see https://github.com/miketvo/vn_kmn_compiler/tree/main/vn_telex
