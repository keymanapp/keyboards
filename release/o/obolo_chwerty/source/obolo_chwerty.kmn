store(&VERSION) '15.0'
store(&NAME) 'Obolo Chwerty'
store(&COPYRIGHT) '© Rogers Katelem Edeh'
store(&TARGETS) 'any'
store(&VISUALKEYBOARD) 'obolo_chwerty.kvks'
store(&LAYOUTFILE) 'obolo_chwerty.keyman-touch-layout'
store(&BITMAP) 'obolo_chwerty.ico'
store(&MESSAGE) 'A keyboard layout (chwerty) for the Obolo language of Nigeria. It covers the need of every dialect of Obolo.'
store(&KMW_HELPTEXT) 'A simple keyboard layout (chwerty) to help you type very easily in Obolo language.'
store(&KEYBOARDVERSION) '1.6'
store(&KMW_EMBEDCSS) 'obolo_chwerty.css'

begin Unicode > use(main)
begin NewContext > use(NewContext)
begin PostKeystroke > use(PostKeystroke)

store(digit) '0'..'9'

group(NewContext) readonly
    nomatch > use(detectStartOfSentence)
group(PostKeystroke) readonly
    if(&layer = 'caps') > context
    if(&layer = 'alt') > context
    if(&layer = 'num') > context
    if(&newLayer = "") if(&layer = 'num') any(digit) > context
    if(&newLayer = "") > use(detectStartOfSentence)

group(detectStartOfSentence) readonly
    store(sentencePunctuation) '.?!‽⁈'
    store(nl) d10 d13
    store(enclose) U+0029 U+0027 U+0022
    nul > layer('shift')
    any(sentencePunctuation) ' ' > layer('shift')
    any(sentencePunctuation) any(enclose) ' ' > layer('shift')
    any(nl) > layer('shift')
    nomatch > layer('default')

store(accentibles) 'AaEeIiMmNnỌọOoUu◌̄'
store(accents) [T_GRV] [T_ACU] [T_CCM] [T_CRN] [SHIFT T_GRV] [SHIFT T_ACU] [SHIFT T_CCM] [SHIFT T_CRN] [CAPS T_GRV] [CAPS T_ACU] [CAPS T_CCM] [CAPS T_CRN] c [K_BKQUOTE] [K_BKSLASH]
store(nasals) 'mnMN'
store(nnas) [NCAPS T_CCM] [NCAPS T_CRN] [SHIFT NCAPS T_CCM] [SHIFT NCAPS T_CRN] [CAPS T_CCM] [CAPS T_CRN] c [K_BKSLASH] [SHIFT K_BKSLASH]
store(vow) 'aeiouAEIOU'
store(grave) 'àèìòùÀÈÌÒÙ'
store(acute) 'áéíóúÁÉÍÓÚ'
store(circum) 'âêîôûÂÊÎÔÛ'
store(caron) 'ǎěǐǒǔǍĚǏǑǓ'
store(acnasals) 'ḿńḾŃ'
store(spguy) 'mnọMNỌ'
store(spguyop) 'ḿǹộḾǸỘ'
store(combdiac) U+1DC8 U+0300 U+0301 U+0302 U+030C U+0304
store(erase) [NCAPS K_BKSP] [NCAPS SHIFT K_BKSP] [CAPS K_BKSP] [NCAPS ALT K_BKSP]
store(gravekeys) [NCAPS T_GRV] [SHIFT NCAPS T_GRV] [CAPS T_GRV] [K_BKQUOTE]
store(acutekeys) [NCAPS T_ACU] [SHIFT NCAPS T_ACU] [CAPS T_ACU] [SHIFT K_BKQUOTE]
store(circumkeys) [NCAPS T_CCM] [SHIFT NCAPS T_CCM] [CAPS T_CCM] [K_BKSLASH]
store(caronkeys) [NCAPS T_CRN] [SHIFT NCAPS T_CRN] [CAPS T_CRN] [SHIFT K_BKSLASH]
store(combdiackeys) [ALT T_CGRV] [ALT T_CACU] [ALT T_CGAG] [ALT T_CCCM] [ALT T_CCRN] [ALT T_CMCR] [ALT K_6] [ALT K_HYPHEN]
c [ALT K_BKQUOTE] [ALT K_BKSLASH] [ALT K_0]

group(main) using keys

c Shift key in alternate layer
nul + [ALT T_SHIFT] > layer("shift")

any(sentencePunctuation) ' ' + [ALT T_SHIFT] > context layer("shift")
any(nl) + [ALT T_SHIFT] > context layer("shift")
+ [ALT T_SHIFT] > layer("default")

c caps
+ [CAPS K_A] > 'A'
+ [CAPS K_B] > 'B'
+ [CAPS K_D] > 'D'
+ [CAPS K_E] > 'E'
+ [CAPS K_F] > 'F'
+ [CAPS K_G] > 'G'
+ [CAPS K_I] > 'I'
+ [CAPS K_J] > 'J'
+ [CAPS K_K] > 'K'
+ [CAPS K_L] > 'L'
+ [CAPS K_M] > 'M'
+ [CAPS K_N] > 'N'
+ [CAPS K_O] > 'O'
+ [CAPS K_P] > 'P'
+ [CAPS K_R] > 'R'
+ [CAPS K_S] > 'S'
+ [CAPS K_T] > 'T'
+ [CAPS K_U] > 'U'
+ [CAPS K_V] > 'V'
+ [CAPS K_W] > 'W'
+ [CAPS K_Y] > 'Y'
+ [CAPS K_Z] > 'Z'

+ [CAPS K_Q] > U+0043 U+0048
+ [CAPS K_H] > U+0053 U+0048
+ [CAPS K_X] > U+1ECC
+ [CAPS K_C] > U+004E U+0304

+ [NCAPS K_Q] > U+0063 U+0068
+ [NCAPS K_H] > U+0073 U+0068
+ [NCAPS K_X] > U+1ECD
+ [NCAPS K_C] > U+006E U+0304

+ [SHIFT CAPS K_Q] > U+0043 U+0068
+ [SHIFT CAPS K_H] > U+0053 U+0068
+ [SHIFT CAPS K_X] > U+1ECD
+ [SHIFT CAPS K_C] > U+006E U+0304

+ [SHIFT NCAPS K_Q] > U+0043 U+0068
+ [SHIFT NCAPS K_H] > U+0053 U+0068
+ [SHIFT NCAPS K_X] > U+1ECC
+ [SHIFT NCAPS K_C] > U+004E U+0304

+ [SHIFT K_6] > U+20A6
+ [T_SPACE] > U+0020

c layer alt
+ [ALT K_6] > U+1DC8
c + [ALT K_BKSLASH] > U+0302
+ [ALT K_0] > U+25CC
+ [ALT K_HYPHEN] > U+0304
+ [ALT T_CGRV] > U+0300
+ [ALT T_CACU] > U+0301
+ [ALT T_CGAG] > U+1DC8
+ [ALT T_CCCM] > U+0302
+ [ALT T_CCRN] > U+030C
+ [ALT T_CMCR] > U+0304

c Line Feed (LF), New Line (NL), End of Line (EOL)
+ [ALT K_ENTER] > U+000A
+ [ALT T_HTAB] > U+0009

c English equivalent (for desktop)
']' + [CAPS K_C] > U+0043
']' + [NCAPS K_C] > U+0063
']' + [SHIFT NCAPS K_C] > U+0043
']' + [SHIFT CAPS K_C] > U+0063

']' + [CAPS K_X] > U+0058
']' + [NCAPS K_X] > U+0078
']' + [SHIFT NCAPS K_X] > U+0058
']' + [SHIFT CAPS K_X] > U+0078

']' + [CAPS K_H] > U+0048
']' + [NCAPS K_H] > U+0068
']' + [SHIFT NCAPS K_H] > U+0048
']' + [SHIFT CAPS K_H] > U+0068

']' + [CAPS K_Q] > U+0051
']' + [NCAPS K_Q] > U+0071
']' + [SHIFT NCAPS K_Q] > U+0051
']' + [SHIFT CAPS K_Q] > U+0071

']' + [SHIFT K_6] > '^'

c space modifier accents
']' + [K_BKQUOTE] > U+0060
']' + [SHIFT K_BKQUOTE] > U+00B4
']' + [K_BKSLASH] > U+02C6
']' + [SHIFT K_BKSLASH] > U+02C7
']' + [K_HYPHEN] > U+00AF

c '¯' + [K_BKQUOTE] > U+0304
c 'ˆ' + [K_BKQUOTE] > U+0302

C ']' + [NCAPS K_HYPHEN] > "¯"
C ']' + [CAPS K_HYPHEN] > "¯"
C ']' + [SHIFT CAPS K_HYPHEN] > "¯"
C ']' + [SHIFT NCAPS K_HYPHEN] > "¯"

c special symbols on desktop
'-' + [K_BKQUOTE] > "–"
'–' + [K_BKQUOTE] > "—"
'-' + [K_BKSLASH] > "→"
'=' + [K_BKSLASH] > "⇒"
'x' + [K_BKSLASH] > "×"
'/' + [K_BKSLASH] > "÷"
'0' + [K_BKQUOTE] > "°"
'+' + [K_BKQUOTE] > "†"
'%' + [K_BKQUOTE] > "‰"
'‰' + [K_BKQUOTE] > "‱"
'?' + [K_BKQUOTE] > "‽"
'‽' + [K_BKQUOTE] > "⁈"

c make up for
'm' + any(gravekeys) > 'm̀'
'M' + any(gravekeys) > 'M̀'

'n' + any(gravekeys) > 'ǹ'
'N' + any(gravekeys) > 'Ǹ'

'ọ' + any(gravekeys) > 'ọ̀'
'Ọ' + any(gravekeys) > 'Ọ̀'

'ọ' + any(acutekeys) > 'ọ́'
'Ọ' + any(acutekeys) > 'Ọ́'

'ọ' + any(circumkeys) > 'ộ'
'Ọ' + any(circumkeys) > 'Ộ'

'ọ' + any(caronkeys) > 'ọ̌'
'Ọ' + any(caronkeys) > 'Ọ̌'

'◌' + any(gravekeys) > U+25CC U+0300
'◌' + any(acutekeys) > U+25CC U+0301
'◌' + any(circumkeys) > U+25CC U+0302
'◌' + any(caronkeys) > U+25CC U+030C

c '◌' + [ALT K_HYPHEN] > U+25CC U+0304
c '@' + [K_BKQUOTE] > U+25CC
c '◌' + [SHIFT K_HYPHEN] > U+25CC U+0304

'n̄' + [K_BKSLASH] > U+00F1
'N̄' + [K_BKSLASH] > U+00D1

's' + [K_BKSLASH] > U+1E63
'S' + [K_BKSLASH] > U+1E62

c Handle decomposed
'ọ' + any(gravekeys) > 'ọ̀'
'Ọ' + any(gravekeys) > 'Ọ̀'

'ọ' + any(acutekeys) > 'ọ́'
'Ọ' + any(acutekeys) > 'Ọ́'

'ọ' + any(circumkeys) > 'ộ'
'Ọ' + any(circumkeys) > 'Ộ'

'ọ' + any(caronkeys) > 'ọ̌'
'Ọ' + any(caronkeys) > 'Ọ̌'

c any and index
any(vow) + any(gravekeys) > index(grave,1)
any(vow) + any(acutekeys) > index(acute,1)
any(vow) + any(circumkeys) > index(circum,1)
any(vow) + any(caronkeys) > index(caron,1)
any(nasals) + any(acutekeys) > index(acnasals,1)

c change backspace behaviour for true diagraphs
'ch' + any(erase) > nul
'Ch' + any(erase) > nul
'CH' + any(erase) > nul
'sh' + any(erase) > nul
'Sh' + any(erase) > nul
'SH' + any(erase) > nul
'n̄' + any(erase) > nul
'N̄' + any(erase) > nul

c virtual keys
any(grave) + any(erase) > index(vow,1)
any(acute) + any(erase) > index(vow,1)
any(circum) + any(erase) > index(vow,1)
any(caron) + any(erase) > index(vow,1)
any(spguyop) + any(erase) > index(spguy,1)

any(nasals) + any(nnas) > context beep c prevent certain accents on nasal consonants
any(combdiac) + any(combdiackeys) > context beep c prevent diacritics stacking
c notany(accentibles) + any(accents) > context beep c prevent diacritics stacking (on empty space, and plain consonants)
